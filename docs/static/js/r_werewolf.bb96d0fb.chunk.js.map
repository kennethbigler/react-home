{"version":3,"file":"static/js/r_werewolf.bb96d0fb.chunk.js","mappings":"gMAOaA,EAAoB,CAC/B,CACEC,KAAM,cACNC,YAAa,4DACbC,MAAO,GAET,CACEF,KAAM,OACNC,YACE,kFACFC,MAAO,GAET,CACEF,KAAM,YACNC,YACE,sGACFC,MAAO,GAET,CACEF,KAAM,WACNC,YACE,4IACFC,MAAO,GAET,CACEF,KAAM,kBACNC,YACE,4FACFC,MAAO,GAET,CACEF,KAAM,QACNC,YACE,kEACFC,MAAO,GAET,CACEF,KAAM,QACNC,YACE,sFACFC,MAAO,GAET,CACEF,KAAM,YACNC,YACE,mEACFC,MAAO,GAET,CACEF,KAAM,SACNC,YACE,yEACFC,MAAO,GAET,CACEF,KAAM,WACNC,YACE,+FACFC,MAAO,GAET,CACEF,KAAM,SACNC,YACE,uEACFC,MAAO,GAET,CACEF,KAAM,WACNC,YAAa,qDACbC,MAAO,GAET,CACEF,KAAM,SACNC,YACE,mGACFC,MAAO,GAET,CACEF,KAAM,OACNC,YACE,4GACFC,MAAO,GAET,CACEF,KAAM,YACNC,YACE,gGACFC,MAAO,GAET,CACEF,KAAM,YACNC,YACE,kFACFC,MAAO,GAET,CACEF,KAAM,QACNC,YACE,gGACFC,MAAO,GAET,CACEF,KAAM,QACNC,YAAa,0BACbC,MAAO,GAET,CACEF,KAAM,QACNC,YAAa,0DACbC,MAAO,EACPC,MAAO,GAET,CACEH,KAAM,gBACNC,YAAa,gDACbC,MAAO,GAET,CACEF,KAAM,UACNC,YACE,wEACFC,MAAO,GAET,CACEF,KAAM,cACNC,YACE,mEACFC,MAAO,GAET,CACEF,KAAM,WACNC,YAAa,0CACbC,MAAO,EACPC,MAAO,IAET,CACEH,KAAM,QACNC,YAAa,4DACbC,OAAQ,GAEV,CACEF,KAAM,WACNC,YAAa,yDACbC,OAAQ,GAEV,CACEF,KAAM,kBACNC,YACE,yFACFC,OAAQ,GAEV,CACEF,KAAM,aACNC,YACE,gGACFC,OAAQ,GAEV,CACEF,KAAM,QACNC,YACE,4HACFC,OAAQ,GAEV,CACEF,KAAM,eACNC,YACE,iGACFC,OAAQ,IAICE,EAAoB,CAC/B,CACEJ,KAAM,cACNC,YACE,iGACFC,MAAO,GAET,CACEF,KAAM,UACNC,YACE,iIACFC,MAAO,GAET,CACEF,KAAM,SACNC,YACE,kEACFC,OAAQ,GAEV,CACEF,KAAM,SACNC,YACE,8HACFC,OAAQ,GAEV,CACEF,KAAM,UACNC,YACE,+GACFC,OAAQ,EACRC,MAAO,IAIEE,EAAiB,CAC5B,CACEL,KAAM,aACNC,YACE,0JACFC,OAAQ,GAEV,CACEF,KAAM,WACNC,YACE,yHACFC,OAAQ,GAEV,CACEF,KAAM,WACNC,YACE,+EACFC,OAAQ,EACRC,MAAO,IAET,CACEH,KAAM,SACNC,YACE,8EACFC,OAAQ,GAEV,CACEF,KAAM,YACNC,YACE,mGACFC,OAAQ,GAEV,CACEF,KAAM,YACNC,YAAa,+DACbC,OAAQ,I,sDCpONI,EAAuC,CAC3CC,QAAS,OACTC,eAAgB,gBAChBC,MAAO,OAEHC,EAAkC,CAAEH,QAAS,QAkCnD,EAhCoDI,EAAAA,MAClD,SAACC,GACC,IACEC,EAOED,EAPFC,SACAC,EAMEF,EANFE,YACAC,EAKEH,EALFG,aACAf,EAIEY,EAJFZ,KACAC,EAGEW,EAHFX,YACAC,EAEEU,EAFFV,MACAC,EACES,EADFT,MAGF,OACE,UAACa,EAAA,EAAD,CACEH,SAAUA,IAAaC,EACvBG,SAAUF,EAAaD,GAFzB,WAIE,SAACI,EAAA,EAAD,CAAkBC,YAAY,SAACC,EAAA,EAAD,IAA9B,UACE,iBAAKC,MAAOf,EAAZ,WACE,SAACgB,EAAA,EAAD,CAAYD,MAAOX,EAAnB,SAAgCV,IAC/BG,IACC,UAACmB,EAAA,EAAD,CAAYD,MAAOX,EAAnB,oBAAuCP,MAEzC,UAACmB,EAAA,EAAD,CAAYD,MAAOX,EAAnB,mBAAsCR,WAG1C,SAACqB,EAAA,EAAD,UAAmBtB,MAGxB,ICaH,EA1D2BU,EAAAA,MAAW,WACpC,MAAgCA,EAAAA,SAAe,IAA/C,eAAOE,EAAP,KAAiBW,EAAjB,KAEMT,EAAeJ,EAAAA,aACnB,SAACc,GAAD,OACE,SAACC,EAA8CC,GAC7CH,EAAYG,EAAMF,EAAQ,GAC3B,CAHH,GAIA,CAACD,IAGGI,EAAe,SAACC,EAAYC,GAChC,IAAQ9B,EAAoC6B,EAApC7B,KAAMC,EAA8B4B,EAA9B5B,YAAaC,EAAiB2B,EAAjB3B,MAAOC,EAAU0B,EAAV1B,MAElC,OACE,SAAC,EAAD,CAGIU,SAAAA,EACAb,KAAAA,EACAC,YAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAW,YAAY,GAAD,OAAKgB,GAChBf,aAAAA,GARGe,EAYV,EAEKC,EAAiBhC,EAAUiC,IAAIJ,GAC/BK,EAAiB7B,EAAU4B,IAAIJ,GAC/BM,EAAa7B,EAAO2B,IAAIJ,GAE9B,OACE,iCACE,SAACN,EAAA,EAAD,CAAYa,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,uBAGA,mBACA,SAACf,EAAA,EAAD,CAAYa,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,uBAGCN,GACD,mBACA,SAACT,EAAA,EAAD,CAAYa,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,uBAGCJ,GACD,mBACA,SAACX,EAAA,EAAD,CAAYa,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,oBAGCH,IAGN,G","sources":["constants/werewolf.ts","components/resume/werewolf/WerewolfPanel.tsx","components/resume/werewolf/Werewolf.tsx"],"sourcesContent":["export interface Role {\n  name: string;\n  description: string;\n  value: number;\n  count?: number;\n}\n\nexport const villagers: Role[] = [\n  {\n    name: \"Mystic Seer\",\n    description: \"Each night, point to a player and learn their exact role.\",\n    value: 9,\n  },\n  {\n    name: \"Seer\",\n    description:\n      \"Each night choose a player to learn if that player is a Villager or a Werewolf.\",\n    value: 7,\n  },\n  {\n    name: \"Mentalist\",\n    description:\n      \"Each night you may point to two players, and are told if those players are on the same team or not.\",\n    value: 6,\n  },\n  {\n    name: \"Revealer\",\n    description:\n      \"Each night you may point to a player. If that player is a Werewolf, that player is eliminated. If that player is not, you are eliminated.\",\n    value: 4,\n  },\n  {\n    name: \"Apprentice Seer\",\n    description:\n      \"If the Seer is eliminated, you become the Seer, waking each night to look for Werewolves.\",\n    value: 4,\n  },\n  {\n    name: \"Witch\",\n    description:\n      \"You may save or eliminate a player at night once each per game.\",\n    value: 4,\n  },\n  {\n    name: \"Drunk\",\n    description:\n      \"You are a Villager until the 3rd night, when you sober up and learn your real role.\",\n    value: 4,\n  },\n  {\n    name: \"Bodyguard\",\n    description:\n      \"Each night, choose a player who cannot be eliminated that night.\",\n    value: 3,\n  },\n  {\n    name: \"Prince\",\n    description:\n      \"If you are voted to be eliminated, your role is revealed and you stay.\",\n    value: 3,\n  },\n  {\n    name: \"Diseased\",\n    description:\n      \"If you are eliminated by Werewolves, they don't get to eliminate anyone the following night.\",\n    value: 3,\n  },\n  {\n    name: \"Hunter\",\n    description:\n      \"If you are eliminated, you may immediately eliminate another player.\",\n    value: 3,\n  },\n  {\n    name: \"Huntress\",\n    description: \"You may eliminate a player at night once per game.\",\n    value: 3,\n  },\n  {\n    name: \"Priest\",\n    description:\n      \"One night per game, choose a player to be protected. That player may not be eliminated at night.\",\n    value: 3,\n  },\n  {\n    name: \"P.I.\",\n    description:\n      \"One night per game, choose a player. You'll be told if that player or one of his neighbors is a Werewolf.\",\n    value: 3,\n  },\n  {\n    name: \"Tough Guy\",\n    description:\n      \"If the Werewolves attempt to eliminate you, you are not eliminated until the following night.\",\n    value: 3,\n  },\n  {\n    name: \"Aura Seer\",\n    description:\n      \"Choose a player each night to see if that player is not a Werewolf or Villager.\",\n    value: 3,\n  },\n  {\n    name: \"Ghost\",\n    description:\n      \"The first night, you are eliminated. Communicate to the players with single letters each day.\",\n    value: 2,\n  },\n  {\n    name: \"Mayor\",\n    description: \"Your vote counts twice.\",\n    value: 2,\n  },\n  {\n    name: \"Mason\",\n    description: \"The first night, wake up to see who the other Mason is.\",\n    value: 2,\n    count: 3,\n  },\n  {\n    name: \"Village Idiot\",\n    description: \"You always vote for players to be eliminated.\",\n    value: 2,\n  },\n  {\n    name: \"Old Hag\",\n    description:\n      \"Each night, choose a player to leave the village during the next day.\",\n    value: 1,\n  },\n  {\n    name: \"Spellcaster\",\n    description:\n      \"Each night, choose a player who may not speak the following day.\",\n    value: 1,\n  },\n  {\n    name: \"Villager\",\n    description: \"Find the Werewolves and eliminate them.\",\n    value: 1,\n    count: 14,\n  },\n  {\n    name: \"Lycan\",\n    description: \"You are a Villager, but appear to the seer as a Werewolf.\",\n    value: -1,\n  },\n  {\n    name: \"Pacifist\",\n    description: \"You must always vote for players to not be eliminated.\",\n    value: -1,\n  },\n  {\n    name: \"Doppelg√§nger\",\n    description:\n      \"The first night, choose a player. When that player is eliminated you become that role.\",\n    value: -2,\n  },\n  {\n    name: \"Mad Bomber\",\n    description:\n      \"If you are eliminated, the players immediately to your left and right are eliminated as well.\",\n    value: -2,\n  },\n  {\n    name: \"Cupid\",\n    description:\n      \"The first night, choose two players to be linked together. If one of them is eliminated, the other is eliminated as well.\",\n    value: -3,\n  },\n  {\n    name: \"Troublemaker\",\n    description:\n      \"One night per game, stir up trouble by calling for players to be eliminated the following day.\",\n    value: -3,\n  },\n];\n\nexport const outsiders: Role[] = [\n  {\n    name: \"Cult Leader\",\n    description:\n      \"Each night, choose a player to join your cult. If all alive players are in your cult, you win.\",\n    value: 1,\n  },\n  {\n    name: \"Hoodlum\",\n    description:\n      \"Choose 2 players on the first night. To win, they must be eliminated and you must still be in the game at the end of the game.\",\n    value: 0,\n  },\n  {\n    name: \"Tanner\",\n    description:\n      \"You hate your job and your life. You win if you are eliminated.\",\n    value: -2,\n  },\n  {\n    name: \"Cursed\",\n    description:\n      \"You are on the Village team unless you are targeted for elimination by the Werewolves, at which time you become a Werewolf.\",\n    value: -3,\n  },\n  {\n    name: \"Vampire\",\n    description:\n      \"Each night, choose a player. That player is eliminated when a player gets their 2nd accusation the next day.\",\n    value: -7,\n    count: 8,\n  },\n];\n\nexport const wolves: Role[] = [\n  {\n    name: \"Alpha Wolf\",\n    description:\n      \"Once per game, following the elimination of a werewolf during the day, you may turn the Werewolves' target into a Werewolf instead of eliminating them.\",\n    value: -9,\n  },\n  {\n    name: \"Wolf Cub\",\n    description:\n      \"Each night, wake with the Werewolves. If you are eliminated, the Werewolves eliminate two players the following night.\",\n    value: -8,\n  },\n  {\n    name: \"Werewolf\",\n    description:\n      \"Each night, wake with the other Werewolves and choose a player to eliminate.\",\n    value: -6,\n    count: 12,\n  },\n  {\n    name: \"Minion\",\n    description:\n      \"You know who the Werewolves are, but you do not wake up with them at night.\",\n    value: -6,\n  },\n  {\n    name: \"Lone Wolf\",\n    description:\n      \"Each night, wake with the other Werewolves. You only win if you are the last player in the game.\",\n    value: -5,\n  },\n  {\n    name: \"Sorceress\",\n    description: \"Each night, look for the Seer. You are on the werewolf team.\",\n    value: -3,\n  },\n];\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface WerewolfPanelProps {\n  expanded?: string;\n  expandedKey: string;\n  handleChange: (\n    panel: string\n  ) => (_event: React.SyntheticEvent<Element, Event>, exp?: boolean) => void;\n  name: string;\n  description: string;\n  value: number;\n  count?: number;\n}\n\nconst containerStyles: React.CSSProperties = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  width: \"95%\",\n};\nconst itemStyles: React.CSSProperties = { display: \"flex\" };\n\nconst WerewolfPanel: React.FC<WerewolfPanelProps> = React.memo(\n  (props: WerewolfPanelProps) => {\n    const {\n      expanded,\n      expandedKey,\n      handleChange,\n      name,\n      description,\n      value,\n      count,\n    } = props;\n\n    return (\n      <Accordion\n        expanded={expanded === expandedKey}\n        onChange={handleChange(expandedKey)}\n      >\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <div style={containerStyles}>\n            <Typography style={itemStyles}>{name}</Typography>\n            {count && (\n              <Typography style={itemStyles}>Count: {count}</Typography>\n            )}\n            <Typography style={itemStyles}>Cost: {value}</Typography>\n          </div>\n        </AccordionSummary>\n        <AccordionDetails>{description}</AccordionDetails>\n      </Accordion>\n    );\n  }\n);\n\nexport default WerewolfPanel;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  Role,\n  villagers,\n  outsiders,\n  wolves,\n} from \"../../../constants/werewolf\";\nimport WerewolfPanel from \"./WerewolfPanel\";\n\nconst Werewolf: React.FC = React.memo(() => {\n  const [expanded, setExpanded] = React.useState(\"\");\n\n  const handleChange = React.useCallback(\n    (panel: string) =>\n      (_event: React.SyntheticEvent<Element, Event>, exp?: boolean): void => {\n        setExpanded(exp ? panel : \"\");\n      },\n    [setExpanded]\n  );\n\n  const getRolePanel = (role: Role, i: number) => {\n    const { name, description, value, count } = role;\n\n    return (\n      <WerewolfPanel\n        key={i}\n        {...{\n          expanded,\n          name,\n          description,\n          value,\n          count,\n          expandedKey: `${i}`,\n          handleChange,\n        }}\n      />\n    );\n  };\n\n  const villagerPanels = villagers.map(getRolePanel);\n  const outsiderPanels = outsiders.map(getRolePanel);\n  const wolfPanels = wolves.map(getRolePanel);\n\n  return (\n    <>\n      <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n        Werewolf\n      </Typography>\n      <hr />\n      <Typography variant=\"h3\" component=\"h2\" gutterBottom>\n        Villagers\n      </Typography>\n      {villagerPanels}\n      <hr />\n      <Typography variant=\"h3\" component=\"h2\" gutterBottom>\n        Outsiders\n      </Typography>\n      {outsiderPanels}\n      <hr />\n      <Typography variant=\"h3\" component=\"h2\" gutterBottom>\n        Wolves\n      </Typography>\n      {wolfPanels}\n    </>\n  );\n});\n\nexport default Werewolf;\n"],"names":["villagers","name","description","value","count","outsiders","wolves","containerStyles","display","justifyContent","width","itemStyles","React","props","expanded","expandedKey","handleChange","Accordion","onChange","AccordionSummary","expandIcon","ExpandMore","style","Typography","AccordionDetails","setExpanded","panel","_event","exp","getRolePanel","role","i","villagerPanels","map","outsiderPanels","wolfPanels","variant","component","gutterBottom"],"sourceRoot":""}