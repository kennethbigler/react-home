{"version":3,"file":"static/js/r_travel.372ec9d1.chunk.js","mappings":"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","sources":["apis/DateHelper.ts","constants/travel.ts","components/resume/travel-map/TravelTable.tsx","components/resume/travel-map/WorldMap.tsx","components/resume/travel-map/TravelMap.tsx"],"sourcesContent":["const months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport type DateScale =\n  | \"year\"\n  | \"years\"\n  | \"month\"\n  | \"months\"\n  | \"days\"\n  | undefined;\nexport type FormatOutput = \"YYYY\" | \"MMMM Y\" | \"'YY\";\nexport interface DateObj {\n  year: number;\n  month: number;\n  day: number;\n  diff: (dateObj: DateObj, scale: DateScale) => number;\n  format: (output: FormatOutput) => string;\n}\n\n/** Takes format YYYY-MM-DD and creates a DateObj */\nconst dateHelper = (date?: DateObj | string): DateObj => {\n  let year: number;\n  let month: number;\n  let day: number;\n\n  if (typeof date === \"object\") {\n    return date;\n  }\n  if (typeof date === \"string\") {\n    const [y, m, d] = date.split(\"-\");\n    year = Number(y);\n    month = Number(m) - 1 || 0;\n    day = Number(d) || 1;\n  } else {\n    const now = new Date();\n    year = now.getFullYear();\n    month = now.getMonth();\n    day = now.getDate();\n  }\n\n  const diff = (dateObj: DateObj, scale: DateScale = \"days\"): number => {\n    switch (scale) {\n      case \"year\":\n      case \"years\":\n        return year - dateObj.year;\n      case \"month\":\n      case \"months\":\n        return 12 * (year - dateObj.year) + (month - dateObj.month);\n      default:\n        return (\n          365 * (year - dateObj.year) +\n          30 * (month - dateObj.month) +\n          (day - dateObj.day)\n        );\n    }\n  };\n\n  const format = (output: FormatOutput): string => {\n    switch (output) {\n      case \"YYYY\":\n        return year.toString();\n      case \"MMMM Y\":\n        return `${months[month]} ${year}`;\n      case \"'YY\":\n        return `'${year.toString().slice(-2)}`;\n      default:\n        // eslint-disable-next-line no-console\n        console.error(\"unknown date format: \", output);\n        return \"\";\n    }\n  };\n\n  return {\n    year,\n    month,\n    day,\n    diff,\n    format,\n  };\n};\n\nexport default dateHelper;\n","import dateObj, { DateObj } from \"../apis/DateHelper\";\n\ninterface Country {\n  continent: string;\n  flag: string;\n  code: string;\n}\nexport type Countries = Record<string, Country>;\n\nconst countries: Countries = {\n  Austria: { continent: \"EU\", flag: \"ğŸ‡¦ğŸ‡¹\", code: \"at\" },\n  Bahamas: { continent: \"NA\", flag: \"ğŸ‡§ğŸ‡¸\", code: \"bs\" },\n  Canada: { continent: \"NA\", flag: \"ğŸ‡¨ğŸ‡¦\", code: \"ca\" },\n  Denmark: { continent: \"EU\", flag: \"ğŸ‡©ğŸ‡°\", code: \"dk\" },\n  Estonia: { continent: \"EU\", flag: \"ğŸ‡ªğŸ‡ª\", code: \"ee\" },\n  Finland: { continent: \"EU\", flag: \"ğŸ‡«ğŸ‡®\", code: \"fi\" },\n  France: { continent: \"EU\", flag: \"ğŸ‡«ğŸ‡·\", code: \"fr\" },\n  Germany: { continent: \"EU\", flag: \"ğŸ‡©ğŸ‡ª\", code: \"de\" },\n  Greece: { continent: \"EU\", flag: \"ğŸ‡¬ğŸ‡·\", code: \"gr\" },\n  Iceland: { continent: \"EU\", flag: \"ğŸ‡®ğŸ‡¸\", code: \"is\" },\n  Ireland: { continent: \"EU\", flag: \"ğŸ‡®ğŸ‡ª\", code: \"ie\" },\n  Italy: { continent: \"EU\", flag: \"ğŸ‡®ğŸ‡¹\", code: \"it\" },\n  Jamaica: { continent: \"NA\", flag: \"ğŸ‡¯ğŸ‡²\", code: \"jm\" },\n  Mexico: { continent: \"NA\", flag: \"ğŸ‡²ğŸ‡½\", code: \"mx\" },\n  Netherlands: { continent: \"EU\", flag: \"ğŸ‡³ğŸ‡±\", code: \"nl\" },\n  Norway: { continent: \"EU\", flag: \"ğŸ‡³ğŸ‡´\", code: \"no\" },\n  Poland: { continent: \"EU\", flag: \"ğŸ‡µğŸ‡±\", code: \"pl\" },\n  Portugal: { continent: \"EU\", flag: \"ğŸ‡µğŸ‡¹\", code: \"pt\" },\n  Russia: { continent: \"EU\", flag: \"ğŸ‡·ğŸ‡º\", code: \"ru\" },\n  Spain: { continent: \"EU\", flag: \"ğŸ‡ªğŸ‡¸\", code: \"es\" },\n  Sweden: { continent: \"EU\", flag: \"ğŸ‡¸ğŸ‡ª\", code: \"se\" },\n  Switzerland: { continent: \"EU\", flag: \"ğŸ‡¨ğŸ‡­\", code: \"ch\" },\n  Turkey: { continent: \"EU\", flag: \"ğŸ‡¹ğŸ‡·\", code: \"tr\" },\n  \"United Kingdom\": { continent: \"EU\", flag: \"ğŸ‡¬ğŸ‡§\", code: \"gb\" },\n  \"United States of America\": { continent: \"NA\", flag: \"ğŸ‡ºğŸ‡¸\", code: \"us\" },\n  \"British Virgin Islands\": { continent: \"NA\", flag: \"ğŸ‡»ğŸ‡¬\", code: \"vg\" },\n  \"Cayman Islands\": { continent: \"NA\", flag: \"ğŸ‡°ğŸ‡¾\", code: \"ky\" },\n  \"U.S. Virgin Islands\": { continent: \"NA\", flag: \"ğŸ‡»ğŸ‡®\", code: \"vi\" },\n  Gibraltar: { continent: \"EU\", flag: \"ğŸ‡¬ğŸ‡®\", code: \"gi\" },\n  Malta: { continent: \"EU\", flag: \"ğŸ‡²ğŸ‡¹\", code: \"mt\" },\n  Monaco: { continent: \"EU\", flag: \"ğŸ‡²ğŸ‡¨\", code: \"mc\" },\n  Vatican: { continent: \"EU\", flag: \"ğŸ‡»ğŸ‡¦\", code: \"va\" },\n};\n\nconst ships = [\n  \"Disney Magic\",\n  \"Disney Wonder\",\n  \"Disney Dream\",\n  \"Disney Fantasy\",\n  \"Disney Wish\",\n] as const;\nexport type Ships = typeof ships[number];\n\ninterface Cruise {\n  departure: DateObj;\n  nights: number;\n  name: string;\n  ship: Ships;\n  concierge: boolean;\n}\n\nexport const cruises: Cruise[] = [\n  {\n    departure: dateObj(\"2004-04\"),\n    nights: 3,\n    name: \"Bahamas\",\n    ship: \"Disney Wonder\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2005-06\"),\n    nights: 7,\n    name: \"Mexican Riviera\",\n    ship: \"Disney Magic\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2011-06\"),\n    nights: 11,\n    name: \"Mediterranean\",\n    ship: \"Disney Magic\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2012-06\"),\n    nights: 7,\n    name: \"Alaska\",\n    ship: \"Disney Wonder\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2013-07\"),\n    nights: 12,\n    name: \"Mediterranean\",\n    ship: \"Disney Magic\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2014-07\"),\n    nights: 7,\n    name: \"Alaska\",\n    ship: \"Disney Wonder\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2015-07\"),\n    nights: 14,\n    name: \"Northern EU Capitals\",\n    ship: \"Disney Magic\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2015-08\"),\n    nights: 7,\n    name: \"Dover-Barcelona\",\n    ship: \"Disney Magic\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2015-12\"),\n    nights: 4,\n    name: \"Bahamas\",\n    ship: \"Disney Dream\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2016-06\"),\n    nights: 12,\n    name: \"Iceland/Norway\",\n    ship: \"Disney Magic\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2016-12\"),\n    nights: 7,\n    name: \"Eastern Caribbean\",\n    ship: \"Disney Fantasy\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2017-05\"),\n    nights: 15,\n    name: \"East Bound Transatlantic\",\n    ship: \"Disney Magic\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2017-12\"),\n    nights: 7,\n    name: \"Western Caribbean\",\n    ship: \"Disney Fantasy\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2018-05\"),\n    nights: 13,\n    name: \"East Bound Transatlantic\",\n    ship: \"Disney Magic\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2018-07\"),\n    nights: 10,\n    name: \"Mediterranean\",\n    ship: \"Disney Magic\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2018-11\"),\n    nights: 7,\n    name: \"East Coast NY-FL-NY\",\n    ship: \"Disney Magic\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2019-09\"),\n    nights: 10,\n    name: \"West Bound Transatlantic\",\n    ship: \"Disney Magic\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2019-11\"),\n    nights: 7,\n    name: \"Western Caribbean\",\n    ship: \"Disney Fantasy\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2021-12\"),\n    nights: 7,\n    name: \"Eastern Caribbean\",\n    ship: \"Disney Fantasy\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2022-04\"),\n    nights: 10,\n    name: \"Hawaii: Vancouver-Honolulu\",\n    ship: \"Disney Wonder\",\n    concierge: true,\n  },\n];\n\nexport const NA: string[] = [];\nexport const EU: string[] = [];\n\nObject.entries(countries).forEach(([name, country]): void => {\n  country.continent === \"NA\" && NA.push(`${name} ${country.flag}`);\n  country.continent === \"EU\" && EU.push(`${name} ${country.flag}`);\n});\n\nexport default countries;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Typography } from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\nimport { NA, EU, cruises } from \"../../../constants/travel\";\n\n// --------------------     Styles     -------------------- //\nconst marginStyles: React.CSSProperties = { marginTop: 24, marginBottom: 16 };\nconst separatorStyles: React.CSSProperties = {\n  borderRight: `1px solid ${grey[400]}`,\n};\nconst cellStyles: React.CSSProperties = {\n  padding: 5,\n  textAlign: \"center\",\n  whiteSpace: \"normal\",\n  overflow: \"visible\",\n};\n\n// --------------------     Countries Table     -------------------- //\n// ratio to display on table, 2:1 seemed to look best\nconst EURatio = 3;\n// export array of <li> elements for display\nconst countries: React.ReactNode[] = [];\n// iterate to the end of the longer list\nconst len = Math.max(NA.length, Math.ceil(EU.length / EURatio));\nfor (let i = 0; i < len; i += 1) {\n  const row = [];\n  // add NA Country\n  row.push(\n    <TableCell key={`tmc${i}`} style={{ ...cellStyles, ...separatorStyles }}>\n      {NA[i]}\n    </TableCell>\n  );\n  // add EU Countries\n  for (let j = 0; j < EURatio; j += 1) {\n    row.push(\n      <TableCell key={`tmc${i}${j}`} style={cellStyles}>\n        {EU[EURatio * i + j]}\n      </TableCell>\n    );\n  }\n  // form the row\n  const countryRow = <TableRow key={`tmr${i}`}>{row}</TableRow>;\n  countries.push(countryRow);\n}\n\n// --------------------     Cruise Table     -------------------- //\nlet totalNights = 0;\nconst cruiseCells = cruises.map((cruise, i) => {\n  totalNights += cruise.nights;\n  return (\n    <TableRow key={`cruise-tr-${i}`}>\n      <TableCell key={`cruise-td-description-${i}`} style={cellStyles}>\n        {cruise.name}\n      </TableCell>\n      <TableCell key={`cruise-td-ship-${i}`} style={cellStyles}>\n        {cruise.ship}\n      </TableCell>\n      <TableCell key={`cruise-td-nights-${i}`} style={cellStyles}>\n        {cruise.nights}\n      </TableCell>\n      <TableCell key={`cruise-td-departure-${i}`} style={cellStyles}>\n        {cruise.departure.format(\"MMMM Y\")}\n      </TableCell>\n    </TableRow>\n  );\n});\n\n// --------------------     Travel Map     -------------------- //\nconst TravelMap: React.FC = React.memo(() => (\n  <>\n    <Typography variant=\"h4\" style={marginStyles}>\n      {`I have been to ${NA.length + EU.length} countries:`}\n    </Typography>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell style={{ ...cellStyles, ...separatorStyles }}>\n            North America\n          </TableCell>\n          <TableCell colSpan={EURatio} style={cellStyles}>\n            Europe\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>{countries}</TableBody>\n    </Table>\n    <Typography variant=\"h4\" style={marginStyles}>\n      {`I have been on ${cruises.length} cruises:`}\n    </Typography>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell style={cellStyles}>Description</TableCell>\n          <TableCell style={cellStyles}>Ship ğŸš¢</TableCell>\n          <TableCell style={cellStyles}>Nights ( {totalNights} )</TableCell>\n          <TableCell style={cellStyles}>Departure</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>{cruiseCells}</TableBody>\n    </Table>\n  </>\n));\n\nexport default TravelMap;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport Map, { DataItem } from \"react-svg-worldmap\";\nimport { blueGrey } from \"@mui/material/colors\";\nimport countries from \"../../../constants/travel\";\nimport themeAtom from \"../../../recoil/theme-atom\";\n\nconst data: DataItem[] = Object.keys(countries).map((k) => ({\n  country: countries[k].code,\n  value: 1,\n}));\n\nconst WorldMap = () => {\n  const [theme] = useRecoilState(themeAtom);\n  const screenWidth = Math.min(document.body.clientWidth - 32, 2000);\n\n  return (\n    <Map\n      color={blueGrey[500]}\n      data={data}\n      size={screenWidth}\n      backgroundColor=\"transparent\"\n      borderColor={theme.mode === \"dark\" ? \"white\" : \"black\"}\n    />\n  );\n};\n\nexport default WorldMap;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport TravelTable from \"./TravelTable\";\nimport WorldMap from \"./WorldMap\";\n\n/* TravelMap  ->  WorldMap  ->  Popover\n *           |->  TravelTable */\nconst TravelMap: React.FC = React.memo(() => (\n  <>\n    <Typography variant=\"h2\">My Travel Map</Typography>\n    <WorldMap />\n    <TravelTable />\n  </>\n));\n\nexport default TravelMap;\n"],"names":["months","date","year","month","day","split","y","m","d","Number","now","Date","getFullYear","getMonth","getDate","diff","dateObj","scale","format","output","toString","slice","console","error","countries","Austria","continent","flag","code","Bahamas","Canada","Denmark","Estonia","Finland","France","Germany","Greece","Iceland","Ireland","Italy","Jamaica","Mexico","Netherlands","Norway","Poland","Portugal","Russia","Spain","Sweden","Switzerland","Turkey","Gibraltar","Malta","Monaco","Vatican","cruises","departure","nights","name","ship","concierge","NA","EU","Object","entries","forEach","country","push","marginStyles","marginTop","marginBottom","separatorStyles","borderRight","grey","cellStyles","padding","textAlign","whiteSpace","overflow","len","Math","max","length","ceil","i","row","TableCell","style","j","countryRow","TableRow","totalNights","cruiseCells","map","cruise","React","Typography","variant","Table","TableHead","colSpan","TableBody","data","keys","k","value","useRecoilState","themeAtom","theme","screenWidth","min","document","body","clientWidth","color","blueGrey","size","backgroundColor","borderColor","mode","TravelTable"],"sourceRoot":""}