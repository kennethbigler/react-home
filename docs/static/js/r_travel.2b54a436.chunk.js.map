{"version":3,"file":"static/js/r_travel.2b54a436.chunk.js","mappings":"2HAAMA,EAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAiFF,IA7DmB,SAACC,GAClB,IAAIC,EACAC,EACAC,EAEJ,GAAoB,kBAATH,EACT,OAAOA,EAET,GAAoB,kBAATA,EAAmB,CAC5B,MAAkBA,EAAKI,MAAM,KAA7B,eAAOC,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACAN,EAAOO,OAAOH,GACdH,EAAQM,OAAOF,GAAK,GAAK,EACzBH,EAAMK,OAAOD,IAAM,CACpB,KAAM,CACL,IAAME,EAAM,IAAIC,KAChBT,EAAOQ,EAAIE,cACXT,EAAQO,EAAIG,WACZT,EAAMM,EAAII,SACX,CAkCD,MAAO,CACLZ,KAAAA,EACAC,MAAAA,EACAC,IAAAA,EACAW,KApCW,SAACC,GAAyD,IAAvCC,EAAsC,uDAAnB,OACjD,OAAQA,GACN,IAAK,OACL,IAAK,QACH,OAAOf,EAAOc,EAAQd,KACxB,IAAK,QACL,IAAK,SACH,OAAO,IAAMA,EAAOc,EAAQd,OAASC,EAAQa,EAAQb,OACvD,QACE,OACE,KAAOD,EAAOc,EAAQd,MACtB,IAAMC,EAAQa,EAAQb,QACrBC,EAAMY,EAAQZ,KAGtB,EAsBCc,OApBa,SAACC,GACd,OAAQA,GACN,IAAK,OACH,OAAOjB,EAAKkB,WACd,IAAK,SACH,MAAM,GAAN,OAAUpB,EAAOG,GAAjB,YAA2BD,GAC7B,IAAK,MACH,MAAM,IAAN,OAAWA,EAAKkB,WAAWC,OAAO,IACpC,QAGE,OADAC,QAAQC,MAAM,wBAAyBJ,GAChC,GAEZ,EASF,C,8LClFKK,EAAuB,CAC3BC,QAAS,CAAEC,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAChDC,QAAS,CAAEH,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAChDE,OAAQ,CAAEJ,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/CG,QAAS,CAAEL,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAChDI,QAAS,CAAEN,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAChDK,QAAS,CAAEP,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAChDM,OAAQ,CAAER,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/CO,QAAS,CAAET,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAChDQ,OAAQ,CAAEV,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/CS,QAAS,CAAEX,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAChDU,QAAS,CAAEZ,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAChDW,MAAO,CAAEb,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC9CY,QAAS,CAAEd,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAChDa,OAAQ,CAAEf,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/Cc,YAAa,CAAEhB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MACpDe,OAAQ,CAAEjB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/CgB,OAAQ,CAAElB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/CiB,SAAU,CAAEnB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MACjDkB,OAAQ,CAAEpB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/CmB,MAAO,CAAErB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC9CoB,OAAQ,CAAEtB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/CqB,YAAa,CAAEvB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MACpDsB,OAAQ,CAAExB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/C,iBAAkB,CAAEF,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MACzD,2BAA4B,CAAEF,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MACnE,yBAA0B,CAAEF,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MACjE,iBAAkB,CAAEF,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MACzD,sBAAuB,CAAEF,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC9DuB,UAAW,CAAEzB,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAClDwB,MAAO,CAAE1B,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC9CyB,OAAQ,CAAE3B,UAAW,KAAMC,KAAM,2BAAQC,KAAM,MAC/C0B,QAAS,CAAE5B,UAAW,KAAMC,KAAM,2BAAQC,KAAM,OAGrC2B,EAAY,CACvB,CAAEC,OAAQ,EAAGC,OAAQ,QACrB,CAAED,OAAQ,GAAIC,OAAQ,YACtB,CAAED,OAAQ,GAAIC,OAAQ,WACtB,CAAED,OAAQ,GAAIC,OAAQ,WACtB,CAAED,OAAQ,IAAKC,OAAQ,gBACvB,CAAED,OAAQ,IAAKC,OAAQ,kBAGZC,EAAQ,CAAC,SAAU,mBAsBnBC,EAAoB,CAC/B,CACEC,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,UACNC,KAAM,SACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,kBACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,GACRK,KAAM,gBACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,GACRK,KAAM,gBACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,GACRK,KAAM,uBACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,kBACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,UACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,GACRK,KAAM,iBACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,oBACNC,KAAM,UACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,GACRK,KAAM,2BACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,oBACNC,KAAM,UACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,GACRK,KAAM,2BACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,GACRK,KAAM,gBACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,sBACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,GACRK,KAAM,2BACNC,KAAM,QACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,oBACNC,KAAM,UACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,oBACNC,KAAM,UACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,GACRK,KAAM,6BACNC,KAAM,SACNC,KAAM,SACNC,WAAW,GAEb,CACEJ,WAAW5C,EAAAA,EAAAA,GAAQ,WACnBwC,OAAQ,EACRK,KAAM,sBACNC,KAAM,wBACNC,KAAM,kBACNC,WAAW,IAIFC,EAAe,GACfC,EAAe,GAE5BC,OAAOC,QAAQ5C,GAAW6C,SAAQ,YAA4B,IAAD,eAAzBR,EAAyB,KAAnBS,EAAmB,KACrC,OAAtBA,EAAQ5C,WAAsBuC,EAAGM,KAAH,UAAWV,EAAX,YAAmBS,EAAQ3C,OACnC,OAAtB2C,EAAQ5C,WAAsBwC,EAAGK,KAAH,UAAWV,EAAX,YAAmBS,EAAQ3C,MAC1D,IC/ND,IDiOA,Q,WCnPM6C,EAAoC,CAAEC,UAAW,GAAIC,aAAc,IACnEC,EAAuC,CAC3CC,YAAY,aAAD,OAAeC,EAAAA,EAAAA,OAEtBC,EAAkC,CACtCC,QAAS,EACTC,UAAW,SACXC,WAAY,SACZC,SAAU,WAON1D,EAA+B,GAE/B2D,EAAMC,KAAKC,IAAIpB,EAAGqB,OAAQF,KAAKG,KAAKrB,EAAGoB,OAJ7B,IAKPE,EAAI,EAAGA,EAAIL,EAAKK,GAAK,EAAG,CAC/B,IAAMC,EAAM,GAEZA,EAAIlB,MACF,SAACmB,EAAA,EAAD,CAA2BC,OAAK,kBAAOb,GAAeH,GAAtD,SACGV,EAAGuB,IADN,aAAsBA,KAKxB,IAAK,IAAII,EAAI,EAAGA,EAdF,EAceA,GAAK,EAChCH,EAAIlB,MACF,SAACmB,EAAA,EAAD,CAA+BC,MAAOb,EAAtC,SACGZ,EAjBO,EAiBMsB,EAAII,IADpB,aAAsBJ,GAAtB,OAA0BI,KAM9B,IAAMC,GAAa,SAACC,EAAA,EAAD,UAA2BL,GAA3B,aAAqBD,IACxChE,EAAU+C,KAAKsB,EAChB,CAGD,IAAIE,EAAc,EACdC,EAAgB,EAChBC,EAAW,EAETC,EAAcvC,EAAQwC,KAAI,SAACC,EAAQZ,GAGvC,OAFAO,GAAeK,EAAO5C,OAEd4C,EAAOrC,MACb,KAAKL,EAAM,GACTsC,GAAiB,EACjB,MACF,KAAKtC,EAAM,GACTuC,GAAYG,EAAO5C,QAAU4C,EAAOpC,UAAY,EAAI,GAMxD,OACE,UAAC8B,EAAA,EAAD,YACE,SAACJ,EAAA,EAAD,CAA8CC,MAAOb,EAArD,SACGsB,EAAOvC,MADV,gCAAyC2B,KAGzC,UAACE,EAAA,EAAD,CAAuCC,MAAOb,EAA9C,UACGsB,EAAOrC,KADV,IACiBqC,EAAOtC,OADxB,yBAAkC0B,KAGlC,UAACE,EAAA,EAAD,CAAyCC,MAAOb,EAAhD,UACGsB,EAAO5C,OADV,IACmB4C,EAAOpC,UAAY,eAAO,KAD7C,2BAAoCwB,KAGpC,SAACE,EAAA,EAAD,CAA4CC,MAAOb,EAAnD,SACGsB,EAAOxC,UAAU1C,OAAO,WAD3B,8BAAuCsE,MAVzC,oBAA4BA,GAe/B,IAEGa,EAAc,EACdC,EAAW,MAEf/C,EAAUc,SAAQ,WAAqBmB,GAAO,IAAzBhC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,OACvBwC,GAAYzC,IACd8C,EAAW7C,EACX4C,EAAc9C,EAAUiC,EAAI,GAAGhC,OAElC,IAGD,IA2DA,EA3D4B+C,EAAAA,MAAW,kBACrC,iCACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKd,MAAOnB,EAAhC,kCACqBP,EAAGqB,OAASpB,EAAGoB,OADpC,kBAGA,UAACoB,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,UAACb,EAAA,EAAD,YACE,SAACJ,EAAA,EAAD,CAAWC,OAAK,kBAAOb,GAAeH,GAAtC,4BAGA,SAACe,EAAA,EAAD,CAAWkB,QArFL,EAqFuBjB,MAAOb,EAApC,0BAKJ,SAAC+B,EAAA,EAAD,UAAYrF,QAGd,SAACgF,EAAA,EAAD,CAAYC,QAAQ,KAAKd,MAAOnB,EAAhC,kCACqBb,EAAQ2B,OAD7B,gBAGA,UAACoB,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,UAACb,EAAA,EAAD,YAEE,SAACJ,EAAA,EAAD,CAAWC,MAAOb,EAAlB,SAA+BpB,EAAM,MAErC,SAACgC,EAAA,EAAD,CAAWC,MAAOb,EAAlB,SAA+BpB,EAAM,WAGzC,SAACmD,EAAA,EAAD,WACE,UAACf,EAAA,EAAD,YAEE,UAACJ,EAAA,EAAD,CAAWC,MAAOb,EAAlB,UACGkB,EADH,+BAIA,UAACN,EAAA,EAAD,CAAWC,MAAOb,EAAlB,UACGmB,EADH,MACgBI,EADhB,aACuCC,cAK7C,mBACA,UAACI,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,UAACb,EAAA,EAAD,YACE,SAACJ,EAAA,EAAD,CAAWC,MAAOb,EAAlB,uCACA,SAACY,EAAA,EAAD,CAAWC,MAAOb,EAAlB,gCACA,UAACY,EAAA,EAAD,CAAWC,MAAOb,EAAlB,qBAAuCiB,EAAvC,qBACA,SAACL,EAAA,EAAD,CAAWC,MAAOb,EAAlB,0CAGJ,SAAC+B,EAAA,EAAD,UAAYX,SAtDqB,I,4CC3FjCY,EAAmB3C,OAAO4C,KAAKvF,GAAW2E,KAAI,SAACa,GAAD,MAAQ,CAC1D1C,QAAS9C,EAAUwF,GAAGpF,KACtBqF,MAAO,EAF2C,IAoBpD,EAfiB,WACf,OAAgBC,EAAAA,EAAAA,IAAeC,EAAAA,IAAxBC,GAAP,eACMC,EAAcjC,KAAKkC,IAAIC,SAASC,KAAKC,YAAc,GAAI,KAE7D,OACE,SAAC,IAAD,CACEC,MAAOC,EAAAA,EAAAA,KACPb,KAAMA,EACNc,KAAMP,EACNQ,gBAAgB,cAChBC,YAA4B,SAAfV,EAAMW,KAAkB,QAAU,SAGpD,ECVD,EAR4BxB,EAAAA,MAAW,kBACrC,iCACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BACA,SAAC,EAAD,KACA,SAACuB,EAAD,MAJmC,G","sources":["apis/DateHelper.ts","constants/travel.ts","components/resume/travel-map/TravelTable.tsx","components/resume/travel-map/WorldMap.tsx","components/resume/travel-map/TravelMap.tsx"],"sourcesContent":["const months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport type DateScale =\n  | \"year\"\n  | \"years\"\n  | \"month\"\n  | \"months\"\n  | \"days\"\n  | undefined;\nexport type FormatOutput = \"YYYY\" | \"MMMM Y\" | \"'YY\";\nexport interface DateObj {\n  year: number;\n  month: number;\n  day: number;\n  diff: (dateObj: DateObj, scale: DateScale) => number;\n  format: (output: FormatOutput) => string;\n}\n\n/** Takes format YYYY-MM-DD and creates a DateObj */\nconst dateHelper = (date?: DateObj | string): DateObj => {\n  let year: number;\n  let month: number;\n  let day: number;\n\n  if (typeof date === \"object\") {\n    return date;\n  }\n  if (typeof date === \"string\") {\n    const [y, m, d] = date.split(\"-\");\n    year = Number(y);\n    month = Number(m) - 1 || 0;\n    day = Number(d) || 1;\n  } else {\n    const now = new Date();\n    year = now.getFullYear();\n    month = now.getMonth();\n    day = now.getDate();\n  }\n\n  const diff = (dateObj: DateObj, scale: DateScale = \"days\"): number => {\n    switch (scale) {\n      case \"year\":\n      case \"years\":\n        return year - dateObj.year;\n      case \"month\":\n      case \"months\":\n        return 12 * (year - dateObj.year) + (month - dateObj.month);\n      default:\n        return (\n          365 * (year - dateObj.year) +\n          30 * (month - dateObj.month) +\n          (day - dateObj.day)\n        );\n    }\n  };\n\n  const format = (output: FormatOutput): string => {\n    switch (output) {\n      case \"YYYY\":\n        return year.toString();\n      case \"MMMM Y\":\n        return `${months[month]} ${year}`;\n      case \"'YY\":\n        return `'${year.toString().slice(-2)}`;\n      default:\n        // eslint-disable-next-line no-console\n        console.error(\"unknown date format: \", output);\n        return \"\";\n    }\n  };\n\n  return {\n    year,\n    month,\n    day,\n    diff,\n    format,\n  };\n};\n\nexport default dateHelper;\n","import dateObj, { DateObj } from \"../apis/DateHelper\";\n\ninterface Country {\n  continent: string;\n  flag: string;\n  code: string;\n}\nexport type Countries = Record<string, Country>;\n\nconst countries: Countries = {\n  Austria: { continent: \"EU\", flag: \"🇦🇹\", code: \"at\" },\n  Bahamas: { continent: \"NA\", flag: \"🇧🇸\", code: \"bs\" },\n  Canada: { continent: \"NA\", flag: \"🇨🇦\", code: \"ca\" },\n  Denmark: { continent: \"EU\", flag: \"🇩🇰\", code: \"dk\" },\n  Estonia: { continent: \"EU\", flag: \"🇪🇪\", code: \"ee\" },\n  Finland: { continent: \"EU\", flag: \"🇫🇮\", code: \"fi\" },\n  France: { continent: \"EU\", flag: \"🇫🇷\", code: \"fr\" },\n  Germany: { continent: \"EU\", flag: \"🇩🇪\", code: \"de\" },\n  Greece: { continent: \"EU\", flag: \"🇬🇷\", code: \"gr\" },\n  Iceland: { continent: \"EU\", flag: \"🇮🇸\", code: \"is\" },\n  Ireland: { continent: \"EU\", flag: \"🇮🇪\", code: \"ie\" },\n  Italy: { continent: \"EU\", flag: \"🇮🇹\", code: \"it\" },\n  Jamaica: { continent: \"NA\", flag: \"🇯🇲\", code: \"jm\" },\n  Mexico: { continent: \"NA\", flag: \"🇲🇽\", code: \"mx\" },\n  Netherlands: { continent: \"EU\", flag: \"🇳🇱\", code: \"nl\" },\n  Norway: { continent: \"EU\", flag: \"🇳🇴\", code: \"no\" },\n  Poland: { continent: \"EU\", flag: \"🇵🇱\", code: \"pl\" },\n  Portugal: { continent: \"EU\", flag: \"🇵🇹\", code: \"pt\" },\n  Russia: { continent: \"EU\", flag: \"🇷🇺\", code: \"ru\" },\n  Spain: { continent: \"EU\", flag: \"🇪🇸\", code: \"es\" },\n  Sweden: { continent: \"EU\", flag: \"🇸🇪\", code: \"se\" },\n  Switzerland: { continent: \"EU\", flag: \"🇨🇭\", code: \"ch\" },\n  Turkey: { continent: \"EU\", flag: \"🇹🇷\", code: \"tr\" },\n  \"United Kingdom\": { continent: \"EU\", flag: \"🇬🇧\", code: \"gb\" },\n  \"United States of America\": { continent: \"NA\", flag: \"🇺🇸\", code: \"us\" },\n  \"British Virgin Islands\": { continent: \"NA\", flag: \"🇻🇬\", code: \"vg\" },\n  \"Cayman Islands\": { continent: \"NA\", flag: \"🇰🇾\", code: \"ky\" },\n  \"U.S. Virgin Islands\": { continent: \"NA\", flag: \"🇻🇮\", code: \"vi\" },\n  Gibraltar: { continent: \"EU\", flag: \"🇬🇮\", code: \"gi\" },\n  Malta: { continent: \"EU\", flag: \"🇲🇹\", code: \"mt\" },\n  Monaco: { continent: \"EU\", flag: \"🇲🇨\", code: \"mc\" },\n  Vatican: { continent: \"EU\", flag: \"🇻🇦\", code: \"va\" },\n};\n\nexport const rcLoyalty = [\n  { nights: 3, status: \"Gold\" },\n  { nights: 30, status: \"Platinum\" },\n  { nights: 55, status: \"Emerald\" },\n  { nights: 80, status: \"Diamond\" },\n  { nights: 175, status: \"Diamond Plus\" },\n  { nights: 700, status: \"Pinnacle Club\" },\n];\n\nexport const lines = [\"Disney\", \"Royal Caribbean\"] as const;\nexport type Lines = typeof lines[number];\n\nexport const ships = [\n  \"Magic\",\n  \"Wonder\",\n  \"Dream\",\n  \"Fantasy\",\n  \"Wish\",\n  \"Navigator of the Seas\",\n] as const;\nexport type Ships = typeof ships[number];\n\ninterface Cruise {\n  departure: DateObj;\n  nights: number;\n  name: string;\n  ship: Ships;\n  line: Lines;\n  concierge: boolean;\n}\n\nexport const cruises: Cruise[] = [\n  {\n    departure: dateObj(\"2004-04\"),\n    nights: 3,\n    name: \"Bahamas\",\n    ship: \"Wonder\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2005-06\"),\n    nights: 7,\n    name: \"Mexican Riviera\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2011-06\"),\n    nights: 11,\n    name: \"Mediterranean\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2012-06\"),\n    nights: 7,\n    name: \"Alaska\",\n    ship: \"Wonder\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2013-07\"),\n    nights: 12,\n    name: \"Mediterranean\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2014-07\"),\n    nights: 7,\n    name: \"Alaska\",\n    ship: \"Wonder\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2015-07\"),\n    nights: 14,\n    name: \"Northern EU Capitals\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2015-08\"),\n    nights: 7,\n    name: \"Dover-Barcelona\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2015-12\"),\n    nights: 4,\n    name: \"Bahamas\",\n    ship: \"Dream\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2016-06\"),\n    nights: 12,\n    name: \"Iceland/Norway\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2016-12\"),\n    nights: 7,\n    name: \"Eastern Caribbean\",\n    ship: \"Fantasy\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2017-05\"),\n    nights: 15,\n    name: \"East Bound Transatlantic\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2017-12\"),\n    nights: 7,\n    name: \"Western Caribbean\",\n    ship: \"Fantasy\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2018-05\"),\n    nights: 13,\n    name: \"East Bound Transatlantic\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2018-07\"),\n    nights: 10,\n    name: \"Mediterranean\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2018-11\"),\n    nights: 7,\n    name: \"East Coast NY-FL-NY\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2019-09\"),\n    nights: 10,\n    name: \"West Bound Transatlantic\",\n    ship: \"Magic\",\n    line: \"Disney\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2019-11\"),\n    nights: 7,\n    name: \"Western Caribbean\",\n    ship: \"Fantasy\",\n    line: \"Disney\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2021-12\"),\n    nights: 7,\n    name: \"Eastern Caribbean\",\n    ship: \"Fantasy\",\n    line: \"Disney\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2022-04\"),\n    nights: 10,\n    name: \"Hawaii: Vancouver-Honolulu\",\n    ship: \"Wonder\",\n    line: \"Disney\",\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2022-08\"),\n    nights: 4,\n    name: \"Catalina & Ensenada\",\n    ship: \"Navigator of the Seas\",\n    line: \"Royal Caribbean\",\n    concierge: true,\n  },\n];\n\nexport const NA: string[] = [];\nexport const EU: string[] = [];\n\nObject.entries(countries).forEach(([name, country]): void => {\n  country.continent === \"NA\" && NA.push(`${name} ${country.flag}`);\n  country.continent === \"EU\" && EU.push(`${name} ${country.flag}`);\n});\n\nexport default countries;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Typography } from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\nimport { NA, EU, cruises, lines, rcLoyalty } from \"../../../constants/travel\";\n\n// --------------------     Styles     -------------------- //\nconst marginStyles: React.CSSProperties = { marginTop: 24, marginBottom: 16 };\nconst separatorStyles: React.CSSProperties = {\n  borderRight: `1px solid ${grey[400]}`,\n};\nconst cellStyles: React.CSSProperties = {\n  padding: 5,\n  textAlign: \"center\",\n  whiteSpace: \"normal\",\n  overflow: \"visible\",\n};\n\n// --------------------     Countries Table     -------------------- //\n// ratio to display on table, 2:1 seemed to look best\nconst EURatio = 3;\n// export array of <li> elements for display\nconst countries: React.ReactNode[] = [];\n// iterate to the end of the longer list\nconst len = Math.max(NA.length, Math.ceil(EU.length / EURatio));\nfor (let i = 0; i < len; i += 1) {\n  const row = [];\n  // add NA Country\n  row.push(\n    <TableCell key={`tmc${i}`} style={{ ...cellStyles, ...separatorStyles }}>\n      {NA[i]}\n    </TableCell>\n  );\n  // add EU Countries\n  for (let j = 0; j < EURatio; j += 1) {\n    row.push(\n      <TableCell key={`tmc${i}${j}`} style={cellStyles}>\n        {EU[EURatio * i + j]}\n      </TableCell>\n    );\n  }\n  // form the row\n  const countryRow = <TableRow key={`tmr${i}`}>{row}</TableRow>;\n  countries.push(countryRow);\n}\n\n// --------------------     Cruise Table     -------------------- //\nlet totalNights = 0;\nlet disneyCruises = 0;\nlet rcNights = 0;\n\nconst cruiseCells = cruises.map((cruise, i) => {\n  totalNights += cruise.nights;\n\n  switch (cruise.line) {\n    case lines[0]:\n      disneyCruises += 1;\n      break;\n    case lines[1]:\n      rcNights += cruise.nights * (cruise.concierge ? 2 : 1);\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <TableRow key={`cruise-tr-${i}`}>\n      <TableCell key={`cruise-td-description-${i}`} style={cellStyles}>\n        {cruise.name}\n      </TableCell>\n      <TableCell key={`cruise-td-ship-${i}`} style={cellStyles}>\n        {cruise.line} {cruise.ship}\n      </TableCell>\n      <TableCell key={`cruise-td-nights-${i}`} style={cellStyles}>\n        {cruise.nights} {cruise.concierge ? \"⭐️\" : \"\"}\n      </TableCell>\n      <TableCell key={`cruise-td-departure-${i}`} style={cellStyles}>\n        {cruise.departure.format(\"MMMM Y\")}\n      </TableCell>\n    </TableRow>\n  );\n});\n\nlet rcNextLevel = 0;\nlet rcStatus = \"N/A\";\n\nrcLoyalty.forEach(({ nights, status }, i) => {\n  if (rcNights >= nights) {\n    rcStatus = status;\n    rcNextLevel = rcLoyalty[i + 1].nights;\n  }\n});\n\n// --------------------     Travel Map     -------------------- //\nconst TravelMap: React.FC = React.memo(() => (\n  <>\n    <Typography variant=\"h4\" style={marginStyles}>\n      {`I have been to ${NA.length + EU.length} countries:`}\n    </Typography>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell style={{ ...cellStyles, ...separatorStyles }}>\n            North America\n          </TableCell>\n          <TableCell colSpan={EURatio} style={cellStyles}>\n            Europe\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>{countries}</TableBody>\n    </Table>\n\n    <Typography variant=\"h4\" style={marginStyles}>\n      {`I have been on ${cruises.length} cruises:`}\n    </Typography>\n    <Table>\n      <TableHead>\n        <TableRow>\n          {/* Disney */}\n          <TableCell style={cellStyles}>{lines[0]}</TableCell>\n          {/* Royal Caribbean */}\n          <TableCell style={cellStyles}>{lines[1]}</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow>\n          {/* Disney */}\n          <TableCell style={cellStyles}>\n            {disneyCruises} / 10 Cruises = Platinum\n          </TableCell>\n          {/* Royal Caribbean */}\n          <TableCell style={cellStyles}>\n            {rcNights} / {rcNextLevel} Nights = {rcStatus}\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n    <br />\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell style={cellStyles}>Description 📍</TableCell>\n          <TableCell style={cellStyles}>Ship 🚢</TableCell>\n          <TableCell style={cellStyles}>Nights ({totalNights} 🌙)</TableCell>\n          <TableCell style={cellStyles}>Departure 🗓</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>{cruiseCells}</TableBody>\n    </Table>\n  </>\n));\n\nexport default TravelMap;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport Map, { DataItem } from \"react-svg-worldmap\";\nimport { blueGrey } from \"@mui/material/colors\";\nimport countries from \"../../../constants/travel\";\nimport themeAtom from \"../../../recoil/theme-atom\";\n\nconst data: DataItem[] = Object.keys(countries).map((k) => ({\n  country: countries[k].code,\n  value: 1,\n}));\n\nconst WorldMap = () => {\n  const [theme] = useRecoilState(themeAtom);\n  const screenWidth = Math.min(document.body.clientWidth - 32, 2000);\n\n  return (\n    <Map\n      color={blueGrey[500]}\n      data={data}\n      size={screenWidth}\n      backgroundColor=\"transparent\"\n      borderColor={theme.mode === \"dark\" ? \"white\" : \"black\"}\n    />\n  );\n};\n\nexport default WorldMap;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport TravelTable from \"./TravelTable\";\nimport WorldMap from \"./WorldMap\";\n\n/* TravelMap  ->  WorldMap  ->  Popover\n *           |->  TravelTable */\nconst TravelMap: React.FC = React.memo(() => (\n  <>\n    <Typography variant=\"h2\">My Travel Map</Typography>\n    <WorldMap />\n    <TravelTable />\n  </>\n));\n\nexport default TravelMap;\n"],"names":["months","date","year","month","day","split","y","m","d","Number","now","Date","getFullYear","getMonth","getDate","diff","dateObj","scale","format","output","toString","slice","console","error","countries","Austria","continent","flag","code","Bahamas","Canada","Denmark","Estonia","Finland","France","Germany","Greece","Iceland","Ireland","Italy","Jamaica","Mexico","Netherlands","Norway","Poland","Portugal","Russia","Spain","Sweden","Switzerland","Turkey","Gibraltar","Malta","Monaco","Vatican","rcLoyalty","nights","status","lines","cruises","departure","name","ship","line","concierge","NA","EU","Object","entries","forEach","country","push","marginStyles","marginTop","marginBottom","separatorStyles","borderRight","grey","cellStyles","padding","textAlign","whiteSpace","overflow","len","Math","max","length","ceil","i","row","TableCell","style","j","countryRow","TableRow","totalNights","disneyCruises","rcNights","cruiseCells","map","cruise","rcNextLevel","rcStatus","React","Typography","variant","Table","TableHead","colSpan","TableBody","data","keys","k","value","useRecoilState","themeAtom","theme","screenWidth","min","document","body","clientWidth","color","blueGrey","size","backgroundColor","borderColor","mode","TravelTable"],"sourceRoot":""}