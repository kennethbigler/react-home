{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","components/common/DarkTableCell.ts","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","components/games/slots/PayoutTable.tsx","components/games/slots/MoneyTable.tsx","components/games/slots/ReelDisplay.tsx","components/games/slots/Slots.tsx","components/games/slots/index.ts"],"names":["Tablelvl2Context","React","createContext","TableContext","Table","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","other","_objectWithoutProperties","table","useMemo","createElement","Provider","value","_extends","clsx","root","withStyles","theme","display","width","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","name","tablelvl2","variant","TableBody","TableRow","_props$hover","hover","_props$selected","selected","useContext","head","footer","verticalAlign","outline","backgroundColor","type","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","ariaSort","concat","capitalize","borderBottom","lighten","fade","divider","darken","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","background","default","DarkTableCell","common","black","white","TableHead","payoutTable","symbol","SO","JACKPOT","payout","SEVEN","TRIPLE_BAR","DOUBLE_BAR","BAR","CHERRY","PayoutTable","memo","map","row","i","key","MoneyTable","playerName","playerMoney","dealerMoney","cellStyles","minHeight","ReelDisplay","reel","getSlots","useCallback","slots","reelRow","j","Typography","style","slotRow","push","Slots","useSelector","state","players","dispatch","useDispatch","updateSlotMachine","id","bet","dealerId","length","updateDBSlotMachine","player","dealer","Grid","container","marginTop","item","sm","xs","marginBottom","Button","onClick","money"],"mappings":"iHAAA,WAKIA,EALJ,OAKuBC,EAAMC,gBAMdF,O,iCCXf,WAKIG,EALJ,OAKmBF,EAAMC,gBAMVC,O,iCCXf,mEA6BIC,EAAQH,IAAMI,YAAW,SAAeC,EAAOC,GACjD,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,QAAUA,EACpDG,EAAiBP,EAAMQ,QACvBA,OAA6B,IAAnBD,EAA4B,UAAYA,EAClDE,EAAcT,EAAMU,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAsBX,EAAMY,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAQC,YAAyBd,EAAO,CAAC,UAAW,YAAa,YAAa,UAAW,OAAQ,iBAEjGe,EAAQpB,IAAMqB,SAAQ,WACxB,MAAO,CACLR,QAASA,EACTE,KAAMA,EACNE,aAAcA,KAEf,CAACJ,EAASE,EAAME,IACnB,OAAOjB,IAAMsB,cAAcpB,IAAaqB,SAAU,CAChDC,MAAOJ,GACNpB,IAAMsB,cAAcX,EAAWc,YAAS,CACzCnB,IAAKA,EACLE,UAAWkB,YAAKnB,EAAQoB,KAAMnB,EAAWS,GAAgBV,EAAQU,eAChEC,QA0CUU,iBAzFK,SAAgBC,GAClC,MAAO,CAELF,KAAM,CACJG,QAAS,QACTC,MAAO,OACPC,eAAgB,WAChBC,cAAe,EACf,YAAaR,YAAS,GAAII,EAAMK,WAAWC,MAAO,CAChDtB,QAASgB,EAAMO,QAAQ,GACvBC,MAAOR,EAAMS,QAAQC,KAAKC,UAC1BC,UAAW,OACXC,YAAa,YAKjBzB,aAAc,CACZe,eAAgB,eAuEY,CAChCW,KAAM,YADOf,CAEZzB,I,iCClGH,mEAaIyC,EAAY,CACdC,QAAS,QAEPC,EAAY9C,IAAMI,YAAW,SAAmBC,EAAOC,GACzD,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,QAAUA,EACpDS,EAAQC,YAAyBd,EAAO,CAAC,UAAW,YAAa,cAErE,OAAOL,IAAMsB,cAAcvB,IAAiBwB,SAAU,CACpDC,MAAOoB,GACN5C,IAAMsB,cAAcX,EAAWc,YAAS,CACzCjB,UAAWkB,YAAKnB,EAAQoB,KAAMnB,GAC9BF,IAAKA,GACJY,QAyBUU,gBA9CK,CAElBD,KAAM,CACJG,QAAS,oBA2CqB,CAChCa,KAAM,gBADOf,CAEZkB,I,iCCvDH,mEA4CIC,EAAW/C,IAAMI,YAAW,SAAkBC,EAAOC,GACvD,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,KAAOA,EACjDuC,EAAe3C,EAAM4C,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkB7C,EAAM8C,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDhC,EAAQC,YAAyBd,EAAO,CAAC,UAAW,YAAa,YAAa,QAAS,aAEvFuC,EAAY5C,IAAMoD,WAAWrD,KACjC,OAAOC,IAAMsB,cAAcX,EAAWc,YAAS,CAC7CnB,IAAKA,EACLE,UAAWkB,YAAKnB,EAAQoB,KAAMnB,EAAWoC,GAAa,CACpDS,KAAM9C,EAAQ8C,KACdC,OAAQ/C,EAAQ+C,QAChBV,EAAUC,SAAUI,GAAS1C,EAAQ0C,MAAOE,GAAY5C,EAAQ4C,WACjEjC,OAmCUU,iBA1FK,SAAgBC,GAClC,MAAO,CAELF,KAAM,CACJU,MAAO,UACPP,QAAS,YACTyB,cAAe,SAEfC,QAAS,EACT,aAAc,CACZC,gBAAwC,UAAvB5B,EAAMS,QAAQoB,KAAmB,sBAChD,6BAEJ,gBAAiB,CACfD,gBAAwC,UAAvB5B,EAAMS,QAAQoB,KAAmB,sBAChD,8BAKNP,SAAU,GAGVF,MAAO,GAGPI,KAAM,GAGNC,OAAQ,MA6DsB,CAChCX,KAAM,eADOf,CAEZmB,I,iCCnGH,4FAqHIY,EAAY3D,IAAMI,YAAW,SAAmBC,EAAOC,GACzD,IAcIK,EAdAiD,EAAevD,EAAMwD,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CrD,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBE,EAAYL,EAAMK,UAClBoD,EAAczD,EAAMQ,QACpBkD,EAAY1D,EAAM2D,MAClBC,EAAW5D,EAAMU,KACjBmD,EAAgB7D,EAAM6D,cACtBC,EAAc9D,EAAMwC,QACpB3B,EAAQC,YAAyBd,EAAO,CAAC,QAAS,UAAW,YAAa,YAAa,UAAW,QAAS,OAAQ,gBAAiB,YAEpIe,EAAQpB,IAAMoD,WAAWlD,KACzB0C,EAAY5C,IAAMoD,WAAWrD,KAI/BY,EADED,IAGUkC,GAAmC,SAAtBA,EAAUC,QAAqB,KAAO,MAGjE,IAAImB,EAAQD,GAEPC,GAASpB,GAAmC,SAAtBA,EAAUC,UACnCmB,EAAQ,OAGV,IAAInD,EAAUiD,IAAgB1C,GAASA,EAAMP,QAAUO,EAAMP,QAAU,WACnEE,EAAOkD,IAAa7C,GAASA,EAAML,KAAOK,EAAML,KAAO,UACvD8B,EAAUsB,GAAevB,GAAaA,EAAUC,QAChDuB,EAAW,KAMf,OAJIF,IACFE,EAA6B,QAAlBF,EAA0B,YAAc,cAG9ClE,IAAMsB,cAAcX,EAAWc,YAAS,CAC7CnB,IAAKA,EACLE,UAAWkB,YAAKnB,EAAQoB,KAAMpB,EAAQsC,GAAUrC,EAAqB,YAAVqD,GAAuBtD,EAAQ,QAAQ8D,OAAOC,YAAWT,KAAsB,YAAZhD,GAAyBN,EAAQ,UAAU8D,OAAOC,YAAWzD,KAAqB,WAATE,GAAqBR,EAAQ,OAAO8D,OAAOC,YAAWvD,KAAS,CACpQsC,KAAMjC,GAASA,EAAMH,cAAgBV,EAAQU,cAC7C4B,IACF,YAAauB,EACbJ,MAAOA,GACN9C,OA6DUU,iBArNK,SAAgBC,GAClC,MAAO,CAELF,KAAMF,YAAS,GAAII,EAAMK,WAAWC,MAAO,CACzCL,QAAS,aACTyB,cAAe,UAGfgB,aAAc,kBAAkBF,OAA8B,UAAvBxC,EAAMS,QAAQoB,KAAmBc,YAAQC,YAAK5C,EAAMS,QAAQoC,QAAS,GAAI,KAAQC,YAAOF,YAAK5C,EAAMS,QAAQoC,QAAS,GAAI,MAC/JjC,UAAW,OACX5B,QAAS,KAIXwC,KAAM,CACJhB,MAAOR,EAAMS,QAAQC,KAAKqC,QAC1BC,WAAYhD,EAAMK,WAAW4C,QAAQ,IACrCC,WAAYlD,EAAMK,WAAW8C,kBAI/BC,KAAM,CACJ5C,MAAOR,EAAMS,QAAQC,KAAKqC,SAI5BtB,OAAQ,CACNjB,MAAOR,EAAMS,QAAQC,KAAKC,UAC1BqC,WAAYhD,EAAMK,WAAW4C,QAAQ,IACrCI,SAAUrD,EAAMK,WAAW4C,QAAQ,KAIrCK,UAAW,CACTtE,QAAS,oBACT,eAAgB,CACduE,aAAc,IAEhB,oBAAqB,CACnBrD,MAAO,GAEPlB,QAAS,kBACT,eAAgB,CACdwE,YAAa,GACbD,aAAc,IAEhB,QAAS,CACPvE,QAAS,KAMfyE,gBAAiB,CACfvD,MAAO,GAEPlB,QAAS,YACT,eAAgB,CACdwE,YAAa,EACbD,aAAc,IAKlBG,YAAa,CACX1E,QAAS,EACT,eAAgB,CACdA,QAAS,IAKb2E,UAAW,CACT/C,UAAW,QAIbgD,YAAa,CACXhD,UAAW,UAIbiD,WAAY,CACVjD,UAAW,QACXkD,cAAe,eAIjBC,aAAc,CACZnD,UAAW,WAIbxB,aAAc,CACZ4E,SAAU,SACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRvC,gBAAiB5B,EAAMS,QAAQ2D,WAAWC,YAmHd,CAChCvD,KAAM,gBADOf,CAEZ+B,I,iCCjOH,qBAGMwC,EAAgBvE,aAAW,SAACC,GAAD,MAAY,CAC3CwB,KAAM,CACJI,gBAAiB5B,EAAMS,QAAQ8D,OAAOC,MACtChE,MAAOR,EAAMS,QAAQ8D,OAAOE,UAHV1E,CAKlB+B,KAEWwC,O,iCCVf,mEAaIvD,EAAY,CACdC,QAAS,QAEP0D,EAAYvG,IAAMI,YAAW,SAAmBC,EAAOC,GACzD,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,QAAUA,EACpDS,EAAQC,YAAyBd,EAAO,CAAC,UAAW,YAAa,cAErE,OAAOL,IAAMsB,cAAcvB,IAAiBwB,SAAU,CACpDC,MAAOoB,GACN5C,IAAMsB,cAAcX,EAAWc,YAAS,CACzCjB,UAAWkB,YAAKnB,EAAQoB,KAAMnB,GAC9BF,IAAKA,GACJY,QAyBUU,gBA9CK,CAElBD,KAAM,CACJG,QAAS,uBA2CqB,CAChCa,KAAM,gBADOf,CAEZ2E,I,oKC7CGC,EAAc,CAClB,CAAEC,OAAO,GAAD,OAAKC,IAAGC,QAAR,YAAmBD,IAAGC,QAAtB,YAAiCD,IAAGC,SAAWC,OAAQ,MAC/D,CAAEH,OAAO,GAAD,OAAKC,IAAGG,MAAR,YAAiBH,IAAGG,MAApB,YAA6BH,IAAGG,OAASD,OAAQ,KACzD,CAAEH,OAAO,GAAD,OAAKC,IAAGI,WAAR,YAAsBJ,IAAGI,WAAzB,YAAuCJ,IAAGI,YAAcF,OAAQ,KACxE,CAAEH,OAAO,GAAD,OAAKC,IAAGK,WAAR,YAAsBL,IAAGK,WAAzB,YAAuCL,IAAGK,YAAcH,OAAQ,IACxE,CAAEH,OAAO,GAAD,OAAKC,IAAGM,IAAR,YAAeN,IAAGM,IAAlB,YAAyBN,IAAGM,KAAOJ,OAAQ,IACnD,CAAEH,OAAQ,eAAgBG,OAAQ,IAClC,CAAEH,OAAO,GAAD,OAAKC,IAAGO,OAAR,YAAkBP,IAAGO,OAArB,YAA+BP,IAAGO,QAAUL,OAAQ,IAC5D,CAAEH,OAAO,GAAD,OAAKC,IAAGO,OAAR,YAAkBP,IAAGO,QAAUL,OAAQ,GAC/C,CAAEH,OAAQC,IAAGO,OAAQL,OAAQ,IA8BhBM,EA3BmBlH,IAAMmH,MAAK,kBAC3C,kBAAChH,EAAA,EAAD,KACE,kBAACoG,EAAA,EAAD,KACE,kBAACxD,EAAA,EAAD,KACE,kBAACoD,EAAA,EAAD,kBAGA,kBAACA,EAAA,EAAD,iBAKJ,kBAACrD,EAAA,EAAD,KACG0D,EAAYY,KAAI,SAACC,EAAKC,GAAN,OACf,kBAACvE,EAAA,EAAD,CAAUwE,IAAKD,GACb,kBAAC3D,EAAA,EAAD,KACI0D,EAAIZ,QAER,kBAAC9C,EAAA,EAAD,eACM0D,EAAIT,OADV,kBCOKY,EAjC+BxH,IAAMmH,MAAK,gBAAGM,EAAH,EAAGA,WAAYC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,YAA5B,OACvD,kBAACxH,EAAA,EAAD,KACE,kBAACoG,EAAA,EAAD,KACE,kBAACxD,EAAA,EAAD,KACE,kBAACoD,EAAA,EAAD,eAGA,kBAACA,EAAA,EAAD,gBAKJ,kBAACrD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACY,EAAA,EAAD,KACG8D,GAEH,kBAAC9D,EAAA,EAAD,gBACO+D,KAGT,kBAAC3E,EAAA,EAAD,KACE,kBAACY,EAAA,EAAD,cAGA,kBAACA,EAAA,EAAD,gBACOgE,UC5BTC,EAAkC,CACtCC,UAAW,GACX9C,WAAY,KAkCC+C,EA/BiC,SAACzH,GAA6B,IACpE0H,EAAS1H,EAAT0H,KAEFC,EAAWhI,IAAMiI,aAAY,WAGjC,IADA,IAAMC,EAAQ,GAF4C,WAGjDZ,GAEP,IAAMD,EAAMU,EAAKX,KAAI,SAACe,EAASC,GAAV,OACnB,kBAACzE,EAAA,EAAD,CAAW4D,IAAG,UAAKa,EAAL,YAAUd,IACtB,kBAACe,EAAA,EAAD,CAAYxF,QAAQ,KAAKgB,MAAM,SAASxB,MAAM,YAAYiG,MAAOV,GAC9DO,EAAQb,QAKTiB,EAAW,kBAACxF,EAAA,EAAD,CAAUwE,IAAG,aAAQD,IAAMD,GAC5Ca,EAAMM,KAAKD,IAXJjB,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAI,EAAvBA,GAaT,OAAOY,IACN,CAACH,IAEJ,OACE,kBAAC5H,EAAA,EAAD,KACE,kBAAC2C,EAAA,EAAD,KACGkF,OCuBMS,EAnDa,WAAO,IAAD,EACNC,aAAY,SAACC,GAAD,MAAyB,CAC7DC,QAASD,EAAMC,QACfb,KAAMY,EAAMT,UAFNU,EADwB,EACxBA,QAASb,EADe,EACfA,KAIXc,EAAWC,cAEXC,EAAoBd,uBAAY,WAAa,IAAD,EAC5BW,EAAQ,GAApBI,EADwC,EACxCA,GAAIC,EADoC,EACpCA,IACNC,EAAWN,EAAQA,EAAQO,OAAS,GAAGH,GAC7CH,EAASO,YAAoBJ,EAAIE,EAAUD,MAC1C,CAACL,EAASC,IAGPQ,EAAST,EAAQ,GACjBU,EAASV,EAAQA,EAAQO,OAAS,GAExC,OACE,oCACE,kBAACd,EAAA,EAAD,CAAYxF,QAAQ,MAApB,uBACA,kBAAC0G,EAAA,EAAD,CAAMC,WAAS,EAACpH,QAAS,EAAGkG,MAAO,CAAEmB,UAAW,QAC9C,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACpH,QAAS,EAAGkG,MAAO,CAAEuB,aAAc,QACjD,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACE,EAAA,EAAD,CACEzH,MAAM,UACN0H,QAAShB,EACTT,MAAO,CAAEuB,aAAc,IACvBhH,QAAQ,aAJV,SASF,kBAAC0G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAAC,EAAD,CAAa7B,KAAMA,MAGvB,kBAAC,EAAD,CACEL,YAAa2B,EAAOW,MACpBvC,WAAY4B,EAAO1G,KACnBgF,YAAa2B,EAAOU,SAGxB,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAAC,EAAD,UCxDKnB","file":"static/js/g_slots.669b10dd.chunk.js","sourcesContent":["import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'table' : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return React.createElement(TableContext.Provider, {\n    value: table\n  }, React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tbody' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$selected': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.04)' // grey[100]\n        : 'rgba(255, 255, 255, 0.08)'\n      },\n      '&$hover:hover': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.07)' // grey[200]\n        : 'rgba(255, 255, 255, 0.14)'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tr' : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      head: classes.head,\n      footer: classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0px 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var Component;\n\n  if (component) {\n    Component = component;\n  } else {\n    Component = tablelvl2 && tablelvl2.variant === 'head' ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && tablelvl2 && tablelvl2.variant === 'head') {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], {\n      head: table && table.stickyHeader && classes.stickyHeader\n    }[variant]),\n    \"aria-sort\": ariaSort,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['head', 'body', 'footer'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\n\nconst DarkTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n}))(TableCell);\n\nexport default DarkTableCell;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'thead' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport DarkTableCell from '../../common/DarkTableCell';\nimport { DBSlotOptions as SO } from '../../../store/types';\n\n/** used to display the payout table */\nconst payoutTable = [\n  { symbol: `${SO.JACKPOT} ${SO.JACKPOT} ${SO.JACKPOT}`, payout: 1666 },\n  { symbol: `${SO.SEVEN} ${SO.SEVEN} ${SO.SEVEN}`, payout: 300 },\n  { symbol: `${SO.TRIPLE_BAR} ${SO.TRIPLE_BAR} ${SO.TRIPLE_BAR}`, payout: 100 },\n  { symbol: `${SO.DOUBLE_BAR} ${SO.DOUBLE_BAR} ${SO.DOUBLE_BAR}`, payout: 50 },\n  { symbol: `${SO.BAR} ${SO.BAR} ${SO.BAR}`, payout: 25 },\n  { symbol: '3 of any bar', payout: 12 },\n  { symbol: `${SO.CHERRY} ${SO.CHERRY} ${SO.CHERRY}`, payout: 12 },\n  { symbol: `${SO.CHERRY} ${SO.CHERRY}`, payout: 6 },\n  { symbol: SO.CHERRY, payout: 3 },\n];\n\nconst PayoutTable: React.FC<{}> = React.memo(() => (\n  <Table>\n    <TableHead>\n      <TableRow>\n        <DarkTableCell>\n          Slot Roll\n        </DarkTableCell>\n        <DarkTableCell>\n          Payout\n        </DarkTableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {payoutTable.map((row, i) => (\n        <TableRow key={i}>\n          <TableCell>\n            { row.symbol }\n          </TableCell>\n          <TableCell>\n            {`${row.payout} : 1`}\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n));\n\nexport default PayoutTable;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport DarkTableCell from '../../common/DarkTableCell';\n\ninterface MoneyTableProps {\n  playerName: string;\n  playerMoney: number;\n  dealerMoney: number;\n}\n\nconst MoneyTable: React.FC<MoneyTableProps> = React.memo(({ playerName, playerMoney, dealerMoney }: MoneyTableProps) => (\n  <Table>\n    <TableHead>\n      <TableRow>\n        <DarkTableCell>\n          Player\n        </DarkTableCell>\n        <DarkTableCell>\n          Money\n        </DarkTableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      <TableRow>\n        <TableCell>\n          {playerName}\n        </TableCell>\n        <TableCell>\n          {`$${playerMoney}`}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          House\n        </TableCell>\n        <TableCell>\n          {`$${dealerMoney}`}\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  </Table>\n));\n\nexport default MoneyTable;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { DBSlotDisplay } from '../../../store/types';\n\ninterface ReelDisplayProps {\n  reel: DBSlotDisplay[];\n}\n\nconst cellStyles: React.CSSProperties = {\n  minHeight: 39,\n  fontWeight: 900,\n};\n\nconst ReelDisplay: React.FC<ReelDisplayProps> = (props: ReelDisplayProps) => {\n  const { reel } = props;\n  /** generate code for slot machine */\n  const getSlots = React.useCallback((): React.ReactNode[] => {\n    // display for slots\n    const slots = [];\n    for (let i = 0; i < 3; i += 1) {\n      // create 3 cells in a row\n      const row = reel.map((reelRow, j) => (\n        <TableCell key={`${j},${i}`}>\n          <Typography variant=\"h4\" align=\"center\" color=\"secondary\" style={cellStyles}>\n            {reelRow[i]}\n          </Typography>\n        </TableCell>\n      ));\n      // separate into rows\n      const slotRow = (<TableRow key={`row${i}`}>{row}</TableRow>);\n      slots.push(slotRow);\n    }\n    return slots;\n  }, [reel]);\n\n  return (\n    <Table>\n      <TableBody>\n        {getSlots()}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default ReelDisplay;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { updateDBSlotMachine } from '../../../store/modules/slots';\nimport { DBRootState } from '../../../store/types';\nimport PayoutTable from './PayoutTable';\nimport MoneyTable from './MoneyTable';\nimport ReelDisplay from './ReelDisplay';\n\n/* Slots  ->  ReelDisplay\n *       |->  MoneyTable\n *       |->  PayoutTable */\nconst Slots: React.FC<{}> = () => {\n  const { players, reel } = useSelector((state: DBRootState) => ({\n    players: state.players,\n    reel: state.slots,\n  }));\n  const dispatch = useDispatch();\n\n  const updateSlotMachine = useCallback((): void => {\n    const { id, bet } = players[0];\n    const dealerId = players[players.length - 1].id;\n    dispatch(updateDBSlotMachine(id, dealerId, bet));\n  }, [players, dispatch]);\n\n  // https://vegasclick.com/games/slots/how-they-work\n  const player = players[0];\n  const dealer = players[players.length - 1];\n\n  return (\n    <>\n      <Typography variant=\"h2\">Casino Slot Machine</Typography>\n      <Grid container spacing={1} style={{ marginTop: '2em' }}>\n        <Grid item sm={6} xs={12}>\n          <Grid container spacing={1} style={{ marginBottom: '1em' }}>\n            <Grid item sm={3} xs={12}>\n              <Button\n                color=\"primary\"\n                onClick={updateSlotMachine}\n                style={{ marginBottom: 15 }}\n                variant=\"contained\"\n              >\n                  Spin\n              </Button>\n            </Grid>\n            <Grid item sm={9} xs={12}>\n              <ReelDisplay reel={reel} />\n            </Grid>\n          </Grid>\n          <MoneyTable\n            playerMoney={player.money}\n            playerName={player.name}\n            dealerMoney={dealer.money}\n          />\n        </Grid>\n        <Grid item sm={6} xs={12}>\n          <PayoutTable />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Slots;\n","import Slots from './Slots';\n\nexport default Slots;\n"],"sourceRoot":""}