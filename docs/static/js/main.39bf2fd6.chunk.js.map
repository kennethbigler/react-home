{"version":3,"sources":["store/modules/dota2.js","store/modules/graphql.js","store/modules/yahtzee.js","apis/Deck.js","components/Routes.jsx","WithTheme.jsx","store/index.js","store/configureStore.js","WithStore.jsx","registerServiceWorker.js","index.js","store/initialState.js","components/common/loading-spinner/LoadingSpinner.styles.js","components/common/loading-spinner/LoadingSpinner.jsx","components/common/loading-spinner/index.js","store/immutableHelpers.js","store/modules/players.js","store/modules/git.js","helpers/asyncForEach.js","store/modules/theme.js","store/modules/turn.js"],"names":["ADD","REMOVE","UPDATE_LINEUP","RESET_LINEUP","addLineup","type","lineup","newDota2Lineup","removeLineup","set","updateLineup","order","resetLineup","reducer","state","initialState","dota2","action","insertItem","removeItemInArray","updateArrayInArray","SET_TOKEN","setToken","token","graphql","assign","addScore","score","yahtzee","NEW_DECK","name","weight","suit","getNewDeck","map","card","getDeck","localForage","getItem","then","data","catch","setDeck","deck","setItem","shuffle","shuffledDeck","i","j","Math","floor","random","k","temp","deal","num","cards","length","push","pop","rankSort","a","b","ResumeRoutes","lazy","GameRoutes","Routes","handleNav","loc","props","location","history","pathname","resume","games","style","padding","paddingTop","fallback","path","render","this","Component","withRouter","connect","theme","setTheme","createMuiTheme","typography","useNextVariants","palette","primary","secondary","MuiThemeProvider","CssBaseline","rootReducer","combineReducers","git","players","turn","loadState","configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","WithStore","store","subscribe","throttle","getState","e","console","log","setState","React","PureComponent","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","newPlayer","id","isBot","money","bet","hands","radiant","number","selection","dire","storyID","branchMessage","branchPrefix","casePreference","commitPrefix","indigo","deepOrange","player","hand","styles","container","display","margin","marginTop","LoadingSpinner","memo","CircularProgress","size","array","item","newArr","slice","updateObjectInArray","ins","key","idx","removeItem","reject","RESET","UPDATE_NAME","UPDATE_BOT","UPDATE_BET","PAY_PLAYER","SPLIT_HAND","DRAW_CARD","SWAP_CARD","NEW_HAND","updateName","updateBot","updateBet","payout","resetStatus","find","updatedPlayer","newHand","weigh","dispatch","Deck","sort","soft","createNewHandAction","drawCard","hNum","drawnCards","newHands","createDrawCardAction","splitHand","hand1","hand2","splice","createSplitHandAction","swapCards","cardsToDiscard","asyncForEach","updatedHand","createSwapCardsAction","SET_KEY","SET_BRANCH_MESSAGE","SET_BRANCH_PREFIX","SET_CASE_PREFERENCE","SET_COMMIT_PREFIX","setKey","setBranchMessage","setBranchPrefix","setCasePreference","setCommitPrefix","isSet","callback","index","DARK_THEME","LIGHT_THEME","displayDarkTheme","displayLightTheme","blueGrey","INCR_PLAYER","INCR_HAND","incrPlayerTurn","incrHandTurn","resetTurn"],"mappings":"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","file":"static/js/main.39bf2fd6.chunk.js","sourcesContent":["// functions\nimport { insertItem, updateArrayInArray, removeItemInArray } from '../immutableHelpers';\n// initialState\nimport initialState, { newDota2Lineup } from '../initialState';\n\n// --------------------     Actions     -------------------- //\nconst ADD = 'casino/dota2/ADD_LINEUP';\nconst REMOVE = 'casino/dota2/REMOVE_LINEUP';\nconst UPDATE_LINEUP = 'casino/dota2/UPDATE_LINEUP';\nconst RESET_LINEUP = 'casino/dota2/RESET_LINEUP';\n\n// -------------------- Action Creators     -------------------- //\nexport function addLineup() {\n  return { type: ADD, lineup: newDota2Lineup() };\n}\nexport function removeLineup(set) {\n  return { type: REMOVE, set };\n}\nexport function updateLineup(order, set) {\n  return { type: UPDATE_LINEUP, order, set };\n}\nexport function resetLineup(set) {\n  return { type: RESET_LINEUP, order: newDota2Lineup(), set };\n}\n\n// --------------------     Reducer     -------------------- //\nexport default function reducer(state = initialState.dota2, action) {\n  switch (action.type) {\n    case ADD:\n      return insertItem(state, action.lineup);\n    case REMOVE:\n      return removeItemInArray(state, action.set);\n    case UPDATE_LINEUP:\n    case RESET_LINEUP:\n      return updateArrayInArray(state, action.order, action.set);\n    default:\n      return state;\n  }\n}\n\n// --------------------     Thunks     -------------------- //\n","// functions\nimport assign from 'lodash/assign';\n// initialState\nimport initialState from '../initialState';\n\n// --------------------     Actions     -------------------- //\nconst SET_TOKEN = 'resume/graphql/SET_TOKEN';\n\n// --------------------     Action Creators     -------------------- //\nexport const setToken = (token = '') => ({ type: SET_TOKEN, token });\n\n// --------------------     Reducers     -------------------- //\nexport default function reducer(state = initialState.graphql, action) {\n  switch (action.type) {\n    case SET_TOKEN:\n      return assign({}, state, { token: action.token });\n    default:\n      return state;\n  }\n}\n\n// --------------------     Thunks     -------------------- //\n","// functions\nimport { insertItem } from '../immutableHelpers';\n// initialState\nimport initialState from '../initialState';\n\n// --------------------     Actions     -------------------- //\nconst ADD = 'casino/yahtzee/SCORE';\n\n// -------------------- Action Creators     -------------------- //\nexport const addScore = (score) => ({ type: ADD, score });\n\n// --------------------     Reducers     -------------------- //\nexport default function reducer(state = initialState.yahtzee, action) {\n  switch (action.type) {\n    case ADD:\n      return insertItem(state, { score: action.score });\n    default:\n      return state;\n  }\n}\n\n// --------------------     Thunks     -------------------- //\n","import localForage from 'localforage';\nimport assign from 'lodash/assign';\nimport map from 'lodash/map';\n\nconst NEW_DECK = [\n  { name: '2', weight: 2, suit: '♣' }, { name: '3', weight: 3, suit: '♣' },\n  { name: '4', weight: 4, suit: '♣' }, { name: '5', weight: 5, suit: '♣' },\n  { name: '6', weight: 6, suit: '♣' }, { name: '7', weight: 7, suit: '♣' },\n  { name: '8', weight: 8, suit: '♣' }, { name: '9', weight: 9, suit: '♣' },\n  { name: '10', weight: 10, suit: '♣' }, { name: 'J', weight: 11, suit: '♣' },\n  { name: 'Q', weight: 12, suit: '♣' }, { name: 'K', weight: 13, suit: '♣' },\n  { name: 'A', weight: 14, suit: '♣' }, { name: '2', weight: 2, suit: '♦' },\n  { name: '3', weight: 3, suit: '♦' }, { name: '4', weight: 4, suit: '♦' },\n  { name: '5', weight: 5, suit: '♦' }, { name: '6', weight: 6, suit: '♦' },\n  { name: '7', weight: 7, suit: '♦' }, { name: '8', weight: 8, suit: '♦' },\n  { name: '9', weight: 9, suit: '♦' }, { name: '10', weight: 10, suit: '♦' },\n  { name: 'J', weight: 11, suit: '♦' }, { name: 'Q', weight: 12, suit: '♦' },\n  { name: 'K', weight: 13, suit: '♦' }, { name: 'A', weight: 14, suit: '♦' },\n  { name: '2', weight: 2, suit: '♥' }, { name: '3', weight: 3, suit: '♥' },\n  { name: '4', weight: 4, suit: '♥' }, { name: '5', weight: 5, suit: '♥' },\n  { name: '6', weight: 6, suit: '♥' }, { name: '7', weight: 7, suit: '♥' },\n  { name: '8', weight: 8, suit: '♥' }, { name: '9', weight: 9, suit: '♥' },\n  { name: '10', weight: 10, suit: '♥' }, { name: 'J', weight: 11, suit: '♥' },\n  { name: 'Q', weight: 12, suit: '♥' }, { name: 'K', weight: 13, suit: '♥' },\n  { name: 'A', weight: 14, suit: '♥' }, { name: '2', weight: 2, suit: '♠' },\n  { name: '3', weight: 3, suit: '♠' }, { name: '4', weight: 4, suit: '♠' },\n  { name: '5', weight: 5, suit: '♠' }, { name: '6', weight: 6, suit: '♠' },\n  { name: '7', weight: 7, suit: '♠' }, { name: '8', weight: 8, suit: '♠' },\n  { name: '9', weight: 9, suit: '♠' }, { name: '10', weight: 10, suit: '♠' },\n  { name: 'J', weight: 11, suit: '♠' }, { name: 'Q', weight: 12, suit: '♠' },\n  { name: 'K', weight: 13, suit: '♠' }, { name: 'A', weight: 14, suit: '♠' },\n];\n\n/** immutably get a copy of new deck O(N) */\nconst getNewDeck = () => map(NEW_DECK, (card) => assign({}, card));\n\n/** get immutable copy of deck O(N) */\nconst getDeck = () => localForage\n  .getItem('deck')\n  .then((data) => (data || getNewDeck()))\n  .catch(() => getNewDeck());\n\n/** immutably update deck O(N) */\nconst setDeck = (deck) => localForage\n  .setItem('deck', deck)\n  .catch(() => null);\n\n/** randomize order of the cards O(N + M) */\nconst shuffle = () => {\n  // get a new deck\n  const shuffledDeck = getNewDeck();\n  // shuffle the cards\n  for (let i = 0; i < 100; i += 1) {\n    const j = Math.floor(Math.random() * 52);\n    const k = Math.floor(Math.random() * 52);\n    const temp = shuffledDeck[j];\n    shuffledDeck[j] = shuffledDeck[k];\n    shuffledDeck[k] = temp;\n  }\n  // update deck state\n  return setDeck(shuffledDeck);\n};\n\n/** return an array of a specified length O(2N) */\nconst deal = (num = 0) => {\n  const cards = [];\n  return getDeck()\n    .then((deck) => {\n      // verify we have enough cards\n      if (num > deck.length) {\n        return deck;\n      }\n      // get the cards\n      for (let i = 0; i < num; i += 1) {\n        cards.push(deck.pop());\n      }\n      return deck;\n    })\n    .then((deck) => setDeck(deck))\n    .then(() => cards);\n};\n\n/** sort by card weight */\nconst rankSort = (a, b) => a.weight - b.weight;\n\nexport default { shuffle, deal, rankSort };\n","import React, { Component, Suspense, lazy } from 'react';\nimport types from 'prop-types';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport LoadingSpinner from './common/loading-spinner';\n// Parents: WithTheme\n\n// lazy load sub routers\nconst ResumeRoutes = lazy(() => import(/* webpackChunkName: \"resume\" */ './resume/Routes'));\nconst GameRoutes = lazy(() => import(/* webpackChunkName: \"games\" */ './games/Routes'));\n\nclass Routes extends Component {\n  handleNav = (loc) => {\n    const { location, history } = this.props;\n    if (loc !== location.pathname) {\n      history.push(loc);\n    }\n  };\n\n  resume = (props) => <ResumeRoutes handleNav={this.handleNav} {...props} />;\n\n  games = (props) => <GameRoutes handleNav={this.handleNav} {...props} />;\n\n  render() {\n    return (\n      <main style={{ padding: '1em', paddingTop: '5em' }}>\n        <Suspense fallback={<LoadingSpinner />}>\n          <Switch>\n            <Route path=\"/games\" render={this.games} />\n            <Route render={this.resume} />\n          </Switch>\n        </Suspense>\n      </main>\n    );\n  }\n}\n\nRoutes.propTypes = {\n  history: types.shape({\n    push: types.func.isRequired,\n  }).isRequired,\n  location: types.shape({ pathname: types.string.isRequired }).isRequired,\n};\n\nexport default withRouter(Routes);\n","import React from 'react';\nimport types from 'prop-types';\nimport { connect } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Routes from './components/Routes';\n\n/** App class that wraps higher level components of the application */\nconst WithTheme = (props) => {\n  const { theme } = props;\n  const setTheme = createMuiTheme({\n    typography: {\n      useNextVariants: true,\n    },\n    palette: {\n      type: theme.type,\n      primary: theme.primary,\n      secondary: theme.secondary,\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={setTheme}>\n      <CssBaseline />\n      <HashRouter>\n        <Routes />\n      </HashRouter>\n    </MuiThemeProvider>\n  );\n};\n\nWithTheme.propTypes = {\n  theme: types.shape({\n    type: types.string.isRequired,\n    primary: types.shape({}).isRequired,\n    secondary: types.shape({}).isRequired,\n  }),\n};\n\n// react-redux export\nconst mapStateToProps = (state) => ({\n  theme: state.theme,\n});\n\nexport default connect(mapStateToProps)(WithTheme);\n","import { combineReducers } from 'redux';\nimport dota2 from './modules/dota2';\nimport git from './modules/git';\nimport graphql from './modules/graphql';\nimport players from './modules/players';\nimport theme from './modules/theme';\nimport turn from './modules/turn';\nimport yahtzee from './modules/yahtzee';\n\nconst rootReducer = combineReducers({\n  dota2, git, graphql, players, theme, turn, yahtzee,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport localForage from 'localforage';\nimport rootReducer from '.';\nimport initialState from './initialState';\n\n/** funtion to read 'state' value from local storage and return it, or default state\n * @return {Object[]} - last saved application state\n */\nexport const loadState = async () => localForage\n  .getItem('state')\n  .then((state) => (state ? { ...initialState, ...state } : initialState))\n  // if there are any issues, just load default state\n  .catch(() => initialState);\n\n/** funtion to save 'state' value to local storage\n * @param {Object[]} state - current application state\n */\nexport const saveState = (state) => localForage\n  .setItem('state', state)\n  .catch((e) => console.log('state to db save failed: ', e));\n\nexport const configureStore = (state) => createStore(\n  rootReducer,\n  state,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport throttle from 'lodash/throttle';\nimport WithTheme from './WithTheme';\nimport { loadState, saveState, configureStore } from './store/configureStore';\nimport LoadingSpinner from './components/common/loading-spinner';\n\n/** App class that wraps higher level components of the application */\nclass WithStore extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    loadState()\n      .then(configureStore)\n      .then((store) => {\n        store.subscribe(throttle(() => saveState(store.getState()), 1000));\n        this.setState({ store });\n      });\n  }\n\n  render() {\n    const { store } = this.state;\n    return store ? (\n      <Provider store={store}>\n        <WithTheme />\n      </Provider>\n    ) : <LoadingSpinner />;\n  }\n}\n\nexport default WithStore;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './WithStore';\nimport registerServiceWorker from './registerServiceWorker';\n\n/* eslint-disable react/jsx-filename-extension */\nReactDOM.render(<App />, document.getElementById('root'));\n/* eslint-enable react/jsx-filename-extension */\nregisterServiceWorker();\n","import assign from 'lodash/assign';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\n\nexport const newPlayer = (id, name = 'Bot', isBot = true) => ({\n  id,\n  name,\n  isBot,\n  status: '',\n  money: 100,\n  bet: 5,\n  hands: [],\n});\n\nexport const newDota2Lineup = () => [...[\n  assign({}, { name: 'Ban 1', radiant: assign({}, { number: 1, selection: null }), dire: assign({}, { number: 2, selection: null }) }),\n  assign({}, { name: 'Ban 2', radiant: assign({}, { number: 3, selection: null }), dire: assign({}, { number: 4, selection: null }) }),\n  assign({}, { name: 'Ban 3', radiant: assign({}, { number: 5, selection: null }), dire: assign({}, { number: 6, selection: null }) }),\n  assign({}, { name: 'Pick 1', radiant: assign({}, { number: 7, selection: null }), dire: assign({}, { number: 8, selection: null }) }),\n  assign({}, { name: 'Pick 2', radiant: assign({}, { number: 10, selection: null }), dire: assign({}, { number: 9, selection: null }) }),\n  assign({}, { name: 'Ban 4', radiant: assign({}, { number: 11, selection: null }), dire: assign({}, { number: 12, selection: null }) }),\n  assign({}, { name: 'Ban 5', radiant: assign({}, { number: 13, selection: null }), dire: assign({}, { number: 14, selection: null }) }),\n  assign({}, { name: 'Pick 3', radiant: assign({}, { number: 16, selection: null }), dire: assign({}, { number: 15, selection: null }) }),\n  assign({}, { name: 'Pick 4', radiant: assign({}, { number: 18, selection: null }), dire: assign({}, { number: 17, selection: null }) }),\n  assign({}, { name: 'Ban 6', radiant: assign({}, { number: 20, selection: null }), dire: assign({}, { number: 19, selection: null }) }),\n  assign({}, { name: 'Pick 5', radiant: assign({}, { number: 21, selection: null }), dire: assign({}, { number: 22, selection: null }) }),\n]];\n\nexport default {\n  dota2: [newDota2Lineup()],\n  git: {\n    storyID: '',\n    branchMessage: '',\n    branchPrefix: 'features',\n    casePreference: 'snake_case',\n    commitPrefix: true,\n  },\n  graphql: {\n    token: '',\n  },\n  players: [\n    newPlayer(1, 'Ken', false),\n    newPlayer(2),\n    newPlayer(3),\n    newPlayer(4),\n    newPlayer(5),\n    newPlayer(6),\n    newPlayer(0, 'Dealer', true),\n  ],\n  theme: {\n    primary: indigo,\n    secondary: deepOrange,\n    type: 'dark',\n  },\n  turn: { player: 0, hand: 0 },\n  yahtzee: [],\n};\n","const styles = {\n  container: {\n    display: 'block',\n    margin: 'auto',\n    marginTop: 40,\n  },\n};\n\nexport default styles;\n","import React, { memo } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './LoadingSpinner.styles';\n\nconst LoadingSpinner = memo(() => (\n  <CircularProgress size={100} style={styles.container} />\n));\n\nexport default LoadingSpinner;\n","import LoadingSpinner from './LoadingSpinner';\n\nexport default LoadingSpinner;\n","import map from 'lodash/map';\nimport reject from 'lodash/reject';\n\n// Immutable helper functions\nexport function insertItem(array, item) {\n  const newArr = array.slice();\n  newArr.push(item);\n  return newArr;\n}\n\nexport function updateObjectInArray(array, ins, key) {\n  return map(\n    array,\n    (item) => (item[key] !== ins[key] ? item : { ...item, ...ins }),\n  );\n}\n\nexport function updateArrayInArray(array, ins, idx) {\n  return map(array, (player, i) => (i !== idx ? player : ins));\n}\n\nexport function removeItem(array, id) {\n  return reject(array, ['id', id]);\n}\n\nexport function removeItemInArray(array, idx) {\n  return [...array.slice(0, idx), ...array.slice(idx + 1)];\n}\n","// functions\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\nimport asyncForEach from '../../helpers/asyncForEach';\nimport Deck from '../../apis/Deck';\nimport {\n  removeItem,\n  updateArrayInArray,\n  updateObjectInArray,\n  insertItem,\n} from '../immutableHelpers';\n// initialState\nimport initialState, { newPlayer } from '../initialState';\n\n// --------------------     Actions     -------------------- //\nconst ADD = 'casino/player/ADD';\nconst REMOVE = 'casino/player/REMOVE';\nconst RESET = 'casino/player/RESET';\nconst UPDATE_NAME = 'casino/player/UPDATE_NAME';\nconst UPDATE_BOT = 'casino/player/UPDATE_BOT';\nconst UPDATE_BET = 'casino/player/UPDATE_BET';\nconst PAY_PLAYER = 'casino/player/PAY_PLAYER';\nconst SPLIT_HAND = 'casino/player/SPLIT_HAND';\nconst DRAW_CARD = 'casino/player/DRAW_CARD';\nconst SWAP_CARD = 'casino/player/SWAP_CARD';\nconst NEW_HAND = 'casino/player/NEW_HAND';\n\n// -------------------- Action Creators     -------------------- //\n/** function to add a player to the state\n * @param {Object[]} players - to get unique id\n * @param {string} name - name of player is only var\n * @return {Object}\n */\nexport function addPlayer(players, name) {\n  const player = newPlayer(players.length, name);\n  return { type: ADD, player };\n}\n\n/** function to remove player from player array\n * @param {number} id - id of player to remove\n * @return {Object}\n */\nexport function removePlayer(id) {\n  return { type: REMOVE, id };\n}\n\n/** function to update a player's name\n * @param {number} id - id of player\n * @param {string} name - new name of player\n * @return {Object}\n */\nexport function updateName(id, name) {\n  return { type: UPDATE_NAME, player: { id, name }};\n}\n\n/** function to update a player's bot status\n * @param {number} id - id of player\n * @param {boolean} isBot - is the player a bot\n * @return {Object}\n */\nexport function updateBot(id, isBot = true) {\n  return { type: UPDATE_BOT, player: { id, isBot }};\n}\n\n/** function to update a player's bet\n * @param {number} id - id of player\n * @param {number} bet - current bet\n * @return {Object}\n */\nexport function updateBet(id = 0, bet = 5) {\n  return { type: UPDATE_BET, player: { id, bet }};\n}\n\n/** function to pay the winners and take money from the losers\n * @param {number} id - id of player\n * @param {string} status - win or lose\n * @param {number} money - net money gained or lost\n * @return {Object}\n */\nexport function payout(id, status, money) {\n  return { type: PAY_PLAYER, player: { id, status, money }};\n}\n\nfunction createSplitHandAction(id, newHands) {\n  return { type: SPLIT_HAND, player: { id, hands: newHands }};\n}\n\nfunction createDrawCardAction(id, newHands) {\n  return { type: DRAW_CARD, player: { id, hands: newHands }};\n}\n\nfunction createSwapCardsAction(id, updatedHand) {\n  return { type: SWAP_CARD, player: { id, hands: updatedHand }};\n}\n\nfunction createNewHandAction(id, cards, soft, weight) {\n  return { type: NEW_HAND, player: { id, hands: [{ cards, weight, soft }]}};\n}\n\n/** function to reset player status\n * @param {number} id - optional, what player should get a new hand, default 0\n * @return {Object}\n */\nexport function resetStatus(id = 0) {\n  return {\n    type: RESET,\n    player: {\n      id, status: '', hands: [], bet: 5,\n    },\n  };\n}\n\n// --------------------     Reducer     -------------------- //\nexport default function reducer(state = initialState.players, action) {\n  switch (action.type) {\n    case RESET:\n    case UPDATE_NAME:\n    case UPDATE_BOT:\n    case UPDATE_BET:\n    case SPLIT_HAND:\n    case DRAW_CARD:\n    case SWAP_CARD:\n    case NEW_HAND:\n      return updateObjectInArray(state, action.player, 'id');\n    case PAY_PLAYER: {\n      const { id, status, money } = action.player;\n\n      const player = find(state, ['id', id]);\n      const updatedPlayer = {\n        ...player,\n        money: (player.money += money),\n        status,\n      };\n\n      return updateObjectInArray(state, updatedPlayer, 'id');\n    }\n    case ADD:\n      return insertItem(state, action.player);\n    case REMOVE:\n      return removeItem(state, action.id);\n    default:\n      return state;\n  }\n}\n\n// --------------------     Thunks     -------------------- //\n/** function to have a player draw a card\n * @param {number} id - optional, what player should get a new hand, default 0\n * @param {number} num - optional, number of cards, default 1\n * @param {function} weigh - optional, get weight of hand for game\n * @return {Object}\n */\nexport function newHand(id = 0, num = 1, weigh = null) {\n  return (dispatch) => Deck.deal(num)\n    .then((cards) => {\n      cards.sort(Deck.rankSort);\n      const { weight, soft } = weigh ? weigh(cards) : { weight: 0 };\n      return { weight, soft, cards };\n    })\n    .then(({ weight, soft, cards }) => dispatch(createNewHandAction(id, cards, soft, weight)));\n}\n\n/** function to have a player draw a card\n * @param {Object[]} hands - pass in player's hands to be mutated with new card\n * @param {number} id - tells us which player to update\n * @param {number} hNum - optional, if multiple hands\n * @param {number} num - optional, number of cards, default 1\n * @param {function} weigh - optional, get weight of hand for game\n * @return {Object}\n */\nexport function drawCard(hands, id, hNum = 0, num = 1, weigh = null) {\n  return (dispatch) => Deck.deal(num)\n    .then((drawnCards) => {\n      const cards = [...hands[hNum].cards, ...drawnCards];\n      const { weight, soft } = weigh ? weigh(cards) : { weight: 0 };\n      const newHands = updateArrayInArray(hands, { cards, weight, soft }, hNum);\n      return newHands;\n    })\n    .then((newHands) => dispatch(createDrawCardAction(id, newHands)));\n}\n\n/** function to split players cards into 2 hands\n * @param {Object[]} hands - pass in player's hands to be mutated with new card\n * @param {number} id - tells us which player to update\n * @param {number} hNum - optional, if multiple hands\n * @param {function} weigh - optional, get weight of hand for game\n * @return {Object}\n */\nexport function splitHand(hands, id, hNum, weigh = null) {\n  return (dispatch) => {\n    const hand = hands[hNum];\n    // split the hands into 2\n    const hand1 = { cards: [hand.cards[0]]};\n    const hand2 = { cards: [hand.cards[1]]};\n\n    return Deck.deal(1)\n      .then((cards) => {\n        hand1.cards.push(cards[0]);\n      })\n      .then(() => {\n        Deck.deal(1)\n          .then((cards) => {\n            hand2.cards.push(cards[0]);\n\n            // update the weights\n            assign(hand1, weigh(hand1.cards));\n            assign(hand2, weigh(hand2.cards));\n            // update global hands\n            const newHands = updateArrayInArray(hands, hand2, hNum);\n            newHands.splice(hNum, 0, hand1);\n            return newHands;\n          })\n          .then((newHands) => dispatch(createSplitHandAction(id, newHands)));\n      });\n  };\n}\n\n/** iterate through array, removing each index number from hand\n * then add new cards to the hand\n * @param {Object[]} hands - pass in player's hands to be mutated with new card\n * @param {number} id - tells us which player to update\n * @param {array} cardsToDiscard - array of index numbers\n * @return {Object}\n */\nexport function swapCards(hands, id, cardsToDiscard) {\n  return (dispatch) => {\n    const cards = [...hands[0].cards];\n    asyncForEach(cardsToDiscard, async (idx) => {\n      [cards[idx]] = await Deck.deal(1);\n    }).then(() => {\n      cards.sort(Deck.rankSort);\n      const updatedHand = updateArrayInArray(hands, { cards }, 0);\n      dispatch(createSwapCardsAction(id, updatedHand));\n    });\n  };\n}\n","// functions\nimport assign from 'lodash/assign';\n// initialState\nimport initialState from '../initialState';\n\n// --------------------     Actions     -------------------- //\nconst SET_KEY = 'resume/git/SET_KEY';\nconst SET_BRANCH_MESSAGE = 'resume/git/SET_BRANCH_MESSAGE';\nconst SET_BRANCH_PREFIX = 'resume/git/SET_BRANCH_PREFIX';\nconst SET_CASE_PREFERENCE = 'resume/git/SET_CASE_PREFERENCE';\nconst SET_COMMIT_PREFIX = 'resume/git/SET_COMMIT_PREFIX';\n\n// --------------------     Action Creators     -------------------- //\nexport function setKey(storyID = '') {\n  return { type: SET_KEY, storyID };\n}\nexport function setBranchMessage(branchMessage = '') {\n  return { type: SET_BRANCH_MESSAGE, branchMessage };\n}\nexport function setBranchPrefix(branchPrefix = '') {\n  return { type: SET_BRANCH_PREFIX, branchPrefix };\n}\nexport function setCasePreference(casePreference = '') {\n  return { type: SET_CASE_PREFERENCE, casePreference };\n}\nexport function setCommitPrefix(isSet = true) {\n  return { type: SET_COMMIT_PREFIX, commitPrefix: isSet };\n}\n\n// --------------------     Reducers     -------------------- //\nexport default function reducer(state = initialState.git, action) {\n  switch (action.type) {\n    case SET_KEY:\n      return assign({}, state, { storyID: action.storyID });\n    case SET_BRANCH_PREFIX:\n      return assign({}, state, { branchPrefix: action.branchPrefix });\n    case SET_BRANCH_MESSAGE:\n      return assign({}, state, { branchMessage: action.branchMessage });\n    case SET_CASE_PREFERENCE:\n      return assign({}, state, {\n        casePreference: action.casePreference,\n      });\n    case SET_COMMIT_PREFIX:\n      return assign({}, state, { commitPrefix: action.commitPrefix });\n    default:\n      return state;\n  }\n}\n\n// --------------------     Thunks     -------------------- //\n","async function asyncForEach(array, callback) {\n  for (let index = 0; index < array.length; index += 1) {\n    /* eslint no-await-in-loop: 0 */\n    await callback(array[index], index, array);\n  }\n}\n\nexport default asyncForEach;\n","// functions\nimport assign from 'lodash/assign';\n// colors\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport indigo from '@material-ui/core/colors/indigo';\n// initialState\nimport initialState from '../initialState';\n\n// --------------------     Actions     -------------------- //\nconst DARK_THEME = 'resume/theme/DARK_THEME';\nconst LIGHT_THEME = 'resume/theme/LIGHT_THEME';\n\n// --------------------     Action Creators     -------------------- //\nexport const displayDarkTheme = () => ({ type: DARK_THEME });\nexport const displayLightTheme = () => ({ type: LIGHT_THEME });\n\n// --------------------     Reducers     -------------------- //\nexport default function reducer(state = initialState.theme, action) {\n  switch (action.type) {\n    case DARK_THEME:\n      return assign({}, state, { type: 'dark', primary: indigo, secondary: deepOrange });\n    case LIGHT_THEME:\n      return assign({}, state, { type: 'light', primary: blueGrey, secondary: deepOrange });\n    default:\n      return state;\n  }\n}\n\n// --------------------     Thunks     -------------------- //\n","// functions\nimport assign from 'lodash/assign';\n// initialState\nimport initialState from '../initialState';\n\n// --------------------     Actions     -------------------- //\nconst INCR_PLAYER = 'casino/turn/INCR';\nconst INCR_HAND = 'casino/turn/INCR_HAND';\nconst RESET = 'casino/turn/RESET';\n\n// --------------------     Action Creators     -------------------- //\nexport const incrPlayerTurn = () => ({ type: INCR_PLAYER });\nexport const incrHandTurn = () => ({ type: INCR_HAND });\nexport const resetTurn = () => ({ type: RESET });\n\n// --------------------     Reducers     -------------------- //\nexport default function reducer(state = initialState.turn, action) {\n  switch (action.type) {\n    case INCR_PLAYER:\n      return assign({}, state, { player: state.player + 1, hand: 0 });\n    case INCR_HAND:\n      return assign({}, state, { hand: state.hand + 1 });\n    case RESET:\n      return assign({}, state, { player: 0, hand: 0 });\n    default:\n      return state;\n  }\n}\n\n// --------------------     Thunks     -------------------- //\n"],"sourceRoot":""}