{"version":3,"sources":["components/resume/poker/PokerGraph.jsx","components/resume/poker/PokerTable.styles.js","components/resume/poker/PokerTable.jsx","components/resume/poker/helpers.js","constants/poker.js","components/resume/poker/PennyPokerNight.jsx","components/resume/poker/GigNowPokerNight.jsx","components/resume/poker/PokerNightTabs.jsx","components/resume/poker/index.js","constants/murder.js","components/resume/murder-mystery/MurderMysteryPanel.styles.js","components/resume/murder-mystery/MurderMysteryPanel.jsx","components/resume/murder-mystery/MurderMystery.jsx","components/resume/murder-mystery/index.js"],"names":["PokerNight","props","parsedScores","colors","domain","ticks","width","height","data","map","color","key","type","dataKey","stroke","connectNulls","interval","orientation","tickLine","itemSorter","a","value","styles","cell","paddingRight","whiteSpace","row","borderTop","PokerTable","totals","tableRows","chunk","sortBy","val","Table","TableHead","TableRow","TableCell","colSpan","i","TableBody","style","obj","parseData","scores","week","reduce","acc","hasIn","pennyPokerScores","name","Ken","Lauren","Aaron","Winston","Jordan","Landon","Lily","Keishi","Andy","Mike","Tom","Meeks","Sam","Gus","Ashley","Geoff","Ming","Zach","Scott","pennyPokerColors","amber","blue","blueGrey","brown","cyan","deepOrange","deepPurple","green","indigo","lightBlue","lightGreen","lime","orange","pink","purple","red","teal","yellow","grey","Emily","gigNowPokerScores","Sabik","Avi","Seb","Jonathan","Brady","Carlos","Matt","Dhruven","Dharam","Kaustubh","Patrick","gigNowPokerColors","zeroOutPreviousWeek","unshift","thisWeek","lastWeek","forOwn","length","PennyPokerNight","memo","PokerGraph","PokerNightTabs","useState","tab","setTab","AppBar","position","marginBottom","marginTop","Tabs","onChange","event","Tab","label","GigNowPokerNight","CASINO","VICTIM","I1","I2","I3","EMPLOYEE","MOTIVE","REGULAR","NEW_VISIT","owner","role","importance","person","gender","reporter","gunNut","escort","gladiator","coach","bouncer","follow","dancer","director","lawyer","diver","cop","prof","diner","ufo","crusader","assign","description","hint","clue","LabelTableCell","withStyles","root","maxWidth","container","display","justifyContent","item","MurderMysteryPanel","expanded","expandedKey","handleChange","ExpansionPanel","ExpansionPanelSummary","expandIcon","Typography","ExpansionPanelDetails","nl2br","MurderMystery","setExpanded","panel","exp","variant","gutterBottom","profiles","profile"],"mappings":"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","file":"static/js/r_poker.7fa9c08a.chunk.js","sourcesContent":["import React from 'react';\nimport types from 'prop-types';\nimport {\n  ResponsiveContainer, LineChart, Line, XAxis, YAxis, Tooltip,\n} from 'recharts';\nimport map from 'lodash/map';\n\nconst PokerNight = (props) => {\n  const {\n    parsedScores, colors, domain, ticks,\n  } = props;\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={650}>\n      <LineChart data={parsedScores}>\n        {map(colors, (color, key) => (\n          <Line\n            type=\"monotone\"\n            dataKey={key}\n            key={key}\n            stroke={color}\n            connectNulls\n          />\n        ))}\n        <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n        <YAxis\n          domain={domain}\n          width={40}\n          orientation=\"right\"\n          tickLine={false}\n          ticks={ticks && ticks}\n        />\n        <Tooltip itemSorter={(a) => -a.value} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nPokerNight.propTypes = {\n  parsedScores: types.arrayOf(types.objectOf(types.oneOfType([types.string, types.number]))).isRequired,\n  colors: types.objectOf(types.string).isRequired,\n  domain: types.arrayOf(types.number).isRequired,\n  ticks: types.arrayOf(types.number),\n};\n\nexport default PokerNight;\n","const styles = {\n  cell: {\n    paddingRight: 5,\n    whiteSpace: 'nowrap',\n  },\n  row: {\n    borderTop: '2px solid',\n  },\n};\n\nexport default styles;\n","import React from 'react';\nimport types from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport map from 'lodash/map';\nimport chunk from 'lodash/chunk';\nimport sortBy from 'lodash/sortBy';\nimport styles from './PokerTable.styles';\n\nconst PokerTable = (props) => {\n  const { totals } = props;\n  const tableRows = chunk(\n    sortBy(\n      map(totals, (val, key) => ({ key, val })),\n      ['val'],\n    ),\n    4,\n  );\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell colSpan=\"3\">Totals</TableCell>\n        </TableRow>\n      </TableHead>\n      {map(tableRows, (row, i) => (\n        <TableBody key={i} style={styles.row}>\n          <TableRow>\n            {map(row, (obj) => (\n              <TableCell key={obj.key} style={styles.cell}>{obj.key}</TableCell>\n            ))}\n          </TableRow>\n          <TableRow>\n            {map(row, (obj) => (\n              <TableCell key={obj.key} style={styles.cell}>{obj.val}</TableCell>\n            ))}\n          </TableRow>\n        </TableBody>\n      ))}\n    </Table>\n  );\n};\n\nPokerTable.propTypes = {\n  totals: types.objectOf(types.number).isRequired,\n};\n\nexport default PokerTable;\n","import reduce from 'lodash/reduce';\nimport hasIn from 'lodash/hasIn';\nimport map from 'lodash/map';\n\n/**\n * Helper function that takes an array and changes scores to be\n * the sums for a player, rather than just the single night\n *\n * @param {Array} scores - array of objects containing a night's results\n * @returns {Object} totals for all of the players\n */\nconst parseData = (scores) => {\n  const totals = {};\n\n  // iterate over all the scores\n  const parsedScores = map(scores, (week) => {\n    // iterate over the players in a week\n    const parsedWeek = reduce(week, (acc, val, key) => {\n      if (hasIn(totals, key) && key !== 'name') {\n        // update total with value (if total exists)\n        totals[key] += val;\n        acc[key] = totals[key];\n      } else if (key !== 'name') {\n        // add value to totals obj (totals did not exist)\n        totals[key] = val;\n        acc[key] = totals[key];\n      } else {\n        // key == name\n        acc[key] = val;\n      }\n      return acc;\n    }, {});\n    return parsedWeek;\n  });\n\n  return { parsedScores, totals };\n};\n\nexport default parseData;\n","import {\n  amber, blue, blueGrey, brown, cyan, deepOrange, deepPurple, green, grey, indigo, lightBlue, lightGreen, lime, orange, pink, purple, red, teal, yellow,\n} from '@material-ui/core/colors/';\nimport forOwn from 'lodash/forOwn';\n\nexport const pennyPokerScores = [\n  {\n    name: 'Night 1',\n    Ken: 5,\n    Lauren: -83,\n    Aaron: -45,\n    Winston: -17,\n    Jordan: -25,\n    Landon: -27,\n    Lily: 3,\n    Keishi: 209,\n    Andy: -22,\n  }, {\n    name: 'Night 2',\n    Ken: -42,\n    Aaron: -1,\n    Jordan: 94,\n    Lily: -131,\n    Andy: -140,\n    Mike: 220,\n  }, {\n    name: 'Night 3',\n    Ken: -100,\n    Jordan: -24,\n    Lily: -45,\n    Tom: 39,\n    Meeks: 147,\n  }, {\n    name: 'Night 4',\n    Ken: 62,\n    Aaron: -33,\n    Jordan: 35,\n    Lily: 179,\n    Keishi: 15,\n    Mike: 220,\n    Tom: -100,\n    Sam: 17,\n    Gus: -14,\n    Ashley: -14,\n    Geoff: -100,\n    Ming: -100,\n  }, {\n    name: 'Night 5',\n    Ken: 218,\n    Lauren: -90,\n    Aaron: 60,\n    Jordan: 82,\n    Lily: -70,\n    Tom: -200,\n  }, {\n    name: 'Night 6',\n    Ken: -33,\n    Jordan: 46,\n    Lily: -98,\n    Keishi: -32,\n    Andy: 27,\n    Mike: 90,\n  }, {\n    name: 'Night 7',\n    Ken: 187,\n    Aaron: 14,\n    Jordan: -46,\n    Tom: -55,\n    Gus: -100,\n  }, {\n    name: 'Night 8',\n    Ken: 127,\n    Aaron: -40,\n    Jordan: 119,\n    Gus: 16,\n    Zach: -122,\n    Scott: -100,\n  }, {\n    name: 'Night 9',\n    Ken: 11,\n    Jordan: 17,\n    Andy: 30,\n    Gus: -58,\n  }, {\n    name: 'Night 10',\n    Ken: -23,\n    Lauren: 58,\n    Jordan: -20,\n    Landon: -100,\n    Lily: -100,\n    Andy: 240,\n    Tom: 9,\n  }, {\n    name: 'Night 11',\n    Ken: 42,\n    Aaron: -55,\n    Jordan: 0,\n    Tom: 38,\n    Gus: -25,\n  }, {\n    name: 'Night 12',\n    Ken: 57,\n    Aaron: 34,\n    Tom: 9,\n    Gus: -100,\n  },\n];\n\nexport const pennyPokerColors = {\n  Ken: amber[500],\n  Lauren: blue[500],\n  Aaron: blueGrey[500],\n  Winston: brown[500],\n  Jordan: cyan[500],\n  Landon: deepOrange[500],\n  Lily: deepPurple[500],\n  Keishi: green[500],\n  Andy: indigo[500],\n  Mike: lightBlue[500],\n  Tom: lightGreen[500],\n  Meeks: lime[500],\n  Sam: orange[500],\n  Gus: pink[500],\n  Ashley: purple[500],\n  Geoff: red[500],\n  Ming: teal[500],\n  Zach: yellow[500],\n  Scott: grey[500],\n  Emily: grey[900],\n};\n\nexport const gigNowPokerScores = [\n  {\n    name: 'Night 1',\n    Ken: 32.25,\n    Sabik: 35.25,\n    Avi: 15.50,\n    Seb: -23,\n    Jonathan: -20,\n    Mike: -20,\n    Brady: -20,\n  }, {\n    name: 'Night 2',\n    Jonathan: -20,\n    Seb: -40,\n    Sabik: -20,\n    Mike: 90,\n    Brady: -20,\n    'Michael A': 70,\n    Carlos: -20,\n    Matt: -20,\n    Dhruven: -20,\n  }, {\n    Jonathan: 71,\n    Dharam: 40,\n    Seb: 32,\n    Dhruven: 17,\n    Kaustubh: 0,\n    Brady: 0,\n    Matt: -20,\n    Ken: -40,\n    Patrick: -40,\n    Mike: -60,\n  },\n];\n\nexport const gigNowPokerColors = {\n  Ken: amber[500],\n  Jonathan: blue[500],\n  Seb: blueGrey[500],\n  Sabik: brown[500],\n  Avi: cyan[500],\n  Mike: deepOrange[500],\n  Brady: deepPurple[500],\n  'Michael A': green[500],\n  Carlos: indigo[500],\n  Matt: lightBlue[500],\n  Dhruven: lightGreen[500],\n  Dharam: lime[500],\n  Kaustubh: orange[500],\n  Patrick: pink[500],\n};\n\n/**\n * A function that creates an initial score entry of 0\n * for all participants, the week before they joined.\n *\n * @param {Array} scores - scores from every poker night\n */\nfunction zeroOutPreviousWeek(scores) {\n  scores.unshift({});\n\n  for (let i = 1; i < scores.length; i += 1) {\n    const thisWeek = scores[i];\n    const lastWeek = scores[i - 1];\n\n    forOwn(thisWeek, (value, key) => {\n      if (!lastWeek[key]) {\n        lastWeek[key] = 0;\n      }\n    });\n  }\n}\n\nzeroOutPreviousWeek(pennyPokerScores);\nzeroOutPreviousWeek(gigNowPokerScores);\n","import React, { memo, Fragment } from 'react';\n// custom\nimport PokerGraph from './PokerGraph';\nimport PokerTable from './PokerTable';\nimport parseData from './helpers';\nimport { pennyPokerScores, pennyPokerColors } from '../../../constants/poker';\n// Parents: PokerNightTabs\n\nconst PennyPokerNight = memo(() => {\n  const { parsedScores, totals } = parseData(pennyPokerScores);\n\n  return (\n    <Fragment>\n      <PokerGraph\n        parsedScores={parsedScores}\n        colors={pennyPokerColors}\n        domain={[-400, 600]}\n        ticks={[-400, -200, 0, 200, 400, 600]}\n      />\n      <PokerTable totals={totals} />\n    </Fragment>\n  );\n});\n\nexport default PennyPokerNight;\n","import React, { memo, Fragment } from 'react';\n// custom\nimport PokerGraph from './PokerGraph';\nimport PokerTable from './PokerTable';\nimport parseData from './helpers';\nimport { gigNowPokerScores, gigNowPokerColors } from '../../../constants/poker';\n// Parents: PokerNightTabs\n\nconst PokerNight = memo(() => {\n  const { parsedScores, totals } = parseData(gigNowPokerScores);\n\n  return (\n    <Fragment>\n      <PokerGraph\n        parsedScores={parsedScores}\n        colors={gigNowPokerColors}\n        domain={[-100, 100]}\n      />\n      <PokerTable totals={totals} />\n    </Fragment>\n  );\n});\n\nexport default PokerNight;\n","import React, { useState, memo, Fragment } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PennyPokerNight from './PennyPokerNight';\nimport GigNowPokerNight from './GigNowPokerNight';\n// Parents: Main\n\nconst PokerNightTabs = memo(() => {\n  const [tab, setTab] = useState(0);\n\n  const handleChange = (event, val) => {\n    setTab(val);\n  };\n\n  return (\n    <Fragment>\n      <AppBar position=\"static\" style={{ marginBottom: 20, marginTop: 10 }}>\n        <Tabs value={tab} onChange={handleChange}>\n          <Tab label=\"Penny Poker\" />\n          <Tab label=\"GigNow Poker\" />\n        </Tabs>\n      </AppBar>\n      {tab === 0 && <PennyPokerNight />}\n      {tab === 1 && <GigNowPokerNight />}\n    </Fragment>\n  );\n});\n\nexport default PokerNightTabs;\n","import PokerNightTabs from './PokerNightTabs';\n\nexport default PokerNightTabs;\n","import assign from 'lodash/assign';\n/** ************************************************\n             Define Global Constants\n************************************************* */\nexport const CASINO = 'The Cinema Magic Hotel and Casino';\nconst VICTIM = 'Elvis';\nconst MALE = 'M';\nconst FEMALE = 'F';\nconst NEUTRAL = 'M/F';\nconst I1 = 'Required';\nconst I2 = 'Recommended';\nconst I3 = 'Optional';\nconst EMPLOYEE = `As an employee, you are at ${CASINO} regularly.`;\nconst MOTIVE = `You have motive to murder ${VICTIM}.`;\nconst REGULAR = `You are at ${CASINO} regularly.`;\nconst NEW_VISIT = `You have never been to ${CASINO} before.`;\n\n/** ************************************************\n                  Declare Profiles\n************************************************* */\nlet owner = {\n  role: 'The Casino Owner',\n  importance: I1,\n  person: 'Ken',\n  gender: NEUTRAL,\n};\nlet reporter = {\n  role: 'The Reporter',\n  importance: I1,\n  person: 'Jon',\n  gender: NEUTRAL,\n};\nlet gunNut = {\n  role: 'The Gun Nut',\n  importance: I1,\n  person: 'Andy',\n  gender: MALE,\n};\nlet escort = {\n  role: 'The Escort',\n  importance: I1,\n  person: 'Julia',\n  gender: FEMALE,\n};\nlet gladiator = {\n  role: 'The Recently Fired Gladiator Actor',\n  importance: I1,\n  person: 'Jordan',\n  gender: MALE,\n};\nlet coach = {\n  role: 'The Singing Coach',\n  importance: I1,\n  person: 'Gus',\n  gender: MALE,\n};\nlet bouncer = {\n  role: 'The Bouncer',\n  importance: I2,\n  person: 'Tom',\n  gender: NEUTRAL,\n};\nlet follow = {\n  role: 'The Second Act',\n  importance: I2,\n  person: 'Libby',\n  gender: NEUTRAL,\n};\nlet dancer = {\n  role: 'The Dancer',\n  importance: I2,\n  person: 'Emily',\n  gender: FEMALE,\n};\nlet director = {\n  role: 'The Depressed Director',\n  importance: I3,\n  person: 'Aaron',\n  gender: NEUTRAL,\n};\nlet lawyer = {\n  role: 'The Lawyer',\n  importance: I3,\n  person: '',\n  gender: MALE,\n};\nlet diver = {\n  role: 'The Scuba Diver',\n  importance: I3,\n  person: 'Lauren',\n  gender: NEUTRAL,\n};\nlet cop = {\n  role: 'The Retired Cop',\n  importance: I3,\n  person: 'Samantha',\n  gender: NEUTRAL,\n};\nlet prof = {\n  role: 'The Professor',\n  importance: I3,\n  person: 'Emerald',\n  gender: NEUTRAL,\n};\nlet diner = {\n  role: 'The Owner of Diner',\n  importance: I3,\n  person: '',\n  gender: NEUTRAL,\n};\nlet ufo = {\n  role: 'The UFO Conspiracy Nut',\n  importance: I3,\n  person: 'Scott',\n  gender: NEUTRAL,\n};\nlet crusader = {\n  role: 'The Caped Crusader',\n  importance: I3,\n  person: '',\n  gender: NEUTRAL,\n};\n\n/** ************************************************\n                  Expand Profiles\n************************************************* */\nowner = assign(owner, {\n  description: `You are the owner of ${CASINO}, and you are running the murder mystery to make sure everything runs smoothly.`,\n  hint:\n    `\"${\n      reporter.role\n    } Clue\" implies a married guest has motive to murder ${VICTIM}.\\n`\n    + 'Most people will assume his relationship is with a women.\\n\\n'\n    + `\"${gunNut.role} Clue\" implies any regular could have the gun.\\n\\n`\n    + `\"${escort.role} Clue\" is meant to imply ${VICTIM} is gay.`,\n  clue:\n    '1. Act as the lead detective if no one steps up. Simply ask: \"What clues do we have and who can that rule out?\"\\n'\n    + `2. Breaking news, \"${\n      gunNut.role\n    }'s\" lost gun from the casino bar last week is the murder weapon!\\n`\n    + `3. Is the character a regular at ${CASINO}?\\n`\n    + '4. Is the character married?',\n});\n\nreporter = assign(reporter, {\n  description:\n    'You are a resident bad boy/girl and have earned quite a reputation for your ability to try any underhanded trick you can think of to get the latest scoop.\\n'\n    + 'Of course, your methods aren’t always legal…but that only matters if you get caught, right?',\n  hint: NEW_VISIT,\n  clue: `You have been following ${VICTIM} for a story and found out that ${VICTIM} was in a relationship with someone who was married.`,\n});\n\ngunNut = assign(gunNut, {\n  description:\n    'You own several guns.\\n'\n    + `You and your wife are a die-hard ${VICTIM} fans and you believe this ${VICTIM} impersonator is terrible since you have seen him before.\\n`\n    + 'You have been to several of his other shows and heckle him on and off stage.',\n  hint: `You are NOT the murderer.\\nYou have a gun with you.\\n${REGULAR}`,\n  clue: 'You lost your gun at the casino bar last week.',\n});\n\nescort = assign(escort, {\n  description:\n    `You attend to a good number of ${CASINO}'s most esteemed guests.\\n`\n    + 'You pride yourself on your class and would never associate with a hussie from the street.',\n  hint: REGULAR,\n  clue:\n    `${VICTIM} once paid you to accompany him to a wedding.\\n`\n    + 'You tried to seduce him afterwards but he was not interested.',\n});\n\ngladiator = assign(gladiator, {\n  description:\n    `You and ${VICTIM} used to be best friends.\\n`\n    + `You were previously employed by ${CASINO} to entertain the gamblers.`,\n  hint: `You have a knife / sword.\\n${MOTIVE}`,\n  clue:\n    `${VICTIM} ratted you out to the owner for drinking on the job.\\n`\n    + `One night in a drunken stupor you told \"${\n      dancer.role\n    }\" that you were going to stab ${VICTIM} in the back, like Brutus stabbed Caesar.`,\n});\n\ncoach = assign(coach, {\n  description:\n    'You are the Murderer!\\n'\n    + 'You do not have to tell people the following secrets, but you CANNOT contradict them:\\n'\n    + `1. You were in a sexual relationship with ${VICTIM}.\\n`\n    + `2. You promised ${VICTIM} you would leave your wife for him but never intended to.\\n`\n    + `3. ${VICTIM} learns you will never leave your wife and threatens to expose your love affair.\\n`\n    + `4. You took \"${\n      gunNut.role\n    }'s\" gun (he forgot it at the casino bar one night) and shoot ${VICTIM}.\\n`\n    + '5. You sneak away into the crowd and join the confusion.',\n  hint:\n    `You are the murderer.\\n${REGULAR}\\n`\n    + `You have a gun.\\n${MOTIVE}\\n`\n    + 'Other people will have clues that may identify you.',\n  clue:\n    'You must tell others:\\n'\n    + `You are a singing coach who has been coaching ${VICTIM} with his voice.\\n`\n    + `You give him private lessons and are frequently at ${CASINO} to critique and watch him.\\n`\n    + 'You are married to your wife (she is not at the casino tonight).\\n'\n    + 'You can pretend you have no clue to share.',\n});\n\nbouncer = assign(bouncer, {\n  description:\n    'You take care of a good majority of the owner`s dirty work.\\n'\n    + 'Although loyal, you are not very bright but very friendly.\\n'\n    + 'You are a bachelor(ette).\\n'\n    + `\"${\n      prof.role\n    }\" is a regular at ${CASINO} and you are friends with him/her.`,\n  hint: EMPLOYEE,\n  clue:\n    `You know \"${diver.role}\" and \"${\n      cop.role\n    }\" are carrying guns because you patted them down as they entered.\\n`\n    + `You were talking to \"${\n      prof.role\n    }\" when you heard the gunshots. He/She is not the murderer.`,\n});\n\nfollow = assign(follow, {\n  description:\n    'Sugar-sweet, full of yourself, and never seen without a purse-full of pills to get through the night.',\n  hint: EMPLOYEE,\n  clue: `You wanted to hang out with ${VICTIM} later tonight for late night drinks but he told you he was busy because he \"had to tell someone something.\"`,\n});\n\ndancer = assign(dancer, {\n  description:\n    'You have been a dancer since you were three years old.\\n'\n    + `Your a showgirl for ${CASINO}.\\n`\n    + 'You dream of being an opening act because you long for broadway.\\n'\n    + 'You carry pictures of yourself from plays and pageants (you do not actually need pictures, this is just for backstory).\\n'\n    + 'You are full of yourself, and will always lets anyone know when you enter or leave a room, and sometimes throw in a little dance step for good measure.',\n  hint: EMPLOYEE,\n  clue: `\"${\n    gladiator.role\n  }\" was drunk and told you that he was going to murder ${VICTIM} by stabbing him in the back, like Brutus stabbed Caesar.`,\n});\n\ndirector = assign(director, {\n  description:\n    'You are so depressed, and say that way to inspire art.\\n'\n    + `You direct all the shows at ${CASINO} and go so far as to call each one a \"picture,\" as if you were really creating a movie with each one.\\n`\n    + 'You have a habit of dragging down the party with your depressed whining and tend to overreact when people comment.\\n'\n    + '\"It feeds me,\" you say to peoples\\' comments, and walk away in a huff.',\n  hint: `${EMPLOYEE}\\n${MOTIVE}`,\n  clue: `${VICTIM} constantly ridiculed you and your art.`,\n});\n\nlawyer = assign(lawyer, {\n  description:\n    'You are an up-and-coming lawyer and you are on a trip to Las Vegas.\\n'\n    + 'You are slick, suave, and never go anywhere without a fresh shave, an expensive haircut and a shiny new pair of shoes.\\n'\n    + 'You have the reputation for being one of the finest lawyers in all of the Bay Area.',\n  hint: `You do not frequent ${CASINO}.\\n${MOTIVE}`,\n  clue:\n    `You hired ${VICTIM} for a corporate gig, and ${VICTIM} showed up drunk.\\n`\n    + 'You looked like a fool in front of the senior partners.\\n'\n    + `You did not know ${VICTIM} was a performer at this casino until you saw his face on posters!`,\n});\n\ndiver = assign(diver, {\n  description:\n    'You are a hitman.\\n'\n    + 'Your cover is a scuba diver.\\n'\n    + `You were NOT hired to murder ${VICTIM} or anyone else at ${CASINO}.\\n`\n    + 'You are simply here to gamble and have a relaxing weekend.',\n  hint: 'You have a gun with you.\\nYou have an alibi.',\n  clue:\n    `You were talking with \"${owner}\" during the shooting, this is your alibi for not shooting ${VICTIM}.\\n`\n    + 'You can reveal you are an assassin in any way you would like, but you should reveal this at some point.',\n});\n\ncop = assign(cop, {\n  description: 'You worked as a cop in New York for 30 years.',\n  hint: `${REGULAR}\\nYou always carry your glock (police issued pistol).`,\n  clue:\n    'You are retired and have lots of money because of your pension and an injury insurance payout from when you were shot in the arm on duty.\\n'\n    + `You cannot think of any motive you would have to murder ${VICTIM}.`,\n});\n\nprof = assign(prof, {\n  description:\n    'You are a professor at a local college.\\n'\n    + 'You are trying your luck at card counting.',\n  hint: `You are at ${CASINO} quite regularly and have made friends with \"${\n    bouncer.role\n  }.\"`,\n  clue:\n    `You were talking with \"${bouncer.role}\" when the gun went off.\\n`\n    + `\"${bouncer.role}\" is not the murderer and you have an alibi.`,\n});\n\ndiner = assign(diner, {\n  description:\n    `You have tried to hire ${VICTIM} to play at your 70s diner for over a year now.\\n`\n    + 'You came down to the casino to persuade him to play at your diner.',\n  hint: NEW_VISIT,\n  clue: `You came on the same Las Vegas flight as \"${\n    lawyer.role\n  }\" meaning neither of you were at the casino bar a week ago.`,\n});\n\nufo = assign(ufo, {\n  description:\n    'You are convinced Aliens exist.\\n'\n    + `You think aliens are responsible for the murder of ${VICTIM}.`,\n  hint: `You frequent ${CASINO} to warn fellow humans of the impending invasion`,\n  clue: 'It was probably aliens. We cannot rule them out.',\n});\n\ncrusader = assign(crusader, {\n  description:\n    'By day, you are a very socially awkward individual, however you have an alter ego as a caped crusader crime fighter.\\n'\n    + 'You can play this any way you wish (:',\n  hint: NEW_VISIT,\n  clue:\n    `You found \"${\n      reporter.role\n    }'s\" methods to be somewhat shady, so you were following him/her during the time of the murder.\\n`\n    + `You know it was not \"${reporter.role}.\"`,\n});\n\n/** ************************************************\n                  Export Profiles\n************************************************* */\nexport default [\n  owner,\n  reporter,\n  gunNut,\n  escort,\n  gladiator,\n  coach,\n  bouncer,\n  follow,\n  dancer,\n  director,\n  lawyer,\n  diver,\n  cop,\n  prof,\n  diner,\n  ufo,\n  crusader,\n];\n","import TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '95%',\n  },\n  item: {\n    display: 'flex',\n  },\n};\n\nexport const LabelTableCell = withStyles({\n  root: {\n    maxWidth: 100,\n  },\n})(TableCell);\n\nexport default styles;\n","import React, { memo } from 'react';\nimport types from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport nl2br from 'react-newline-to-break';\nimport { Typography } from '@material-ui/core';\nimport styles, { LabelTableCell } from './MurderMysteryPanel.styles';\n// Parents: Main\n\nconst MurderMysteryPanel = memo((props) => {\n  const {\n    expanded,\n    expandedKey,\n    handleChange,\n    role,\n    importance,\n    person,\n    gender,\n    description,\n    hint,\n    clue,\n  } = props;\n\n  return (\n    <ExpansionPanel expanded={expanded === expandedKey} onChange={handleChange(expandedKey)}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <div style={styles.container}>\n          <Typography style={styles.item}>{role}</Typography>\n          <Typography style={styles.item}>{importance}</Typography>\n        </div>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <LabelTableCell>Player</LabelTableCell>\n              <TableCell>{person}</TableCell>\n            </TableRow>\n            <TableRow>\n              <LabelTableCell>Gender</LabelTableCell>\n              <TableCell>{gender}</TableCell>\n            </TableRow>\n            <TableRow>\n              <LabelTableCell>Description</LabelTableCell>\n              <TableCell>{nl2br(description)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <LabelTableCell>Hint</LabelTableCell>\n              <TableCell>{nl2br(hint)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <LabelTableCell>Clue</LabelTableCell>\n              <TableCell>{nl2br(clue)}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n});\n\nMurderMysteryPanel.propTypes = {\n  expanded: types.string,\n  expandedKey: types.string.isRequired,\n  handleChange: types.func.isRequired,\n  role: types.string.isRequired,\n  importance: types.string.isRequired,\n  person: types.string.isRequired,\n  gender: types.string.isRequired,\n  description: types.string.isRequired,\n  hint: types.string.isRequired,\n  clue: types.string.isRequired,\n};\n\nexport default MurderMysteryPanel;\n","import React, { useState, memo, Fragment } from 'react';\nimport map from 'lodash/map';\nimport { Typography } from '@material-ui/core';\nimport profiles, { CASINO } from '../../../constants/murder';\nimport MurderMysteryPanel from './MurderMysteryPanel';\n// Parents: Main\n\nconst MurderMystery = memo(() => {\n  const [expanded, setExpanded] = useState(null);\n\n  const handleChange = (panel) => (event, exp) => {\n    setExpanded(exp ? panel : null);\n  };\n\n  return (\n    <Fragment>\n      <Typography variant=\"h2\" gutterBottom>{`Murder at ${CASINO}`}</Typography>\n      {map(profiles, (profile, i) => {\n        const {\n          role, importance, person, gender, description, hint, clue,\n        } = profile;\n\n        return (\n          <MurderMysteryPanel {...{\n            key: i,\n            expanded,\n            role,\n            importance,\n            person,\n            gender,\n            description,\n            hint,\n            clue,\n            expandedKey: `${i}`,\n            handleChange,\n          }}\n          />\n        );\n      })}\n    </Fragment>\n  );\n});\n\nexport default MurderMystery;\n","import MurderMystery from './MurderMystery';\n\nexport default MurderMystery;\n"],"sourceRoot":""}