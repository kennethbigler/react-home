{"version":3,"file":"static/js/r_travel.6d7d0eef.chunk.js","mappings":"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","sources":["apis/DateHelper.ts","constants/travel.ts","components/resume/travel-map/TravelTable.tsx","components/resume/travel-map/Popover.tsx","components/resume/travel-map/WorldMap.tsx","components/resume/travel-map/SankeyNode.tsx","components/resume/travel-map/CruiseCharts.tsx","components/resume/travel-map/TravelMap.tsx"],"sourcesContent":["const months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport type DateScale =\n  | \"year\"\n  | \"years\"\n  | \"month\"\n  | \"months\"\n  | \"days\"\n  | undefined;\nexport type FormatOutput = \"YYYY\" | \"MMMM Y\" | \"'YY\";\nexport interface DateObj {\n  year: number;\n  month: number;\n  day: number;\n  diff: (dateObj: DateObj, scale: DateScale) => number;\n  format: (output: FormatOutput) => string;\n}\n\n/** Takes format YYYY-MM-DD and creates a DateObj */\nconst dateHelper = (date?: DateObj | string): DateObj => {\n  let year: number;\n  let month: number;\n  let day: number;\n\n  if (typeof date === \"object\") {\n    return date;\n  }\n  if (typeof date === \"string\") {\n    const [y, m, d] = date.split(\"-\");\n    year = Number(y);\n    month = Number(m) - 1 || 0;\n    day = Number(d) || 1;\n  } else {\n    const now = new Date();\n    year = now.getFullYear();\n    month = now.getMonth();\n    day = now.getDate();\n  }\n\n  const diff = (dateObj: DateObj, scale: DateScale = \"days\"): number => {\n    switch (scale) {\n      case \"year\":\n      case \"years\":\n        return year - dateObj.year;\n      case \"month\":\n      case \"months\":\n        return 12 * (year - dateObj.year) + (month - dateObj.month);\n      default:\n        return (\n          365 * (year - dateObj.year) +\n          30 * (month - dateObj.month) +\n          (day - dateObj.day)\n        );\n    }\n  };\n\n  const format = (output: FormatOutput): string => {\n    switch (output) {\n      case \"YYYY\":\n        return year.toString();\n      case \"MMMM Y\":\n        return `${months[month]} ${year}`;\n      case \"'YY\":\n        return `'${year.toString().slice(-2)}`;\n      default:\n        // eslint-disable-next-line no-console\n        console.error(\"unknown date format: \", output);\n        return \"\";\n    }\n  };\n\n  return {\n    year,\n    month,\n    day,\n    diff,\n    format,\n  };\n};\n\nexport default dateHelper;\n","import {\n  amber,\n  blue,\n  brown,\n  cyan,\n  deepOrange,\n  deepPurple,\n  green,\n  indigo,\n  lightBlue,\n  lightGreen,\n  lime,\n  orange,\n  pink,\n  purple,\n  red,\n  teal,\n  yellow,\n} from \"@mui/material/colors/\";\nimport dateObj, { DateObj } from \"../apis/DateHelper\";\n\nconst colors = [\n  amber[500],\n  blue[500],\n  brown[500],\n  cyan[500],\n  deepOrange[500],\n  deepPurple[500],\n  green[500],\n  indigo[500],\n  lightBlue[500],\n  lightGreen[500],\n  lime[500],\n  orange[500],\n  pink[500],\n  purple[500],\n  red[500],\n  teal[500],\n  yellow[500],\n];\n\ninterface Country {\n  continent: string;\n  flag: string;\n  code: string;\n  color?: string;\n}\nexport type Countries = Record<string, Country>;\n\nconst countries: Countries = {\n  Australia: { continent: \"AU\", flag: \"🇦🇺\", code: \"au\" },\n  Austria: { continent: \"EU\", flag: \"🇦🇹\", code: \"at\" },\n  Bahamas: { continent: \"NA\", flag: \"🇧🇸\", code: \"bs\" },\n  \"British Virgin Islands\": { continent: \"NA\", flag: \"🇻🇬\", code: \"vg\" },\n  Canada: { continent: \"NA\", flag: \"🇨🇦\", code: \"ca\" },\n  \"Cayman Islands\": { continent: \"NA\", flag: \"🇰🇾\", code: \"ky\" },\n  // China: { continent: \"AS\", flag: \"🇨🇳\", code: \"cn\" },\n  Denmark: { continent: \"EU\", flag: \"🇩🇰\", code: \"dk\" },\n  // Egypt: { continent: \"AF\", flag: \"🇪🇬\", code: \"eg\" },\n  Estonia: { continent: \"EU\", flag: \"🇪🇪\", code: \"ee\" },\n  Finland: { continent: \"EU\", flag: \"🇫🇮\", code: \"fi\" },\n  France: { continent: \"EU\", flag: \"🇫🇷\", code: \"fr\" },\n  Germany: { continent: \"EU\", flag: \"🇩🇪\", code: \"de\" },\n  Gibraltar: { continent: \"EU\", flag: \"🇬🇮\", code: \"gi\" },\n  Greece: { continent: \"EU\", flag: \"🇬🇷\", code: \"gr\" },\n  // \"Hong Kong\": { continent: \"AS\", flag: \"🇭🇰\", code: \"hk\" },\n  Iceland: { continent: \"EU\", flag: \"🇮🇸\", code: \"is\" },\n  India: { continent: \"AS\", flag: \"🇮🇳\", code: \"in\" },\n  Ireland: { continent: \"EU\", flag: \"🇮🇪\", code: \"ie\" },\n  Italy: { continent: \"EU\", flag: \"🇮🇹\", code: \"it\" },\n  Jamaica: { continent: \"NA\", flag: \"🇯🇲\", code: \"jm\" },\n  // Japan: { continent: \"AS\", flag: \"🇯🇵\", code: \"jp\" },\n  Malta: { continent: \"EU\", flag: \"🇲🇹\", code: \"mt\" },\n  Mexico: { continent: \"NA\", flag: \"🇲🇽\", code: \"mx\" },\n  Monaco: { continent: \"EU\", flag: \"🇲🇨\", code: \"mc\" },\n  Netherlands: { continent: \"EU\", flag: \"🇳🇱\", code: \"nl\" },\n  Norway: { continent: \"EU\", flag: \"🇳🇴\", code: \"no\" },\n  Poland: { continent: \"EU\", flag: \"🇵🇱\", code: \"pl\" },\n  Portugal: { continent: \"EU\", flag: \"🇵🇹\", code: \"pt\" },\n  Russia: { continent: \"EU\", flag: \"🇷🇺\", code: \"ru\" },\n  Spain: { continent: \"EU\", flag: \"🇪🇸\", code: \"es\" },\n  Sweden: { continent: \"EU\", flag: \"🇸🇪\", code: \"se\" },\n  Switzerland: { continent: \"EU\", flag: \"🇨🇭\", code: \"ch\" },\n  Turkey: { continent: \"EU\", flag: \"🇹🇷\", code: \"tr\" },\n  \"United Arab Emirates\": { continent: \"AF\", flag: \"🇦🇪\", code: \"ae\" },\n  \"United Kingdom\": { continent: \"EU\", flag: \"🇬🇧\", code: \"gb\" },\n  \"United States of America\": { continent: \"NA\", flag: \"🇺🇸\", code: \"us\" },\n  \"U.S. Virgin Islands\": { continent: \"NA\", flag: \"🇻🇮\", code: \"vi\" },\n  Vatican: { continent: \"EU\", flag: \"🇻🇦\", code: \"va\" },\n};\n\nObject.keys(countries).forEach((country, i) => {\n  countries[country].color = colors[i % colors.length];\n});\n\nexport const disneyLoyalty = [\n  { num: 1, status: \"Silver\" },\n  { num: 5, status: \"Gold\" },\n  { num: 10, status: \"Platinum\" },\n  { num: 25, status: \"Pearl\" },\n];\n\nexport const rcLoyalty = [\n  { nights: 3, status: \"Gold\" },\n  { nights: 30, status: \"Platinum\" },\n  { nights: 55, status: \"Emerald\" },\n  { nights: 80, status: \"Diamond\" },\n  { nights: 175, status: \"Diamond Plus\" },\n  { nights: 700, status: \"Pinnacle Club\" },\n];\n\nexport const lines = [\"Disney\", \"Royal Caribbean\"] as const;\nexport type Lines = (typeof lines)[number];\n\nexport const ships = [\n  \"Magic\",\n  \"Wonder\",\n  \"Dream\",\n  \"Fantasy\",\n  \"Wish\",\n  \"Navigator of the Seas\",\n] as const;\nexport type Ships = (typeof ships)[number];\n\ninterface Cruise {\n  departure: DateObj;\n  nights: number;\n  name: string;\n  ship: Ships;\n  line: Lines;\n  concierge: boolean;\n}\n\nexport const cruises: Cruise[] = [\n  {\n    departure: dateObj(\"2004-04\"),\n    nights: 3,\n    name: \"Bahamas\",\n    ship: ships[1],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2005-06\"),\n    nights: 7,\n    name: \"Mexican Riviera\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2011-06\"),\n    nights: 11,\n    name: \"Mediterranean\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2012-06\"),\n    nights: 7,\n    name: \"Alaska\",\n    ship: ships[1],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2013-07\"),\n    nights: 12,\n    name: \"Mediterranean\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2014-07\"),\n    nights: 7,\n    name: \"Alaska\",\n    ship: ships[1],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2015-07\"),\n    nights: 14,\n    name: \"Northern EU Capitals\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2015-08\"),\n    nights: 7,\n    name: \"Dover-Barcelona\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2015-12\"),\n    nights: 4,\n    name: \"Bahamas\",\n    ship: ships[2],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2016-06\"),\n    nights: 12,\n    name: \"Iceland/Norway\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2016-12\"),\n    nights: 7,\n    name: \"Eastern Caribbean\",\n    ship: ships[3],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2017-05\"),\n    nights: 15,\n    name: \"East Bound Transatlantic\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2017-12\"),\n    nights: 7,\n    name: \"Western Caribbean\",\n    ship: ships[3],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2018-05\"),\n    nights: 13,\n    name: \"East Bound Transatlantic\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2018-07\"),\n    nights: 10,\n    name: \"Mediterranean\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2018-11\"),\n    nights: 7,\n    name: \"East Coast NY-FL-NY\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2019-09\"),\n    nights: 10,\n    name: \"West Bound Transatlantic\",\n    ship: ships[0],\n    line: lines[0],\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2019-11\"),\n    nights: 7,\n    name: \"Western Caribbean\",\n    ship: ships[3],\n    line: lines[0],\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2021-12\"),\n    nights: 7,\n    name: \"Eastern Caribbean\",\n    ship: ships[3],\n    line: lines[0],\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2022-04\"),\n    nights: 10,\n    name: \"Hawaii: Vancouver-Honolulu\",\n    ship: ships[1],\n    line: lines[0],\n    concierge: true,\n  },\n  {\n    departure: dateObj(\"2022-08\"),\n    nights: 4,\n    name: \"Catalina & Ensenada\",\n    ship: ships[5],\n    line: lines[1],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2022-12\"),\n    nights: 4,\n    name: \"Bahamas\",\n    ship: ships[4],\n    line: lines[0],\n    concierge: false,\n  },\n  {\n    departure: dateObj(\"2022-12\"),\n    nights: 3,\n    name: \"Bahamas\",\n    ship: ships[4],\n    line: lines[0],\n    concierge: true,\n  },\n  // {\n  //   departure: dateObj(\"2023-02\"),\n  //   nights: 3,\n  //   name: \"Catalina & Ensenada\",\n  //   ship: ships[5],\n  //   line: lines[1],\n  //   concierge: true,\n  // },\n  // {\n  //   departure: dateObj(\"2023-05\"),\n  //   nights: 3,\n  //   name: \"Bahamas\",\n  //   ship: ships[2],\n  //   line: lines[0],\n  //   concierge: true,\n  // },\n  // {\n  //   departure: dateObj(\"2023-05\"),\n  //   nights: 13,\n  //   name: \"Eastbound Transatlantic\",\n  //   ship: ships[2],\n  //   line: lines[0],\n  //   concierge: true,\n  // },\n  // {\n  //   departure: dateObj(\"2024-03\"),\n  //   nights: 13,\n  //   name: \"Sydney to Honolulu\",\n  //   ship: ships[0],\n  //   line: lines[0],\n  //   concierge: true,\n  // },\n];\n\nconst numDisney = [0, 0, 0, 0, 0];\nconst numRC = [0];\n\ncruises.forEach((cruise) => {\n  switch (cruise.ship) {\n    case ships[0]:\n      numDisney[0] += 1;\n      return;\n    case ships[1]:\n      numDisney[1] += 1;\n      return;\n    case ships[2]:\n      numDisney[2] += 1;\n      return;\n    case ships[3]:\n      numDisney[3] += 1;\n      return;\n    case ships[4]:\n      numDisney[4] += 1;\n      return;\n    default:\n      numRC[0] += 1;\n  }\n});\n\nconst totalDisney =\n  numDisney[0] + numDisney[1] + numDisney[2] + numDisney[3] + numDisney[4];\n\nexport const cruiseData = {\n  nodes: [\n    { name: \"Cruises\" },\n    { name: lines[0] },\n    { name: `${lines[0]} ${ships[0]}` },\n    { name: `${lines[0]} ${ships[1]}` },\n    { name: `${lines[0]} ${ships[2]}` },\n    { name: `${lines[0]} ${ships[3]}` },\n    { name: `${lines[0]} ${ships[4]}` },\n    { name: lines[1] },\n    { name: `${lines[1]} ${ships[5]}` },\n  ],\n  links: [\n    // level 1\n    { source: 0, target: 1, value: totalDisney },\n    { source: 0, target: 7, value: numRC[0] },\n    // level 2\n    { source: 1, target: 2, value: numDisney[0] },\n    { source: 1, target: 3, value: numDisney[1] },\n    { source: 1, target: 4, value: numDisney[2] },\n    { source: 1, target: 5, value: numDisney[3] },\n    { source: 1, target: 6, value: numDisney[4] },\n    { source: 7, target: 8, value: numRC[0] },\n  ],\n};\n\nexport const americas: string[] = [];\nexport const euNaf: string[] = [];\nexport const asNau: string[] = [];\n\nObject.entries(countries).forEach(([name, country]): void => {\n  switch (country.continent) {\n    case \"NA\":\n      americas.push(`${name} ${country.flag}`);\n      break;\n    case \"EU\":\n    case \"AF\":\n      euNaf.push(`${name} ${country.flag}`);\n      break;\n    case \"AS\":\n    case \"AU\":\n    default:\n      asNau.push(`${name} ${country.flag}`);\n  }\n});\n\nexport default countries;\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport { grey } from \"@mui/material/colors\";\nimport {\n  americas,\n  euNaf,\n  asNau,\n  cruises,\n  lines,\n  rcLoyalty,\n  disneyLoyalty,\n} from \"../../../constants/travel\";\n\n// --------------------     Styles     -------------------- //\nconst marginStyles: React.CSSProperties = { marginTop: 24, marginBottom: 16 };\nconst separatorStyles: React.CSSProperties = {\n  borderRight: `1px solid ${grey[400]}`,\n};\nconst cellStyles: React.CSSProperties = {\n  padding: 5,\n  textAlign: \"center\",\n  whiteSpace: \"normal\",\n  overflow: \"visible\",\n};\n\n// --------------------     Countries Table     -------------------- //\n// ratio to display on table, 2:1 seemed to look best\nconst EURatio = 3;\n// export array of <li> elements for display\nconst countries: React.ReactNode[] = [];\n// iterate to the end of the longer list\nconst len = Math.max(\n  americas.length,\n  Math.ceil(euNaf.length / EURatio),\n  asNau.length\n);\nfor (let i = 0; i < len; i += 1) {\n  const row = [];\n  // add Americas Country\n  row.push(\n    <TableCell key={`tmc${i}`} style={{ ...cellStyles, ...separatorStyles }}>\n      {americas[i]}\n    </TableCell>\n  );\n  // add EU or AF Countries\n  for (let j = 0; j < EURatio; j += 1) {\n    row.push(\n      <TableCell\n        key={`tmc${i}${j}`}\n        style={\n          j === EURatio - 1 ? { ...cellStyles, ...separatorStyles } : cellStyles\n        }\n      >\n        {euNaf[EURatio * i + j]}\n      </TableCell>\n    );\n  }\n  // add AS or AU Country\n  row.push(\n    <TableCell key={`tmc${i}`} style={cellStyles}>\n      {asNau[i]}\n    </TableCell>\n  );\n  // form the row\n  const countryRow = <TableRow key={`tmr${i}`}>{row}</TableRow>;\n  countries.push(countryRow);\n}\n\n// --------------------     Cruise Table     -------------------- //\nlet totalNights = 0;\nlet disneyCruises = 0;\nlet rcNights = 0;\n\nconst cruiseCells = cruises.map((cruise, i) => {\n  totalNights += cruise.nights;\n\n  switch (cruise.line) {\n    case lines[0]:\n      disneyCruises += 1;\n      break;\n    case lines[1]:\n      rcNights += cruise.nights * (cruise.concierge ? 2 : 1);\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <TableRow key={`cruise-tr-${i}`}>\n      <TableCell key={`cruise-td-description-${i}`} style={cellStyles}>\n        {cruise.name}\n      </TableCell>\n      <TableCell key={`cruise-td-ship-${i}`} style={cellStyles}>\n        {cruise.line} {cruise.ship}\n      </TableCell>\n      <TableCell key={`cruise-td-nights-${i}`} style={cellStyles}>\n        {cruise.nights} {cruise.concierge ? \"⭐️\" : \"\"}\n      </TableCell>\n      <TableCell key={`cruise-td-departure-${i}`} style={cellStyles}>\n        {cruise.departure.format(\"MMMM Y\")}\n      </TableCell>\n    </TableRow>\n  );\n});\n\nlet rcNextLevel = 0;\nlet rcStatus = \"N/A\";\n\nrcLoyalty.forEach(({ nights, status }, i) => {\n  if (rcNights >= nights) {\n    rcStatus = status;\n    rcNextLevel = rcLoyalty[i + 1].nights;\n  }\n});\n\nlet disneyNextLevel = 0;\nlet disneyStatus = \"N/A\";\n\ndisneyLoyalty.forEach(({ num, status }, i) => {\n  if (disneyCruises >= num) {\n    disneyStatus = status;\n    disneyNextLevel = disneyLoyalty[i + 1].num;\n  }\n});\n\n// --------------------     Travel Map     -------------------- //\nconst TravelMap: React.FC = React.memo(() => (\n  <>\n    <Typography variant=\"h3\" component=\"h2\" style={marginStyles}>\n      {`I have been to ${\n        americas.length + euNaf.length + asNau.length\n      } countries:`}\n    </Typography>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell style={{ ...cellStyles, ...separatorStyles }}>\n            The Americas\n          </TableCell>\n          <TableCell\n            colSpan={EURatio}\n            style={{ ...cellStyles, ...separatorStyles }}\n          >\n            Europe &amp; Africa\n          </TableCell>\n          <TableCell colSpan={EURatio} style={cellStyles}>\n            Asia &amp; Australia\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>{countries}</TableBody>\n    </Table>\n\n    <Typography variant=\"h3\" component=\"h2\" style={marginStyles}>\n      {`I have been on ${cruises.length} cruises:`}\n    </Typography>\n    <Table>\n      <TableHead>\n        <TableRow>\n          {/* Disney */}\n          <TableCell style={cellStyles}>{lines[0]}</TableCell>\n          {/* Royal Caribbean */}\n          <TableCell style={cellStyles}>{lines[1]}</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow>\n          {/* Disney */}\n          <TableCell style={cellStyles}>\n            {disneyCruises} / {disneyNextLevel} Cruises = {disneyStatus}\n          </TableCell>\n          {/* Royal Caribbean */}\n          <TableCell style={cellStyles}>\n            {rcNights} / {rcNextLevel} Nights = {rcStatus}\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n    <br />\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell style={cellStyles}>Description 📍</TableCell>\n          <TableCell style={cellStyles}>Ship 🚢</TableCell>\n          <TableCell style={cellStyles}>Nights ({totalNights} 🌙)</TableCell>\n          <TableCell style={cellStyles}>Departure 🗓</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>{cruiseCells}</TableBody>\n    </Table>\n  </>\n));\n\nexport default TravelMap;\n","import * as React from \"react\";\nimport { grey } from \"@mui/material/colors\";\n\ninterface PopoverProps {\n  x: number;\n  y: number;\n  hide: boolean;\n  content: string;\n}\n\nconst Popover: React.FC<PopoverProps> = React.memo((props: PopoverProps) => {\n  const { x, y, hide, content } = props;\n\n  const popoverStyle: React.CSSProperties = React.useMemo(\n    () => ({\n      position: \"absolute\",\n      left: x + 2,\n      top: y - 35,\n      display: hide ? \"none\" : \"block\",\n      backgroundColor: grey[800],\n      color: \"white\",\n      padding: 5,\n      borderRadius: 2,\n    }),\n    [hide, x, y]\n  );\n\n  return <div style={popoverStyle}>{content}</div>;\n});\n\nexport default Popover;\n","import * as React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Sphere,\n} from \"react-simple-maps\";\nimport { blueGrey, red } from \"@mui/material/colors\";\nimport Popover from \"./Popover\";\nimport countries from \"../../../constants/travel\";\n\ninterface GeographyType {\n  type: \"Feature\";\n  rsmKey: string;\n  svgPath: string;\n  geometry: {\n    type: \"Polygon\" | \"MultiPolygon\";\n    coordinates: [number, number][];\n  };\n  properties: {\n    NAME: string;\n    NAME_LONG: string;\n    ABBREV: string;\n    FORMAL_EN: string;\n    POP_EST: number;\n    POP_RANK: number;\n    GDP_MD_EST: number;\n    POP_YEAR: number;\n    GDP_YEAR: number;\n    ISO_A2: string;\n    ISO_A3: string;\n    CONTINENT: string;\n    REGION_UN: string;\n    SUBREGION: string;\n  };\n}\n\ntype HandleEnter = (\n  geography: GeographyType\n) => (evt: React.MouseEvent<SVGPathElement, MouseEvent>) => void;\n\ninterface WorldMapHook {\n  x: number;\n  y: number;\n  content: string;\n  hide: boolean;\n  handleEnter: HandleEnter;\n  handleLeave: () => void;\n}\n\ninterface WorldMapProps {\n  screenWidth: number;\n}\n\nconst STROKE = blueGrey[900];\nconst HOVER = blueGrey[500];\nconst VISITED_HOVER = red[800];\nconst FILL = blueGrey[100];\nconst PRESSED = blueGrey[800];\nconst RATIO = 1 / 4.7;\n\nconst defaultStyle: React.CSSProperties = {\n  stroke: STROKE,\n  strokeWidth: 0.75,\n  outline: \"none\",\n};\n\nfunction useWorldMap(): WorldMapHook {\n  const [x, setX] = React.useState(0);\n  const [y, setY] = React.useState(0);\n  const [content, setContent] = React.useState(\"\");\n  const [hide, setHide] = React.useState(true);\n\n  const handleEnter: HandleEnter =\n    (geography) =>\n    (evt): void => {\n      const name = geography.properties.NAME || \"\";\n      setX(evt.clientX);\n      setY(evt.clientY + window.pageYOffset);\n      setContent(`${name} ${countries[name] ? countries[name].flag : \"\"}`);\n      setHide(false);\n    };\n\n  const handleLeave = (): void => {\n    setHide(true);\n  };\n\n  return {\n    x,\n    y,\n    content,\n    hide,\n    handleEnter,\n    handleLeave,\n  };\n}\n\nconst WorldMap = ({ screenWidth }: WorldMapProps) => {\n  const { x, y, content, hide, handleEnter, handleLeave } = useWorldMap();\n\n  return (\n    <>\n      <ComposableMap\n        width={screenWidth}\n        height={(screenWidth * 5) / 8}\n        projectionConfig={{ scale: screenWidth * RATIO }}\n      >\n        <Sphere\n          id=\"rsm-sphere\"\n          stroke={FILL}\n          strokeWidth={2}\n          fill=\"transparent\"\n        />\n        <Geographies geography=\"/world-110m.json\">\n          {({ geographies }) =>\n            geographies.map((geo: GeographyType) => (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                onMouseEnter={handleEnter(geo)}\n                onMouseLeave={handleLeave}\n                style={{\n                  default: {\n                    fill: countries[geo.properties.NAME]\n                      ? countries[geo.properties.NAME].color\n                      : FILL,\n                    ...defaultStyle,\n                  },\n                  hover: {\n                    fill: countries[geo.properties.NAME]\n                      ? VISITED_HOVER\n                      : HOVER,\n                    ...defaultStyle,\n                  },\n                  pressed: {\n                    fill: PRESSED,\n                    ...defaultStyle,\n                  },\n                }}\n              />\n            ))\n          }\n        </Geographies>\n      </ComposableMap>\n      <Popover x={x} y={y} hide={hide} content={content} />\n    </>\n  );\n};\n\nexport default WorldMap;\n","import * as React from \"react\";\nimport { grey } from \"@mui/material/colors/\";\nimport { Rectangle, Layer } from \"recharts\";\n\ninterface SankeyNodePayload {\n  name: string;\n  value: number;\n}\n\ninterface SankeyNodeProps {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  index: number;\n  payload: SankeyNodePayload;\n  containerWidth: number;\n}\n\nconst SankeyNode = ({\n  x,\n  y,\n  width,\n  height,\n  index,\n  payload,\n  containerWidth,\n}: SankeyNodeProps) => {\n  const isOut = x + width + 6 > containerWidth;\n  return (\n    <Layer key={`CustomNode${index}`}>\n      <Rectangle\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill=\"#5192ca\"\n        fillOpacity=\"1\"\n      />\n      <text\n        textAnchor={isOut ? \"end\" : \"start\"}\n        x={isOut ? x - 6 : x + width + 6}\n        y={y + height / 2}\n        fontSize=\"14\"\n        stroke={grey[600]}\n      >\n        {payload.name}\n      </text>\n      <text\n        textAnchor={isOut ? \"end\" : \"start\"}\n        x={isOut ? x - 6 : x + width + 6}\n        y={y + height / 2 + 13}\n        fontSize=\"12\"\n        stroke={grey[500]}\n        strokeOpacity=\"0.5\"\n      >\n        {payload.value}\n      </text>\n    </Layer>\n  );\n};\n\nexport default SankeyNode;\n","import * as React from \"react\";\nimport { Sankey, Tooltip } from \"recharts\";\nimport { cruiseData } from \"../../../constants/travel\";\nimport SankeyNode from \"./SankeyNode\";\n\ninterface CruiseChartsProps {\n  screenWidth: number;\n}\n\nconst CruiseCharts = ({ screenWidth }: CruiseChartsProps) => (\n  <Sankey\n    width={screenWidth}\n    height={400}\n    data={cruiseData}\n    node={SankeyNode}\n    nodePadding={25}\n    margin={{\n      right: 120,\n      top: 20,\n      bottom: 20,\n    }}\n  >\n    <Tooltip />\n  </Sankey>\n);\n\nexport default CruiseCharts;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport TravelTable from \"./TravelTable\";\nimport WorldMap from \"./WorldMap\";\nimport CruiseCharts from \"./CruiseCharts\";\n\n/* TravelMap  ->  WorldMap  ->  Popover\n *           |->  TravelTable\n *           |->  CruiseCharts */\nconst TravelMap: React.FC = () => {\n  const screenWidth = document.body.clientWidth - 32;\n\n  return (\n    <>\n      <Typography variant=\"h2\" component=\"h1\">\n        My Travel Map\n      </Typography>\n      <WorldMap screenWidth={screenWidth} />\n      <TravelTable />\n      <CruiseCharts screenWidth={screenWidth} />\n    </>\n  );\n};\n\nexport default TravelMap;\n"],"names":["months","date","year","month","day","split","y","m","d","Number","now","Date","getFullYear","getMonth","getDate","diff","dateObj","scale","format","output","toString","slice","console","error","colors","amber","blue","brown","cyan","deepOrange","deepPurple","green","indigo","lightBlue","lightGreen","lime","orange","pink","purple","red","teal","yellow","countries","Australia","continent","flag","code","Austria","Bahamas","Canada","Denmark","Estonia","Finland","France","Germany","Gibraltar","Greece","Iceland","India","Ireland","Italy","Jamaica","Malta","Mexico","Monaco","Netherlands","Norway","Poland","Portugal","Russia","Spain","Sweden","Switzerland","Turkey","Vatican","Object","keys","forEach","country","i","color","length","disneyLoyalty","num","status","rcLoyalty","nights","lines","ships","cruises","departure","name","ship","line","concierge","numDisney","numRC","cruise","totalDisney","cruiseData","nodes","links","source","target","value","americas","euNaf","asNau","entries","push","marginStyles","marginTop","marginBottom","separatorStyles","borderRight","grey","cellStyles","padding","textAlign","whiteSpace","overflow","len","Math","max","ceil","row","TableCell","style","j","EURatio","countryRow","TableRow","totalNights","disneyCruises","rcNights","cruiseCells","map","rcNextLevel","rcStatus","disneyNextLevel","disneyStatus","React","Typography","variant","component","Table","TableHead","colSpan","TableBody","props","x","hide","content","popoverStyle","position","left","top","display","backgroundColor","borderRadius","STROKE","blueGrey","HOVER","VISITED_HOVER","FILL","PRESSED","defaultStyle","stroke","strokeWidth","outline","screenWidth","setX","setY","setContent","setHide","handleEnter","geography","evt","properties","NAME","clientX","clientY","window","pageYOffset","handleLeave","useWorldMap","ComposableMap","width","height","projectionConfig","Sphere","id","fill","Geographies","geographies","geo","Geography","onMouseEnter","onMouseLeave","default","hover","pressed","rsmKey","index","payload","isOut","containerWidth","Layer","Rectangle","fillOpacity","textAnchor","fontSize","strokeOpacity","Sankey","data","node","SankeyNode","nodePadding","margin","right","bottom","Tooltip","document","body","clientWidth","TravelTable"],"sourceRoot":""}