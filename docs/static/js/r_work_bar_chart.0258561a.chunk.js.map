{"version":3,"sources":["constants/languages.ts","components/resume/work/TechBarChart.tsx"],"names":["languageExp","company","JS","title","short","start","dateObj","end","CSS","REACT","ANGULAR","SASS","JASMINE","JAVA","AWS","PYTHON2","CSHARP","SQL","TechBarChart","props","data","map","obj","name","window","innerWidth","months","diff","state","sortBy","reverse","theme","this","width","height","strokeDasharray","dataKey","formatter","displayMonths","years","Math","floor","label","payload","fill","palette","secondary","main","PureComponent","withTheme"],"mappings":"0OA6EeA,EAtEK,CAClB,CACEC,QAASC,IACTC,MAAOD,IACPE,MAAO,KACPC,MAAOC,YAAQ,WACfC,IAAKD,eACJ,CACDL,QAASO,IACTL,MAAOK,IACPJ,MAAO,MACPC,MAAOC,YAAQ,WACfC,IAAKD,eACJ,CACDL,QAASQ,IACTN,MAAOM,IACPL,MAAO,QACPC,MAAOC,YAAQ,WACfC,IAAKD,eACJ,CACDL,QAASS,IACTP,MAAOO,IACPN,MAAO,UACPC,MAAOC,YAAQ,WACfC,IAAKD,YAAQ,YACZ,CACDL,QAASU,IACTR,MAAOQ,IACPP,MAAO,OACPC,MAAOC,YAAQ,WACfC,IAAKD,eACJ,CACDL,QAASW,IACTT,MAAOS,IACPR,MAAO,UACPC,MAAOC,YAAQ,WACfC,IAAKD,eACJ,CACDL,QAASY,IACTV,MAAOU,IACPT,MAAO,OACPC,MAAOC,YAAQ,WACfC,IAAKD,YAAQ,YACZ,CACDL,QAAS,MACTE,MAAOW,IACPV,MAAO,MACPC,MAAOC,YAAQ,WACfC,IAAKD,YAAQ,YACZ,CACDL,QAASc,IACTZ,MAAOY,IACPX,MAAO,MACPC,MAAOC,YAAQ,WACfC,IAAKD,YAAQ,YACZ,CACDL,QAASe,IACTb,MAAOa,IACPZ,MAAOY,IACPX,MAAOC,YAAQ,WACfC,IAAKD,YAAQ,YACZ,CACDL,QAASgB,IACTd,MAAOc,IACPb,MAAOa,IACPZ,MAAOC,YAAQ,WACfC,IAAKD,YAAQ,aCtDXY,E,YACJ,WAAYC,GAA2B,IAAD,sBACpC,4CAAMA,IAEN,IAAMC,EAAOpB,EAAYqB,KAAI,SAACC,GAAD,MAAU,CACrCC,KAAMC,OAAOC,WAAa,KAAOH,EAAIlB,MAAQkB,EAAIrB,QACjDyB,OAAQpB,YAAQgB,EAAIf,KAAKoB,KAAKL,EAAIjB,MAAO,aALP,OAQpC,EAAKuB,MAAQ,CAAER,KAAMS,IAAOT,EAAM,CAAC,WAAWU,WARV,E,sEAWX,IACjBC,EAAUC,KAAKb,MAAfY,MACAX,EAASY,KAAKJ,MAAdR,KACR,OACE,kBAAC,IAAD,CAAqBa,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAUd,KAAMA,GACd,kBAAC,IAAD,CAAee,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,CACEC,UAAW,SAACX,EAA6CH,EAAcJ,GAErE,IAAMmB,EAAgBZ,EAAmB,GACnCa,EAAQC,KAAKC,MAAMf,EAAmB,IAEtCgB,EAAQvB,EAAMwB,QAAQpB,KAG5B,MAAO,EAFQgB,EAAK,UAAMA,EAAN,MAAkB,KAAOD,EAAa,UAAMA,EAAN,KAAyB,IAEpEI,MAGnB,kBAAC,IAAD,CAAKN,QAAQ,SAASQ,KAAMb,EAAMc,QAAQC,UAAUC,a,GAhCnCC,iBAuCZC,sBAAU/B","file":"static/js/r_work_bar_chart.0258561a.chunk.js","sourcesContent":["import dateObj from '../apis/DateHelper';\nimport {\n  ANGULAR, AWS, CSHARP, CSS,\n  JASMINE, JAVA, JS, PYTHON2,\n  REACT, SASS, SQL,\n} from './tech';\n\nconst languageExp = [\n  {\n    company: JS,\n    title: JS,\n    short: 'JS',\n    start: dateObj('2011-09'),\n    end: dateObj(),\n  }, {\n    company: CSS,\n    title: CSS,\n    short: 'CSS',\n    start: dateObj('2011-09'),\n    end: dateObj(),\n  }, {\n    company: REACT,\n    title: REACT,\n    short: 'React',\n    start: dateObj('2017-04'),\n    end: dateObj(),\n  }, {\n    company: ANGULAR,\n    title: ANGULAR,\n    short: 'Angular',\n    start: dateObj('2014-09'),\n    end: dateObj('2017-04'),\n  }, {\n    company: SASS,\n    title: SASS,\n    short: 'SCSS',\n    start: dateObj('2015-06'),\n    end: dateObj(),\n  }, {\n    company: JASMINE,\n    title: JASMINE,\n    short: 'Jasmine',\n    start: dateObj('2018-03'),\n    end: dateObj(),\n  }, {\n    company: JAVA,\n    title: JAVA,\n    short: 'Java',\n    start: dateObj('2017-04'),\n    end: dateObj('2018-03'),\n  }, {\n    company: 'AWS',\n    title: AWS,\n    short: 'AWS',\n    start: dateObj('2016-10'),\n    end: dateObj('2017-04'),\n  }, {\n    company: PYTHON2,\n    title: PYTHON2,\n    short: 'PY2',\n    start: dateObj('2016-10'),\n    end: dateObj('2017-04'),\n  }, {\n    company: CSHARP,\n    title: CSHARP,\n    short: CSHARP,\n    start: dateObj('2015-06'),\n    end: dateObj('2016-06'),\n  }, {\n    company: SQL,\n    title: SQL,\n    short: SQL,\n    start: dateObj('2015-06'),\n    end: dateObj('2016-06'),\n  },\n];\n\nexport default languageExp;\n","import React, { PureComponent } from 'react';\nimport {\n  ResponsiveContainer, BarChart, Bar, XAxis, CartesianGrid, Tooltip,\n} from 'recharts';\nimport sortBy from 'lodash/sortBy';\nimport { withTheme, Theme } from '@material-ui/core/styles';\nimport dateObj from '../../../apis/DateHelper';\nimport languageExp from '../../../constants/languages';\n\ninterface TechBarChartProps {\n  theme: Theme;\n}\ninterface TechBarChartState {\n  data: {\n    name: string;\n    months: number;\n  }[];\n}\n\nclass TechBarChart extends PureComponent<TechBarChartProps, TechBarChartState> {\n  constructor(props: TechBarChartProps) {\n    super(props);\n\n    const data = languageExp.map((obj) => ({\n      name: window.innerWidth < 1200 ? obj.short : obj.company,\n      months: dateObj(obj.end).diff(obj.start, 'month'),\n    }));\n\n    this.state = { data: sortBy(data, ['months']).reverse() };\n  }\n\n  render(): React.ReactNode {\n    const { theme } = this.props;\n    const { data } = this.state;\n    return (\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <Tooltip\n            formatter={(months: string | number | React.ReactText[], name: string, props): [string, string] => {\n              // FYI: name === 'months'\n              const displayMonths = months as number % 12;\n              const years = Math.floor(months as number / 12);\n\n              const label = props.payload.name;\n              const value = (years ? `${years}y ` : '') + (displayMonths ? `${displayMonths}m` : '');\n\n              return [value, label];\n            }}\n          />\n          <Bar dataKey=\"months\" fill={theme.palette.secondary.main} />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default withTheme(TechBarChart);\n"],"sourceRoot":""}