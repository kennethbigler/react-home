{"version":3,"file":"static/js/resume.1fc9d762.chunk.js","mappings":"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","sources":["apis/noop.ts","hooks/useAnchorEl.ts","components/common/header/ButtonPopover.tsx","components/common/header/PlayerMenu.tsx","components/common/header/TopBar.tsx","components/common/header/Header.tsx","components/resume/Menu.tsx","components/resume/Routes.tsx","helpers/lazyWithPreload.ts","hooks/useToggle.ts"],"sourcesContent":["export default (): void => {\n  /* do nothing */\n};\n","import React from \"react\";\n\ninterface AnchorElHook {\n  anchorEl: null | HTMLElement;\n  setAnchor: React.MouseEventHandler;\n  clearAnchor: React.MouseEventHandler;\n}\n\nconst useAnchorEl = (): AnchorElHook => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const setAnchor = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(e.currentTarget);\n  };\n  const clearAnchor = (): void => {\n    setAnchorEl(null);\n  };\n  return { anchorEl, setAnchor, clearAnchor };\n};\n\nexport default useAnchorEl;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Popover from \"@mui/material/Popover\";\nimport useAnchorEl from \"../../../hooks/useAnchorEl\";\n\ninterface ButtonPopoverProps {\n  children: React.ReactElement;\n  buttonText: string;\n}\n\nconst contentStyle: React.CSSProperties = { padding: 15 };\n\nconst ButtonPopover = (props: ButtonPopoverProps): React.ReactElement => {\n  const { anchorEl, setAnchor, clearAnchor } = useAnchorEl();\n  const { children, buttonText } = props;\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <Button\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        component=\"button\"\n        onClick={setAnchor}\n      >\n        {buttonText}\n      </Button>\n      <Popover\n        id=\"player-popover\"\n        open={open}\n        anchorEl={anchorEl}\n        onClose={clearAnchor}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        title=\"player-popover\"\n      >\n        <div style={contentStyle}>{children}</div>\n      </Popover>\n    </>\n  );\n};\n\nexport default ButtonPopover;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Switch from \"@mui/material/Switch\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { updateName, updateBot } from \"../../../store/modules/players\";\nimport { DBRootState } from \"../../../store/types\";\n\nconst namePadStyles: React.CSSProperties = {\n  maxWidth: \"420px\",\n  width: \"100%\",\n  display: \"block\",\n  margin: \"auto\",\n};\n\nconst PlayerMenu: React.FC = () => {\n  const players = useSelector((state: DBRootState) => state.players);\n  const dispatch = useDispatch();\n\n  const isBot = React.useMemo(() => players.map((a) => a.isBot), [players]);\n\n  /** toggle between bot and human player - dispatch to redux */\n  const handleToggle = React.useCallback(\n    (id: number, isChecked: boolean): void => {\n      dispatch(updateBot(id, isChecked));\n    },\n    [dispatch]\n  );\n\n  /** update player name onBlur - dispatch to redux */\n  const handleBlur = React.useCallback(\n    (id: number) =>\n      (e: React.FocusEvent<HTMLInputElement>): void => {\n        dispatch(updateName(id, e.target.value || \"\"));\n      },\n    [dispatch]\n  );\n\n  /** if enter key was pressed in textfield, update name - dispatch to redux */\n  const handleKeyPress = React.useCallback(\n    (id: number) =>\n      (e: React.KeyboardEvent<HTMLDivElement>): void => {\n        if (e.key === \"Enter\") {\n          dispatch(updateName(id, (e.target as HTMLInputElement).value || \"\"));\n        }\n      },\n    [dispatch]\n  );\n\n  return (\n    <div style={namePadStyles}>\n      <Grid container spacing={1}>\n        <Grid item xs={9}>\n          <Typography variant=\"h5\">Edit Player Names</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography variant=\"h5\">Is Bot?</Typography>\n        </Grid>\n      </Grid>\n      {players.map((p, i) =>\n        p.id !== 0 ? (\n          <Grid key={`${p.name},${i}`} container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={p.name}\n                onBlur={handleBlur(p.id)}\n                onKeyPress={handleKeyPress(p.id)}\n                placeholder=\"Enter Player Name\"\n                title={`player ${i} name`}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Switch\n                checked={isBot[i]}\n                value={isBot[i]}\n                color=\"primary\"\n                onChange={(_e, isC): void => handleToggle(p.id, isC)}\n                title={`isBot-switch-${i}`}\n              />\n            </Grid>\n          </Grid>\n        ) : (\n          <Grid key={`${p.name},${i}`} container spacing={1}>\n            <Grid item xs={9}>\n              <Typography variant=\"h5\">{p.name}</Typography>\n            </Grid>\n            <Grid item xs={3}>\n              <Switch checked disabled />\n            </Grid>\n          </Grid>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default PlayerMenu;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppBar from \"@mui/material/AppBar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Switch from \"@mui/material/Switch\";\nimport SimplePopover from \"./ButtonPopover\";\nimport PlayerMenu from \"./PlayerMenu\";\nimport {\n  displayDarkTheme,\n  displayLightTheme,\n} from \"../../../store/modules/theme\";\nimport { DBRootState } from \"../../../store/types\";\n\nconst cursorStyles: React.CSSProperties = { cursor: \"pointer\" };\nconst flexLeftStyles: React.CSSProperties = {\n  display: \"flex\",\n  alignItems: \"center\",\n};\nconst flexRightStyles: React.CSSProperties = {\n  display: \"flex\",\n  marginRight: 15,\n};\nconst spanTopStyles: React.CSSProperties = { left: 0, right: 0, top: 0 };\n\ninterface TopBarProps {\n  /** change the color scheme of the icon */\n  textColor: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\n  /** show/hide the player editor button */\n  showPlayers?: boolean;\n  /** callback called onClick of Icon or Menu text */\n  toggleOpen: React.MouseEventHandler;\n}\n\nconst TopBar = (props: TopBarProps): React.ReactElement => {\n  const theme = useSelector((state: DBRootState) => state.theme);\n  const dispatch = useDispatch();\n  const [checked, setChecked] = React.useState(theme.mode !== \"dark\");\n\n  /** function toggle between site's light and dark theme - dispatch to Redux */\n  const toggleTheme = React.useCallback((): void => {\n    checked ? dispatch(displayDarkTheme()) : dispatch(displayLightTheme());\n    setChecked(!checked);\n  }, [checked, dispatch]);\n\n  const { toggleOpen, showPlayers = false, textColor } = props;\n\n  return (\n    <AppBar style={spanTopStyles} className={`header-${theme.mode}-theme`}>\n      <Toolbar disableGutters>\n        <div className=\"flex-container\">\n          <div style={flexLeftStyles}>\n            <IconButton\n              aria-label=\"Menu\"\n              onClick={toggleOpen}\n              color={textColor}\n              title=\"Icon Menu Button\"\n              size=\"large\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              onClick={toggleOpen}\n              style={cursorStyles}\n              variant=\"h6\"\n              color={textColor}\n            >\n              Menu\n            </Typography>\n          </div>\n          {showPlayers && (\n            <div style={flexRightStyles}>\n              <SimplePopover buttonText=\"Players\">\n                <PlayerMenu />\n              </SimplePopover>\n            </div>\n          )}\n          <div style={flexRightStyles}>\n            <Switch\n              checked={checked}\n              value={checked}\n              onChange={toggleTheme}\n              title=\"Theme Toggle Switch\"\n              color=\"secondary\"\n            />\n          </div>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default React.memo(TopBar);\n","import React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Drawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport NavigationClose from \"@mui/icons-material/Close\";\nimport { useTheme } from \"@mui/material/styles\";\nimport TopBar from \"./TopBar\";\nimport useToggleState from \"../../../hooks/useToggle\";\nimport noop from \"../../../apis/noop\";\n\ntype ItemClick = (loc: string) => void;\n\nexport interface NavProps {\n  onItemClick: ItemClick;\n}\n\ninterface HeaderProps {\n  /** content of the header bar via render props */\n  children: (onItemClick: ItemClick) => React.ReactElement<NavProps>;\n  /** callback function, wrapped with logic, then passed as onItemClick to children */\n  handleNav?: (loc: string) => void;\n  /** show/hide the player editor button */\n  showPlayers?: boolean;\n}\n\nconst Header = (props: HeaderProps): React.ReactElement => {\n  const [isOpen, toggleOpen, setIsOpen] = useToggleState();\n  const {\n    palette: { mode },\n  } = useTheme();\n  const { children, handleNav = noop, showPlayers = false } = props;\n\n  /** close the menu and call the passed callback */\n  const handleNavigation = React.useCallback(\n    (loc: string): void => {\n      setIsOpen(false);\n      handleNav(loc);\n    },\n    [handleNav, setIsOpen]\n  );\n\n  const textColor = mode === \"light\" ? \"inherit\" : \"default\";\n\n  return (\n    <>\n      <TopBar\n        toggleOpen={toggleOpen}\n        showPlayers={showPlayers}\n        textColor={textColor}\n      />\n      <Drawer onClose={toggleOpen} open={isOpen}>\n        <AppBar position=\"sticky\">\n          <Toolbar disableGutters>\n            <IconButton\n              aria-label=\"Menu Close\"\n              onClick={toggleOpen}\n              color={textColor}\n              title=\"Close Side Menu\"\n              size=\"large\"\n            >\n              <NavigationClose />\n            </IconButton>\n            <Typography variant=\"h6\" color={textColor}>\n              Menu\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        {children(handleNavigation)}\n      </Drawer>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Divider from \"@mui/material/Divider\";\nimport noop from \"../../apis/noop\";\n\ninterface MenuProps {\n  onItemClick?: (loc: string) => void;\n}\n\n// external links\nconst github = (): void => {\n  window.open(\"https://github.com/kennethbigler/react-home\");\n};\nconst linkedIn = (): void => {\n  window.open(\"https://www.linkedin.com/in/kennethbigler\");\n};\nconst stackOverflow = (): void => {\n  window.open(\"https://stackoverflow.com/users/4830309/ken-bigler\");\n};\n\nconst Menu: React.FC<MenuProps> = React.memo((props: MenuProps) => {\n  const { onItemClick } = props;\n  // internal routes\n  const menu = React.useMemo(\n    () =>\n      [\n        { name: \"Summary\", route: \"\" },\n        { name: \"Work\", route: \"work\" },\n        { name: \"Resume\", route: \"resume\" },\n        { name: \"Hackathons & Education\", route: \"education\" },\n        { divider: true },\n        { name: \"Git Tools\", route: \"git-tools\" },\n        { name: \"GraphQL Demo\", route: \"graphql\" },\n        { divider: true },\n        { name: \"Cars\", route: \"cars\" },\n        { name: \"Travel Map\", route: \"travel\" },\n        { name: \"Murder Mystery\", route: \"murder\" },\n        { name: \"React Games\", route: \"games\" },\n      ].map((item, index) =>\n        item.divider ? (\n          <Divider key={index} />\n        ) : (\n          <MenuItem\n            key={item.name}\n            onClick={(): void =>\n              onItemClick ? onItemClick(`/${item.route || \"\"}`) : noop()\n            }\n          >\n            {item.name}\n          </MenuItem>\n        )\n      ),\n    [onItemClick]\n  );\n\n  return (\n    <>\n      {menu}\n      <Divider />\n      <MenuItem onClick={github}>GitHub</MenuItem>\n      <MenuItem onClick={linkedIn}>LinkedIn</MenuItem>\n      <Divider />\n      <br />\n      <img\n        alt=\"profile for Ken Bigler at Stack Overflow, Q&A for professional and enthusiast programmers\"\n        id=\"stackOverflow\"\n        onClick={stackOverflow}\n        src=\"https://stackoverflow.com/users/flair/4830309.png?theme=dark\"\n        style={{\n          display: \"block\",\n          margin: \"auto\",\n          cursor: \"pointer\",\n          width: 240,\n          paddingLeft: 16,\n          paddingRight: 16,\n        }}\n      />\n    </>\n  );\n});\n\nexport default Menu;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport lazyWithPreload from \"../../helpers/lazyWithPreload\";\nimport Header, { NavProps } from \"../common/header/Header\";\nimport Menu from \"./Menu\";\nimport LoadingSpinner from \"../common/loading-spinner\";\n\n// lazy load page components\nconst Summary = lazyWithPreload(\n  import(/* webpackChunkName: \"r_summary\" */ \"./summary\")\n);\nconst Work = lazyWithPreload(import(/* webpackChunkName: \"r_work\" */ \"./work\"));\nconst Education = lazyWithPreload(\n  import(/* webpackChunkName: \"r_education\" */ \"./education\")\n);\nconst TravelMap = lazyWithPreload(\n  import(/* webpackChunkName: \"r_travel\" */ \"./travel-map\")\n);\nconst Resume = lazyWithPreload(\n  import(/* webpackChunkName: \"r_resume\" */ \"./resume\")\n);\nconst GitTools = lazyWithPreload(\n  import(/* webpackChunkName: \"r_git\" */ \"./git-tools\")\n);\nconst MurderMystery = lazyWithPreload(\n  import(/* webpackChunkName: \"r_mystery\" */ \"./murder-mystery\")\n);\nconst GraphQL = lazyWithPreload(\n  import(/* webpackChunkName: \"r_graphql\" */ \"./graphql\")\n);\nconst Cars = lazyWithPreload(import(/* webpackChunkName: \"r_cars\" */ \"./cars\"));\n\ninterface RoutesProps {\n  handleNav: (loc: string) => void;\n}\n\nconst ResumeRoutes: React.FC<RoutesProps> = ({ handleNav }) => (\n  <>\n    <Header handleNav={handleNav}>\n      {(onItemClick): React.ReactElement<NavProps> => (\n        <Menu onItemClick={onItemClick} />\n      )}\n    </Header>\n    <React.Suspense fallback={<LoadingSpinner />}>\n      <Routes>\n        <Route path=\"/*\" element={<Summary />} />\n        <Route path=\"work/*\" element={<Work />} />\n        <Route path=\"education/*\" element={<Education />} />\n        <Route path=\"travel/*\" element={<TravelMap />} />\n        <Route path=\"resume/*\" element={<Resume />} />\n        <Route path=\"git-tools/*\" element={<GitTools />} />\n        <Route path=\"murder/*\" element={<MurderMystery />} />\n        <Route path=\"graphql/*\" element={<GraphQL />} />\n        <Route path=\"cars/*\" element={<Cars />} />\n      </Routes>\n    </React.Suspense>\n  </>\n);\n\nexport default ResumeRoutes;\n","import React from \"react\";\n\ntype ImportPromise = Promise<{ default: React.ComponentType }>;\ntype LazyComponent = React.LazyExoticComponent<React.ComponentType>;\n\nexport default function lazyWithPreload(\n  ComponentPromise: ImportPromise\n): LazyComponent {\n  return React.lazy(() => ComponentPromise);\n}\n","import React from \"react\";\n\ntype ToggleStateHook = [\n  boolean,\n  React.MouseEventHandler,\n  React.Dispatch<React.SetStateAction<boolean>>\n];\n\nconst useToggleState = (defaultVal = false): ToggleStateHook => {\n  const [isToggled, setIsToggled] = React.useState(defaultVal);\n\n  const handleToggle = (): void => {\n    setIsToggled(!isToggled);\n  };\n\n  return [isToggled, handleToggle, setIsToggled];\n};\n\nexport default useToggleState;\n"],"names":["React","anchorEl","setAnchorEl","setAnchor","e","currentTarget","clearAnchor","contentStyle","padding","props","useAnchorEl","children","buttonText","open","Boolean","Button","variant","component","onClick","Popover","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","title","style","namePadStyles","maxWidth","width","display","margin","players","useSelector","state","dispatch","useDispatch","isBot","map","a","handleToggle","isChecked","updateBot","handleBlur","updateName","target","value","handleKeyPress","key","Grid","container","spacing","item","xs","Typography","p","i","TextField","defaultValue","name","onBlur","onKeyPress","placeholder","Switch","checked","color","onChange","_e","isC","disabled","cursorStyles","cursor","flexLeftStyles","alignItems","flexRightStyles","marginRight","spanTopStyles","left","right","top","TopBar","theme","mode","setChecked","toggleTheme","displayDarkTheme","displayLightTheme","toggleOpen","showPlayers","textColor","AppBar","className","Toolbar","disableGutters","IconButton","size","Menu","useToggleState","isOpen","setIsOpen","useTheme","palette","handleNav","noop","handleNavigation","loc","Drawer","position","github","window","linkedIn","stackOverflow","onItemClick","menu","route","divider","index","Divider","MenuItem","alt","src","paddingLeft","paddingRight","Summary","lazyWithPreload","Work","Education","TravelMap","Resume","GitTools","MurderMystery","GraphQL","Cars","Header","fallback","path","element","ComponentPromise","defaultVal","isToggled","setIsToggled"],"sourceRoot":""}