{"version":3,"file":"static/js/g_slots.a52c47dd.chunk.js","mappings":"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","sources":["apis/SlotMachine.ts","recoil/slots-state.ts","components/games/slots/PayoutTable.tsx","components/games/slots/MoneyTable.tsx","components/games/slots/ReelDisplay.tsx","components/games/slots/Slots.tsx","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["export enum SlotOption {\n  EMPTY = \"-\",\n  CHERRY = \"🍒\",\n  BAR = \"🍺\",\n  DOUBLE_BAR = \"🍻\",\n  TRIPLE_BAR = \"🥃\",\n  SEVEN = \"❌\",\n  JACKPOT = \"💰\",\n}\nexport type SlotDisplay = [SlotOption, SlotOption, SlotOption];\n\ninterface Reel {\n  symbol: SlotOption;\n  start: number;\n  stop: number;\n}\n\nconst NUM_REELS = 3;\n\n/** options to be displayed on slot machine */\nconst reels: Reel[] = [\n  { symbol: SlotOption.CHERRY, start: 1, stop: 2 },\n  { symbol: SlotOption.EMPTY, start: 3, stop: 7 },\n  { symbol: SlotOption.BAR, start: 8, stop: 12 },\n  { symbol: SlotOption.EMPTY, start: 13, stop: 17 },\n  { symbol: SlotOption.SEVEN, start: 18, stop: 25 },\n  { symbol: SlotOption.EMPTY, start: 26, stop: 30 },\n  { symbol: SlotOption.BAR, start: 31, stop: 35 },\n  { symbol: SlotOption.EMPTY, start: 36, stop: 41 },\n  { symbol: SlotOption.CHERRY, start: 42, stop: 43 },\n  { symbol: SlotOption.EMPTY, start: 44, stop: 49 },\n  { symbol: SlotOption.DOUBLE_BAR, start: 50, stop: 56 },\n  { symbol: SlotOption.EMPTY, start: 57, stop: 62 },\n  { symbol: SlotOption.CHERRY, start: 63, stop: 63 },\n  { symbol: SlotOption.EMPTY, start: 64, stop: 69 },\n  { symbol: SlotOption.DOUBLE_BAR, start: 70, stop: 75 },\n  { symbol: SlotOption.EMPTY, start: 76, stop: 81 },\n  { symbol: SlotOption.BAR, start: 82, stop: 87 },\n  { symbol: SlotOption.EMPTY, start: 88, stop: 93 },\n  { symbol: SlotOption.TRIPLE_BAR, start: 94, stop: 104 },\n  { symbol: SlotOption.EMPTY, start: 105, stop: 115 },\n  { symbol: SlotOption.JACKPOT, start: 116, stop: 117 },\n  { symbol: SlotOption.EMPTY, start: 118, stop: 128 },\n];\n\n/** prepare the slot machine */\nfunction prepareSlotMachine(): SlotDisplay[] {\n  const machine: SlotDisplay[] = [];\n  reels.forEach((reel: Reel, i: number) => {\n    // wrap the reels\n    const prev = i - 1 > 0 ? i - 1 : reels.length - 1;\n    const next = (i + 1) % reels.length;\n    // create the machine\n    for (let j = reel.start; j <= reel.stop; j += 1) {\n      machine.push([reels[prev].symbol, reel.symbol, reels[next].symbol]);\n    }\n  });\n  return machine;\n}\n\nconst machine = prepareSlotMachine();\n\n/** spin the slot machine and get a result */\nexport function spin(): SlotDisplay {\n  return machine[Math.floor(Math.random() * machine.length)];\n}\n\n/** Pull the slot machine handle, returns info needed for display */\nconst pullHandle = (): SlotDisplay[] => {\n  const reel = [];\n  for (let i = 0; i < NUM_REELS; i += 1) {\n    reel[i] = spin();\n  }\n  return reel;\n};\n\n/**\n * evaluate slot machine based of 3 reels\n * https://vegasclick.com/games/slots/how-they-work\n */\nconst getPayout = (reel: SlotDisplay[], bet: number): number => {\n  // for bar check\n  const bars = [SlotOption.BAR, SlotOption.DOUBLE_BAR, SlotOption.TRIPLE_BAR];\n  // get reel values\n  const r0 = reel[0][1];\n  const r1 = reel[1][1];\n  const r2 = reel[2][1];\n  const fReel = [r0, r1, r2];\n  // check if they match\n  const m01 = r0 === r1;\n  const m02 = r0 === r2;\n  // if we have 3 of a kind\n  if (m01 && m02) {\n    switch (r0) {\n      case SlotOption.JACKPOT:\n        return 1666 * bet;\n      case SlotOption.SEVEN:\n        return 300 * bet;\n      case SlotOption.TRIPLE_BAR:\n        return 100 * bet;\n      case SlotOption.DOUBLE_BAR:\n        return 50 * bet;\n      case SlotOption.BAR:\n        return 25 * bet;\n      case SlotOption.CHERRY:\n        return 12 * bet;\n      default:\n        return 0;\n    }\n  } else if (bars.includes(r0) && bars.includes(r1) && bars.includes(r2)) {\n    // if we have 3 of any bar\n    return 12 * bet;\n  } else if (\n    fReel.includes(SlotOption.CHERRY, fReel.indexOf(SlotOption.CHERRY) + 1)\n  ) {\n    // if we have 2 cherries\n    return 6 * bet;\n  } else if (fReel.includes(SlotOption.CHERRY)) {\n    // if we have 1 cherry\n    return 3 * bet;\n  }\n  return 0;\n};\n\nexport default {\n  pullHandle,\n  getPayout,\n};\n","import { atom, DefaultValue, selector } from \"recoil\";\nimport SlotMachine, { SlotDisplay } from \"../apis/SlotMachine\";\nimport playerAtom from \"./player-atom\";\n\nexport const slotsAtom = atom({\n  key: \"slotsAtom\",\n  default:\n    (JSON.parse(\n      localStorage.getItem(\"slots-atom\") || \"null\"\n    ) as SlotDisplay[]) || SlotMachine.pullHandle(),\n  effects: [\n    ({ onSet }) => {\n      onSet((newReel) => {\n        localStorage.setItem(\"slots-atom\", JSON.stringify(newReel));\n      });\n    },\n  ],\n});\n\nconst slotsState = selector({\n  key: \"slotsState\",\n  get: ({ get }) => {\n    const reel = get(slotsAtom);\n    const players = get(playerAtom);\n    const player = players[0];\n    const dealer = players[players.length - 1];\n\n    return { reel, player, dealer };\n  },\n  set: ({ get, set }, state) => {\n    if (!(state instanceof DefaultValue)) {\n      const { reel, player, dealer } = state;\n      set(slotsAtom, reel);\n\n      const players = get(playerAtom);\n      const newPlayers = [...players];\n      newPlayers[0] = player;\n      newPlayers[players.length - 1] = dealer;\n      set(playerAtom, newPlayers);\n    }\n  },\n});\n\nexport default slotsState;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { SlotOption as SO } from \"../../../apis/SlotMachine\";\n\n/** used to display the payout table */\nconst payoutTable = [\n  { symbol: `${SO.JACKPOT} ${SO.JACKPOT} ${SO.JACKPOT}`, payout: 1666 },\n  { symbol: `${SO.SEVEN} ${SO.SEVEN} ${SO.SEVEN}`, payout: 300 },\n  { symbol: `${SO.TRIPLE_BAR} ${SO.TRIPLE_BAR} ${SO.TRIPLE_BAR}`, payout: 100 },\n  { symbol: `${SO.DOUBLE_BAR} ${SO.DOUBLE_BAR} ${SO.DOUBLE_BAR}`, payout: 50 },\n  { symbol: `${SO.BAR} ${SO.BAR} ${SO.BAR}`, payout: 25 },\n  {\n    symbol: `3 of any ${SO.BAR} ${SO.DOUBLE_BAR} ${SO.TRIPLE_BAR}`,\n    payout: 12,\n  },\n  { symbol: `${SO.CHERRY} ${SO.CHERRY} ${SO.CHERRY}`, payout: 12 },\n  { symbol: `${SO.CHERRY} ${SO.CHERRY}`, payout: 6 },\n  { symbol: SO.CHERRY, payout: 3 },\n];\n\nconst PayoutTable: React.FC = React.memo(() => (\n  <Table>\n    <TableHead>\n      <TableRow>\n        <TableCell>Slot Roll</TableCell>\n        <TableCell>Payout</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {payoutTable.map((row, i) => (\n        <TableRow key={i}>\n          <TableCell>{row.symbol}</TableCell>\n          <TableCell>{`${row.payout} : 1`}</TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n));\n\nexport default PayoutTable;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface MoneyTableProps {\n  playerName: string;\n  playerMoney: number;\n  dealerMoney: number;\n}\n\nconst MoneyTable: React.FC<MoneyTableProps> = React.memo(\n  ({ playerName, playerMoney, dealerMoney }: MoneyTableProps) => (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Player</TableCell>\n          <TableCell>Money</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow>\n          <TableCell>{playerName}</TableCell>\n          <TableCell>{`$${playerMoney}`}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>House</TableCell>\n          <TableCell>{`$${dealerMoney}`}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  )\n);\n\nexport default MoneyTable;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport { SlotDisplay } from \"../../../apis/SlotMachine\";\n\ninterface ReelDisplayProps {\n  reel: SlotDisplay[];\n}\n\nconst cellStyles: React.CSSProperties = {\n  minHeight: 39,\n  fontWeight: 900,\n};\n\nconst ReelDisplay: React.FC<ReelDisplayProps> = (props: ReelDisplayProps) => {\n  const { reel } = props;\n  /** generate code for slot machine */\n  const getSlots = React.useCallback((): React.ReactNode[] => {\n    // display for slots\n    const slots = [];\n    for (let i = 0; i < 3; i += 1) {\n      // create 3 cells in a row\n      const row = reel.map((reelRow, j) => (\n        <TableCell key={`${j},${i}`}>\n          <Typography variant=\"h4\" align=\"center\" style={cellStyles}>\n            {reelRow[i]}\n          </Typography>\n        </TableCell>\n      ));\n      // separate into rows\n      const slotRow = <TableRow key={`row${i}`}>{row}</TableRow>;\n      slots.push(slotRow);\n    }\n    return slots;\n  }, [reel]);\n\n  return (\n    <Table>\n      <TableBody>{getSlots()}</TableBody>\n    </Table>\n  );\n};\n\nexport default ReelDisplay;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useRecoilState } from \"recoil\";\nimport slotsState from \"../../../recoil/slots-state\";\nimport PayoutTable from \"./PayoutTable\";\nimport MoneyTable from \"./MoneyTable\";\nimport ReelDisplay from \"./ReelDisplay\";\nimport SlotMachine from \"../../../apis/SlotMachine\";\n\n/* Slots  ->  ReelDisplay\n *       |->  MoneyTable\n *       |->  PayoutTable */\nconst Slots: React.FC = () => {\n  const [{ reel, player, dealer }, setState] = useRecoilState(slotsState);\n  const [exchange, setExchange] = React.useState(0);\n\n  const updateSlotMachine = () => {\n    // get rolled reel\n    const newReel = SlotMachine.pullHandle();\n\n    // determine payout\n    const { bet } = player;\n    const newExchange = SlotMachine.getPayout(newReel, bet) - bet;\n\n    // exchange money and update state\n    setExchange(newExchange);\n    setState({\n      reel: newReel,\n      player: { ...player, money: player.money + newExchange },\n      dealer: { ...dealer, money: dealer.money - newExchange },\n    });\n  };\n\n  return (\n    <>\n      <Typography variant=\"h2\">Casino Slot Machine</Typography>\n      <Grid container spacing={1} style={{ marginTop: \"2em\" }}>\n        <Grid item sm={6} xs={12}>\n          <Grid container spacing={1} style={{ marginBottom: \"1em\" }}>\n            <Grid item sm={3} xs={12}>\n              <Button\n                color=\"primary\"\n                onClick={updateSlotMachine}\n                style={{ marginBottom: 15, color: \"black\" }}\n                variant=\"contained\"\n              >\n                Spin\n              </Button>\n              {exchange ? (\n                <Typography variant=\"h4\">{`You ${\n                  exchange > 0 ? \"won\" : \"lost\"\n                } $${exchange}`}</Typography>\n              ) : null}\n            </Grid>\n            <Grid item sm={9} xs={12}>\n              <ReelDisplay reel={reel} />\n            </Grid>\n          </Grid>\n          <MoneyTable\n            playerMoney={player.money}\n            playerName={player.name}\n            dealerMoney={dealer.money}\n          />\n        </Grid>\n        <Grid item sm={6} xs={12}>\n          <PayoutTable />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Slots;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["SlotOption","reels","symbol","CHERRY","start","stop","EMPTY","BAR","SEVEN","DOUBLE_BAR","TRIPLE_BAR","JACKPOT","machine","forEach","reel","i","prev","length","next","j","push","prepareSlotMachine","Math","floor","random","bet","bars","r0","r1","r2","fReel","includes","indexOf","slotsAtom","atom","key","default","JSON","parse","localStorage","getItem","SlotMachine","effects","onSet","newReel","setItem","stringify","selector","get","players","playerAtom","player","dealer","set","state","DefaultValue","newPlayers","payoutTable","SO","payout","React","Table","TableHead","TableRow","TableCell","TableBody","map","row","playerName","playerMoney","dealerMoney","cellStyles","minHeight","fontWeight","props","getSlots","slots","reelRow","Typography","variant","align","style","slotRow","useRecoilState","slotsState","setState","exchange","setExchange","Grid","container","spacing","marginTop","item","sm","xs","marginBottom","Button","color","onClick","newExchange","money","name","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","overridesResolver","styles","root","display","tablelvl2","defaultComponent","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","Tablelvl2Context","value","children","as","clsx","role"],"sourceRoot":""}