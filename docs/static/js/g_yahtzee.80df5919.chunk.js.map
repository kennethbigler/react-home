{"version":3,"sources":["../node_modules/lodash/forEach.js","../node_modules/lodash/_castFunction.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/isString.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/noop.js","hooks/useOpenState.ts","components/common/InfoPopup.tsx","../node_modules/lodash/maxBy.js","apis/Dice.ts","components/games/yahtzee/score-table/Header.tsx","components/games/yahtzee/score-table/TopScores.tsx","components/games/yahtzee/score-table/TopTable.tsx","components/games/yahtzee/types.ts","components/games/yahtzee/score-table/scoreTableHelper.ts","components/games/yahtzee/score-table/BottomScores.tsx","components/games/yahtzee/score-table/BottomTable.tsx","components/games/yahtzee/score-table/ScoreTable.tsx","components/games/yahtzee/ScoreGraph.tsx","components/games/yahtzee/Header.tsx","components/games/yahtzee/TableHeader.tsx","components/games/yahtzee/Yahtzee.tsx","components/games/yahtzee/index.ts"],"names":["arrayEach","baseEach","castFunction","isArray","module","exports","collection","iteratee","identity","value","array","fromIndex","index","length","baseGetTag","isObjectLike","stringTag","baseFindIndex","baseIsNaN","strictIndexOf","useOpenState","defaultVal","React","useState","isOpen","setIsOpen","handleOpen","handleClose","InfoPopup","props","buttonText","title","children","color","onClick","variant","onClose","open","maxWidth","fullWidth","baseExtremum","baseGt","baseIteratee","undefined","roll","Math","floor","random","Header","memo","TableHead","TableRow","TableCell","style","TopScores","topSum","finalTopSum","colSpan","TopTable","top","map","i","name","score","d","values","reduce","count","val","getButtonInfo","sum","showButton","key","showScoreButtons","getScoreButton","getTopTableButtons","generateTopTable","ADD_DICE","hasXDice","n","hist","hasDice","forEach","isStraight","BottomScores","bottomSum","BottomTable","has3","has2","isFullHouse","console","error","getBottomTableButtons","points","hasYahtzee","acc","parseInt","canYahtzeeBonus","bottom","gameScore","hint","parsedPoints","getDiceValue","generateBottomTable","centerStyle","textAlign","ScoreTable","onTopScore","onBottomScore","Button","Table","size","TableBody","generateScoreGraph","scores","ScoreGraph","state","nextProps","this","main","theme","palette","secondary","mostRecent","get","topScore","maxBy","width","height","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","interval","orientation","tickLine","type","stroke","fillOpacity","fill","Typography","Component","getDerivedStateFromProps","withTheme","className","wrapperStyles","display","margin","TableHeader","saved","handleUnsave","handleSave","handleDiceRoll","getButtonText","getInitialState","turn","hasScored","finish","Yahtzee","newGame","actions","addScore","setState","DiceAPI","sort","push","splice","handleTopScore","handleBottomScore","_props","connect","yahtzee","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/g_yahtzee.80df5919.chunk.js","sourcesContent":["var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\n\n\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;","var identity = require('./identity');\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\n\n\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = strictIndexOf;","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar stringTag = '[object String]';\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\n\nfunction isString(value) {\n  return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;\n}\n\nmodule.exports = isString;","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n\n  return array;\n}\n\nmodule.exports = arrayEach;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {// No operation performed.\n}\n\nmodule.exports = noop;","import React from 'react';\n\ntype OpenStateHook = [\n  boolean,\n  Function,\n  Function,\n]\n\nconst useOpenState = (defaultVal = false): OpenStateHook => {\n  const [isOpen, setIsOpen] = React.useState(defaultVal);\n\n  const handleOpen = (): void => { setIsOpen(true); };\n  const handleClose = (): void => { setIsOpen(false); };\n\n  return [isOpen, handleOpen, handleClose];\n};\n\nexport default useOpenState;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport useOpenState from '../../hooks/useOpenState';\n\ninterface InfoPopupProps {\n  children: React.ReactNodeArray;\n  title: string | React.ReactElement;\n  buttonText?: string | React.ReactElement;\n}\n\nconst InfoPopup: React.FC<InfoPopupProps> = (props: InfoPopupProps) => {\n  const [isOpen, handleOpen, handleClose] = useOpenState();\n\n  const { buttonText, title, children } = props;\n  return (\n    <>\n      <Button color=\"primary\" onClick={handleOpen as React.MouseEventHandler} variant=\"contained\">\n        {buttonText || title}\n      </Button>\n      <Dialog onClose={handleClose as React.MouseEventHandler} open={isOpen} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={handleClose as React.MouseEventHandler}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default InfoPopup;\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\n\n\nfunction maxBy(array, iteratee) {\n  return array && array.length ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt) : undefined;\n}\n\nmodule.exports = maxBy;","import { Dice } from '../components/games/yahtzee/types';\n\nexport default {\n  // randomize order of the cards\n  roll(): Dice {\n    return Math.floor(Math.random() * 6) + 1 as Dice;\n  },\n};\n\n// Dice as a react hook, seems kind of like an anti-pattern\nexport function useDice(): () => number {\n  function rollDice(): number {\n    return Math.floor(Math.random() * 6) + 1;\n  }\n\n  return rollDice;\n}\n","import React, { memo } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\ninterface HeaderProps {\n  style: React.CSSProperties;\n}\n\nconst Header: React.FC<HeaderProps> = memo((props: HeaderProps) => (\n  <TableHead>\n    <TableRow>\n      <TableCell>Minimum Required for Bonus</TableCell>\n      <TableCell>How to Score</TableCell>\n      <TableCell style={props.style}>Game Score</TableCell>\n    </TableRow>\n  </TableHead>\n));\n\nexport default Header;\n","import React, { memo } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\ninterface TopScoresProps {\n  finalTopSum: number;\n  topSum: number;\n  style: React.CSSProperties;\n}\n\nconst TopScores: React.FC<TopScoresProps> = memo((props: TopScoresProps) => {\n  const { topSum, finalTopSum, style } = props;\n\n  return (\n    <>\n      <TableRow>\n        <TableCell colSpan={2}>Total == 63</TableCell>\n        <TableCell style={style}>{topSum}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>Bonus if &gt;= 63</TableCell>\n        <TableCell>Score 35</TableCell>\n        <TableCell style={style}>{topSum >= 63 ? 35 : 0}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell colSpan={2}>Upper Half Total</TableCell>\n        <TableCell style={style}>{finalTopSum}</TableCell>\n      </TableRow>\n      <TableRow />\n    </>\n  );\n});\n\nexport default TopScores;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport map from 'lodash/map';\nimport reduce from 'lodash/reduce';\nimport { Dice, TopGameScore } from '../types';\nimport TopScores from './TopScores';\n\ninterface TopTableProps {\n  finalTopSum: number;\n  getScoreButton: Function;\n  showScoreButtons: boolean;\n  style: React.CSSProperties;\n  top: TopGameScore[];\n  topSum: number;\n  values: Dice[];\n}\n\nconst TopTable: React.FC<TopTableProps> = (props: TopTableProps) => {\n  const getButtonInfo = (d: number): [number, number] => {\n    const { values } = props;\n    return reduce(values, (count, val) => {\n      if (val === d) {\n        count[0] += 1;\n        count[1] += d;\n      }\n      return count;\n    }, [0, 0]);\n  };\n\n  const getTopTableButtons = (score: number, showButton: boolean, sum: number, i: number): React.ReactNode | null => {\n    const { showScoreButtons, getScoreButton } = props;\n    if (score >= 0) {\n      return score;\n    }\n    return showScoreButtons ? getScoreButton(showButton, sum, true, i) : null;\n  };\n\n  const generateTopTable = (): React.ReactNode => {\n    const { top, style } = props;\n    return map(top, ({ name, score }, i) => {\n      const d = i + 1;\n      const [count, sum] = getButtonInfo(i + 1);\n      const showButton = count >= 1;\n\n      return (\n        <TableRow key={name}>\n          <TableCell>{`${name}: ${d},${d},${d} = ${d * 3}`}</TableCell>\n          <TableCell>{`Add Only ${name}`}</TableCell>\n          <TableCell style={style}>{getTopTableButtons(score, showButton, sum, i)}</TableCell>\n        </TableRow>\n      );\n    });\n  };\n\n  const { topSum, finalTopSum, style } = props;\n\n  return (\n    <>\n      {generateTopTable()}\n      <TopScores topSum={topSum} finalTopSum={finalTopSum} style={style} />\n    </>\n  );\n};\n\nexport default TopTable;\n","export const ADD_DICE = 'Sum of Dice';\ntype AddDice = 'Sum of Dice';\n\nexport type Dice = 0 | 1 | 2 | 3 | 4 | 5 | 6;\nexport type Scores = number[];\nexport interface TopGameScore {\n  name: string;\n  score: number;\n}\nexport interface BottomGameScore {\n  name: string;\n  score: number;\n  hint: string;\n  points: number | AddDice;\n}\n\nexport default ADD_DICE;\n","import forEach from 'lodash/forEach';\nimport reduce from 'lodash/reduce';\nimport { Dice, TopGameScore } from '../types';\n\ninterface DiceHistogram {\n  0?: number;\n  1: number;\n  2: number;\n  3: number;\n  4: number;\n  5: number;\n  6: number;\n}\n\nexport const getHistogram = () => (hist: DiceHistogram, val: Dice): DiceHistogram => {\n  if (!hist[val]) {\n    hist[val] = 1;\n  } else {\n    hist[val] += 1;\n  }\n  return hist;\n};\n\nexport const hasXDice = (values: Dice[], n: number): boolean => {\n  const hist = reduce(values, getHistogram(), {} as DiceHistogram);\n  let hasDice = false;\n  forEach(hist, (value: number | undefined) => {\n    if (value && value >= n) {\n      hasDice = true;\n    }\n  });\n  return hasDice;\n};\n\nexport const isFullHouse = (values: Dice[]): boolean => {\n  const hist = reduce(values, getHistogram(), {} as DiceHistogram);\n\n  let has3 = false;\n  let has2 = false;\n\n  forEach(hist, (value: number | undefined) => {\n    if (value && value >= 3) {\n      has3 = true;\n    } else if (value && value >= 2) {\n      has2 = true;\n    }\n  });\n\n  return has3 && has2;\n};\n\nexport const isStraight = (values: Dice[], length: number): boolean => {\n  const hist = reduce(values, getHistogram(), {} as DiceHistogram);\n\n  let count = 0;\n  forEach([1, 2, 3, 4, 5, 6], (i: Dice) => {\n    if (count < length) {\n      const value = hist[i];\n      if (!value) {\n        count = 0;\n      } else {\n        count += 1;\n      }\n    }\n  });\n  return count >= length;\n};\n\nexport const canYahtzeeBonus = (values: Dice[], top: TopGameScore[]): boolean => reduce(\n  reduce(values, getHistogram(), {} as DiceHistogram),\n  (acc: boolean, value, key) => {\n    if (value === 5 && top[parseInt(key, 10) - 1].score >= 0) {\n      return true;\n    }\n    return acc;\n  },\n  false,\n);\n","import React, { memo } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\ninterface BottomScoresProps {\n  bottomSum: number;\n  finalTopSum: number;\n  style: React.CSSProperties;\n}\n\nconst BottomScores: React.FC<BottomScoresProps> = memo((props: BottomScoresProps) => {\n  const { finalTopSum, bottomSum, style } = props;\n\n  return (\n    <>\n      <TableRow>\n        <TableCell colSpan={2}>Lower Half Total</TableCell>\n        <TableCell style={style}>{bottomSum}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell colSpan={2}>Upper Half Total</TableCell>\n        <TableCell style={style}>{finalTopSum}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell colSpan={2}>Grand Total</TableCell>\n        <TableCell style={style}>{finalTopSum + bottomSum}</TableCell>\n      </TableRow>\n    </>\n  );\n});\n\nexport default BottomScores;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport map from 'lodash/map';\nimport reduce from 'lodash/reduce';\nimport {\n  Dice, TopGameScore, BottomGameScore, ADD_DICE,\n} from '../types';\nimport {\n  hasXDice, isFullHouse, isStraight, canYahtzeeBonus,\n} from './scoreTableHelper';\nimport BottomScores from './BottomScores';\n\ninterface BottomTableProps {\n  bottom: BottomGameScore[];\n  bottomSum: number;\n  finalTopSum: number;\n  getScoreButton: Function;\n  showScoreButtons: boolean;\n  style: React.CSSProperties;\n  top: TopGameScore[];\n  values: Dice[];\n}\n\nconst BottomTable: React.FC<BottomTableProps> = (props: BottomTableProps) => {\n  const getDiceValue = (): number => {\n    const { values } = props;\n    return reduce(values, (sum, d) => sum + d, 0);\n  };\n\n  const showButton = (i: number): boolean => {\n    const { values } = props;\n    switch (i) {\n      case 0: // 3 of a kind\n        return hasXDice(values, 3);\n      case 1: // 4 of a kind\n        return hasXDice(values, 4);\n      case 2: // Full House\n        return isFullHouse(values);\n      case 3: // Sm. Straight\n        return isStraight(values, 4);\n      case 4: // Lg. Straight\n        return isStraight(values, 5);\n      case 5: // Yahtzee\n        return hasXDice(values, 5);\n      case 6: // Chance\n        return true;\n      default:\n        // eslint-disable-next-line no-console\n        console.error('Unexpected Value');\n        return false;\n    }\n  };\n\n  const getBottomTableButtons = (score: number, points: number, hasYahtzee: boolean, i: number): React.ReactNode | null => {\n    const { showScoreButtons, getScoreButton } = props;\n    if (score >= 0) {\n      return score;\n    }\n    if (showScoreButtons) {\n      // Yahtzee Bonus\n      if (hasYahtzee) {\n        const { values, top } = props;\n        if (canYahtzeeBonus(values, top)) {\n          return getScoreButton(true, points + 100, false, i);\n        }\n      }\n      return getScoreButton(showButton(i), points, false, i);\n    }\n    return null;\n  };\n\n  const generateBottomTable = (): React.ReactNode => {\n    const { bottom, style } = props;\n    const hasYahtzee = bottom[5].score > 0;\n    return map(bottom, (gameScore, i) => {\n      const {\n        name, hint, points, score,\n      } = gameScore;\n\n      const parsedPoints = (points === ADD_DICE) ? getDiceValue() : points;\n\n      return (\n        <TableRow key={name}>\n          <TableCell>{name}</TableCell>\n          <TableCell>{hint}</TableCell>\n          <TableCell style={style}>{getBottomTableButtons(score, parsedPoints, hasYahtzee, i)}</TableCell>\n        </TableRow>\n      );\n    });\n  };\n\n  const { style, finalTopSum, bottomSum } = props;\n\n  return (\n    <>\n      {generateBottomTable()}\n      <BottomScores bottomSum={bottomSum} finalTopSum={finalTopSum} style={style} />\n    </>\n  );\n};\n\nexport default BottomTable;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport { Dice, TopGameScore, BottomGameScore } from '../types';\nimport Header from './Header';\nimport TopTable from './TopTable';\nimport BottomTable from './BottomTable';\n\ninterface ScoreTableProps {\n  bottom: BottomGameScore[];\n  bottomSum: number;\n  finalTopSum: number;\n  onTopScore: Function;\n  onBottomScore: Function;\n  showScoreButtons: boolean;\n  top: TopGameScore[];\n  topSum: number;\n  values: Dice[];\n}\n\nconst centerStyle: React.CSSProperties = { textAlign: 'center' };\n\nconst ScoreTable: React.FC<ScoreTableProps> = (props: ScoreTableProps) => {\n  const getScoreButton = (showButton: boolean, points: number, top: boolean, i: number): React.ReactNode => {\n    // eslint-disable-next-line react/prop-types\n    const { onTopScore, onBottomScore } = props;\n    return showButton\n      ? (\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={top\n            ? (): void => onTopScore(points, i)\n            : (): void => onBottomScore(points, i)}\n        >\n          {`Add ${points} Points`}\n        </Button>\n      ) : (\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={top\n            ? (): void => onTopScore(0, i)\n            : (): void => onBottomScore(0, i)}\n        >\n          0\n        </Button>\n      );\n  };\n\n  const {\n    bottom, bottomSum, finalTopSum, showScoreButtons,\n    top, topSum, values,\n  } = props;\n\n  return (\n    <Table size=\"small\">\n      <Header style={centerStyle} />\n      <TableBody>\n        <TopTable\n          finalTopSum={finalTopSum}\n          getScoreButton={getScoreButton}\n          showScoreButtons={showScoreButtons}\n          style={centerStyle}\n          top={top}\n          values={values}\n          topSum={topSum}\n        />\n        <BottomTable\n          finalTopSum={finalTopSum}\n          getScoreButton={getScoreButton}\n          showScoreButtons={showScoreButtons}\n          style={centerStyle}\n          top={top}\n          values={values}\n          bottom={bottom}\n          bottomSum={bottomSum}\n        />\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default ScoreTable;\n","import React from 'react';\nimport get from 'lodash/get';\nimport maxBy from 'lodash/maxBy';\nimport {\n  ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area,\n} from 'recharts';\nimport { withTheme } from '@material-ui/core/styles';\nimport { Typography, Theme } from '@material-ui/core';\nimport InfoPopup from '../../common/InfoPopup';\nimport { Scores } from './types';\n\ninterface ScoreGraphProps {\n  scores: Scores;\n  theme: Theme;\n}\ninterface ScoreGraphEntry {\n  // TODO: See if we can remove score from here\n  score: number;\n  value: number;\n}\ninterface ScoreGraphState {\n  scores: ScoreGraphEntry[];\n}\n\nconst generateScoreGraph = (scores: number[]): ScoreGraphState => ({\n  scores: scores.map((score) => ({ score, value: score })),\n});\n\nclass ScoreGraph extends React.Component<ScoreGraphProps, ScoreGraphState> {\n  constructor(props: ScoreGraphProps) {\n    super(props);\n    this.state = generateScoreGraph(props.scores);\n  }\n\n  static getDerivedStateFromProps: React.GetDerivedStateFromProps<ScoreGraphProps, ScoreGraphState> = (props, state) => {\n    if (props.scores.length > state.scores.length) {\n      return generateScoreGraph(props.scores);\n    }\n    return null;\n  }\n\n  shouldComponentUpdate(nextProps: ScoreGraphProps): boolean {\n    const { scores } = this.props;\n    return nextProps.scores.length > scores.length;\n  }\n\n  render(): React.ReactNode {\n    const { theme: { palette: { secondary: { main }}}} = this.props;\n    const { scores } = this.state;\n\n    const mostRecent = get(scores, `[${scores.length - 1}].score`, 0);\n    const topScore = get(maxBy(scores, 'score'), 'score', 0);\n\n    return (\n      <InfoPopup title=\"Yahtzee Score History\" buttonText=\"Score History\">\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <AreaChart data={scores}>\n            <defs>\n              <linearGradient id=\"mainColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"20%\" stopColor={main} stopOpacity={0.8} />\n                <stop offset=\"100%\" stopColor={main} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n            <YAxis width={40} orientation=\"right\" tickLine={false} />\n            <Tooltip />\n            <Area type=\"monotone\" dataKey=\"score\" stroke={main} fillOpacity={1} fill=\"url(#mainColor)\" />\n          </AreaChart>\n        </ResponsiveContainer>\n        <Typography variant=\"h4\">{`Most Recent: ${mostRecent}`}</Typography>\n        <Typography variant=\"h4\">{`Top Score: ${topScore}`}</Typography>\n      </InfoPopup>\n    );\n  }\n}\n\nexport default withTheme(ScoreGraph);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport ScoreGraph from './ScoreGraph';\nimport { Scores } from './types';\n\ninterface HeaderProps {\n  scores: Scores;\n}\n\nconst Header: React.FC<HeaderProps> = (props: HeaderProps) => {\n  const { scores } = props;\n\n  return (\n    <div className=\"flex-container\">\n      <Typography variant=\"h2\">Yahtzee</Typography>\n      <ScoreGraph scores={scores} />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport map from 'lodash/map';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Dice } from './types';\n\ninterface TableHeaderProps {\n  roll: Dice;\n  values: Dice[];\n  saved: Dice[];\n  handleUnsave: Function;\n  handleSave: Function;\n  handleDiceRoll: React.MouseEventHandler;\n  getButtonText: Function;\n}\n\nconst wrapperStyles: React.CSSProperties = { display: 'block', margin: 'auto', width: 320 };\n\nconst TableHeader: React.FC<TableHeaderProps> = (props: TableHeaderProps) => {\n  const {\n    values, saved, roll, handleUnsave,\n    handleSave, handleDiceRoll, getButtonText,\n  } = props;\n\n  return (\n    <div className=\"flex-container\">\n      <Typography variant=\"h4\">{`Roll #${roll}/3`}</Typography>\n      <div style={wrapperStyles}>\n        {map(saved, (val, i) => (\n          <Button color=\"secondary\" onClick={(): void => handleUnsave(i)} variant=\"outlined\" key={i}>\n            {val}\n          </Button>\n        ))}\n        {map(values, (val, i) => (\n          <Button color=\"primary\" onClick={(): void => handleSave(i)} variant=\"outlined\" key={i}>\n            {val}\n          </Button>\n        ))}\n      </div>\n      <Button color=\"primary\" onClick={handleDiceRoll} variant=\"contained\">\n        {getButtonText(roll)}\n      </Button>\n    </div>\n  );\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport reduce from 'lodash/reduce';\nimport Typography from '@material-ui/core/Typography';\nimport DiceAPI from '../../../apis/Dice';\nimport ScoreTable from './score-table/ScoreTable';\nimport {\n  ADD_DICE, Scores, TopGameScore, BottomGameScore,\n  Dice,\n} from './types';\nimport { addScore } from '../../../store/modules/yahtzee';\nimport Header from './Header';\nimport TableHeader from './TableHeader';\nimport { DBRootState } from '../../../store/types';\n\ninterface YahtzeeActions {\n  addScore: Function;\n}\ninterface YahtzeeProps {\n  actions: YahtzeeActions;\n  scores: Scores;\n}\ninterface YahtzeeState {\n  roll: Dice;\n  values: Dice[];\n  saved: Dice[];\n  turn: number;\n  topSum: number;\n  finalTopSum: number;\n  bottomSum: number;\n  showScoreButtons: boolean;\n  hasScored: boolean;\n  finish: boolean;\n  top: TopGameScore[];\n  bottom: BottomGameScore[];\n}\n\nconst getInitialState = (): YahtzeeState => ({\n  roll: 0,\n  values: [0, 0, 0, 0, 0],\n  saved: [],\n  turn: 0,\n  topSum: 0,\n  finalTopSum: 0,\n  bottomSum: 0,\n  showScoreButtons: false,\n  hasScored: false,\n  finish: false,\n  top: [\n    { name: 'Aces', score: -1 },\n    { name: 'Twos', score: -1 },\n    { name: 'Threes', score: -1 },\n    { name: 'Fours', score: -1 },\n    { name: 'Fives', score: -1 },\n    { name: 'Sixes', score: -1 },\n  ],\n  bottom: [{\n    name: '3 of a kind', hint: ADD_DICE, points: ADD_DICE, score: -1,\n  }, {\n    name: '4 of a kind', hint: ADD_DICE, points: ADD_DICE, score: -1,\n  }, {\n    name: 'Full House', hint: 'Score 25', points: 25, score: -1,\n  }, {\n    name: 'Sm. Straight (4)', hint: 'Score 30', points: 30, score: -1,\n  }, {\n    name: 'Lg. Straight (5)', hint: 'Score 40', points: 40, score: -1,\n  }, {\n    name: 'Yahtzee', hint: 'Score 50', points: 50, score: -1,\n  }, {\n    name: 'Chance', hint: ADD_DICE, points: ADD_DICE, score: -1,\n  }],\n});\n\n/* --------------------------------------------------\n* Home\n* -------------------------------------------------- */\nclass Yahtzee extends React.Component<YahtzeeProps, YahtzeeState> {\n  static getDerivedStateFromProps: React.GetDerivedStateFromProps<YahtzeeProps, YahtzeeState> = (_props, state) => {\n    let { finalTopSum } = state;\n    const { top, bottom } = state;\n    let count = 0;\n\n    const topSum = reduce(top, (sum, { score }) => {\n      if (score >= 0) {\n        count += 1;\n        sum += score;\n        if (sum >= 63) {\n          finalTopSum = sum + 35;\n        } else {\n          finalTopSum = sum;\n        }\n      }\n      return sum;\n    }, 0);\n\n    const bottomSum = reduce(bottom, (sum, { score }) => {\n      if (score >= 0) {\n        count += 1;\n        sum += score;\n      }\n      return sum;\n    }, 0);\n\n    if (count >= 13) {\n      return { finish: true };\n    }\n    if (topSum !== state.topSum || bottomSum !== state.bottomSum) {\n      return { topSum, finalTopSum, bottomSum };\n    }\n    return null;\n  }\n\n  constructor(props: YahtzeeProps) {\n    super(props);\n    this.state = getInitialState();\n  }\n\n  newGame = (): void => {\n    const { actions } = this.props;\n    const { finalTopSum, bottomSum } = this.state;\n    actions.addScore(finalTopSum + bottomSum);\n    this.setState(getInitialState());\n  }\n\n  handleDiceRoll = (): void => {\n    const { roll, hasScored, finish } = this.state;\n\n    if (finish) {\n      this.newGame();\n    }\n    if (roll >= 3 && hasScored === false) {\n      return;\n    }\n    if (roll >= 3 && hasScored === true) {\n      this.setState({\n        roll: 0,\n        values: [0, 0, 0, 0, 0],\n        saved: [],\n        hasScored: false,\n      });\n      return;\n    }\n\n    const { values, saved } = this.state;\n\n    for (let i = 0; i < values.length; i += 1) {\n      values[i] = DiceAPI.roll() as Dice;\n    }\n    values.sort();\n    saved.sort();\n\n    if (roll === 2) {\n      this.setState({\n        showScoreButtons: true, values, saved, roll: roll + 1 as Dice,\n      });\n    } else {\n      this.setState({ values, saved, roll: roll + 1 as Dice });\n    }\n  }\n\n  handleSave = (i: number): void => {\n    const { saved, values } = this.state;\n    if (values[i] === 0) {\n      return;\n    }\n    saved.push(values.splice(i, 1)[0]);\n    saved.sort();\n    this.setState({ saved });\n  }\n\n  handleUnsave = (i: number): void => {\n    const { saved, values } = this.state;\n    values.push(saved.splice(i, 1)[0]);\n    values.sort();\n    this.setState({ values });\n  }\n\n  getButtonText = (roll: Dice): string => {\n    const { finish } = this.state;\n    if (finish) {\n      return 'New Game';\n    }\n\n    switch (roll) {\n      case 0:\n        return 'First Roll';\n      case 1:\n        return 'Second Roll';\n      case 2:\n        return 'Last Roll';\n      case 3:\n        return 'Next Turn';\n      default:\n        return 'Error';\n    }\n  }\n\n  handleTopScore = (points: number, i: number): void => {\n    const { top } = this.state;\n    top[i].score = points;\n    this.setState({ top, hasScored: true, showScoreButtons: false });\n  }\n\n  handleBottomScore = (points: number, i: number): void => {\n    const { bottom } = this.state;\n    bottom[i].score = points;\n    this.setState({ bottom, hasScored: true, showScoreButtons: false });\n  }\n\n  render(): React.ReactNode {\n    const {\n      values, saved, roll, top, showScoreButtons, bottom, topSum, finalTopSum, bottomSum,\n    } = this.state;\n    const { scores } = this.props;\n\n    return (\n      <>\n        <Header scores={scores} />\n        <hr />\n        <TableHeader\n          values={values}\n          saved={saved}\n          roll={roll}\n          handleUnsave={this.handleUnsave}\n          handleSave={this.handleSave}\n          handleDiceRoll={this.handleDiceRoll}\n          getButtonText={this.getButtonText}\n        />\n        <hr />\n        <Typography variant=\"h4\">{`Total: ${finalTopSum + bottomSum}`}</Typography>\n        <ScoreTable\n          values={[...saved, ...values]}\n          bottom={bottom}\n          top={top}\n          onTopScore={this.handleTopScore}\n          onBottomScore={this.handleBottomScore}\n          showScoreButtons={showScoreButtons}\n          topSum={topSum}\n          finalTopSum={finalTopSum}\n          bottomSum={bottomSum}\n        />\n      </>\n    );\n  }\n}\n\n// react-redux export\nconst mapStateToProps = (state: DBRootState): { scores: Scores } => ({ scores: state.yahtzee });\nconst mapDispatchToProps = (dispatch: Dispatch): { actions: YahtzeeActions } => ({\n  actions: bindActionCreators({ addScore }, dispatch),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Yahtzee);\n","import Yahtzee from './Yahtzee';\n\nexport default Yahtzee;\n"],"sourceRoot":""}