{"version":3,"sources":["../node_modules/lodash/forEach.js","../node_modules/lodash/_castFunction.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/isString.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseIndexOf.js","components/common/InfoPopup.jsx","../node_modules/lodash/maxBy.js","apis/Dice.js","components/games/yahtzee/yahtzeeHelper.js","components/games/yahtzee/ScoreTable.jsx","components/games/yahtzee/ScoreGraph.jsx","components/games/yahtzee/Yahtzee.jsx","components/games/yahtzee/index.js"],"names":["arrayEach","baseEach","castFunction","isArray","module","exports","collection","iteratee","identity","value","array","fromIndex","index","length","baseGetTag","isObjectLike","stringTag","baseFindIndex","baseIsNaN","strictIndexOf","InfoPopup","props","useState","isOpen","setIsOpen","buttonText","title","children","color","onClick","variant","onClose","open","maxWidth","fullWidth","baseExtremum","baseGt","baseIteratee","undefined","roll","Math","floor","random","hasXDice","n","hist","val","getHistogram","isFullHouse","histogram","has3","has2","forEach","isStraight","count","i","ADD_DICE","centerStyle","textAlign","ScoreTable","getButtonInfo","d","values","reduce","getScoreButton","showButton","points","top","onTopScore","onBottomScore","Button","getTopTableButtons","score","sum","showScoreButtons","generateTopTable","map","name","TableRow","key","TableCell","style","getDiceValue","console","error","getBottomTableButtons","hasYahtzee","acc","generateBottomTable","bottom","hint","this","topSum","finalTopSum","bottomSum","Table","size","TableHead","TableBody","colSpan","Component","withTheme","scores","main","theme","palette","secondary","mostRecent","get","topScore","maxBy","width","height","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","interval","orientation","tickLine","type","stroke","fillOpacity","fill","Typography","getInitialState","saved","turn","hasScored","finish","Yahtzee","newGame","actions","state","addScore","setState","handleDiceRoll","Dice","sort","handleSave","push","splice","handleUnsave","getButtonText","handleTopScore","handleBottomScore","nextProps","prevState","className","display","margin","connect","yahtzee","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/g_yahtzee.5d2ec78b.chunk.js","sourcesContent":["var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\n\n\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;","var identity = require('./identity');\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\n\n\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = strictIndexOf;","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar stringTag = '[object String]';\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\n\nfunction isString(value) {\n  return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;\n}\n\nmodule.exports = isString;","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n\n  return array;\n}\n\nmodule.exports = arrayEach;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;","import React, { useState, Fragment } from 'react';\nimport types from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n// Parents: Board\n\n/* ========================================\n * Popup\n * ======================================== */\nconst InfoPopup = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { buttonText, title, children } = props;\n  return (\n    <Fragment>\n      <Button color=\"primary\" onClick={() => { setIsOpen(true); }} variant=\"contained\">\n        {buttonText || title}\n      </Button>\n      <Dialog onClose={() => { setIsOpen(false); }} open={isOpen} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={() => { setIsOpen(false); }}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n};\n\nInfoPopup.propTypes = {\n  children: types.oneOfType([types.arrayOf(types.node), types.node]).isRequired,\n  title: types.oneOfType([types.string, types.element]).isRequired,\n  buttonText: types.oneOfType([types.string, types.element]),\n};\n\nexport default InfoPopup;\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\n\n\nfunction maxBy(array, iteratee) {\n  return array && array.length ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt) : undefined;\n}\n\nmodule.exports = maxBy;","export default {\n  // randomize order of the cards\n  roll() {\n    return Math.floor(Math.random() * 6) + 1;\n  },\n};\n\n// Dice as a react hook, seems kind of like an anti-pattern\nexport function useDice() {\n  function rollDice() {\n    return Math.floor(Math.random() * 6) + 1;\n  }\n\n  return rollDice;\n}\n","import forEach from 'lodash/forEach';\n\nexport const hasXDice = (n) => (hist, val) => {\n  if (hist === true) {\n    return true;\n  }\n  if (!hist[val]) {\n    hist[val] = 1;\n  } else {\n    hist[val] += 1;\n    if (hist[val] >= n) {\n      return true;\n    }\n  }\n  return hist;\n};\n\nexport const getHistogram = () => (hist, val) => {\n  if (hist === true) {\n    return true;\n  }\n  if (!hist[val]) {\n    hist[val] = 1;\n  } else {\n    hist[val] += 1;\n  }\n  return hist;\n};\n\nexport const isFullHouse = (histogram) => {\n  let has3 = false;\n  let has2 = false;\n\n  forEach(histogram, (value) => {\n    if (value >= 3) {\n      has3 = true;\n    } else if (value >= 2) {\n      has2 = true;\n    }\n  });\n\n  return has3 && has2;\n};\n\nexport const isStraight = (histogram, length) => {\n  let count = 0;\n  forEach(['1', '2', '3', '4', '5', '6'], (i) => {\n    if (count < length) {\n      const value = histogram[i];\n      if (!value) {\n        count = 0;\n      } else {\n        count += 1;\n      }\n    }\n  });\n  return count >= length;\n};\n","import React, { Component } from 'react';\nimport types from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport map from 'lodash/map';\nimport reduce from 'lodash/reduce';\nimport {\n  hasXDice, getHistogram, isFullHouse, isStraight,\n} from './yahtzeeHelper';\n// Parents: Popup\n\nexport const ADD_DICE = 'Sum of Dice';\nconst centerStyle = { textAlign: 'center' };\nclass ScoreTable extends Component {\n  getButtonInfo = (d) => {\n    const { values } = this.props;\n    return reduce(values, (count, val) => {\n      if (val === d) {\n        count[0] += 1;\n        count[1] += d;\n      }\n      return count;\n    }, [0, 0]);\n  }\n\n  getScoreButton = (showButton, points, top, i) => {\n    const { onTopScore, onBottomScore } = this.props;\n    return showButton\n      ? (\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={top\n            ? () => onTopScore(points, i)\n            : () => onBottomScore(points, i)}\n        >\n          {`Add ${points} Points`}\n        </Button>\n      ) : (\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={top\n            ? () => onTopScore(0, i)\n            : () => onBottomScore(0, i)}\n        >\n          0\n        </Button>\n      );\n  }\n\n  getTopTableButtons = (score, showButton, sum, i) => {\n    const { showScoreButtons } = this.props;\n    if (score >= 0) {\n      return score;\n    }\n    return showScoreButtons ? this.getScoreButton(showButton, sum, true, i) : null;\n  }\n\n  generateTopTable = () => {\n    const { top } = this.props;\n    return map(top, ({ name, score }, i) => {\n      const d = i + 1;\n      const [count, sum] = this.getButtonInfo(i + 1);\n      const showButton = count >= 1;\n\n      return (\n        <TableRow key={name}>\n          <TableCell>{`${name}: ${d},${d},${d} = ${d * 3}`}</TableCell>\n          <TableCell>{`Add Only ${name}`}</TableCell>\n          <TableCell style={centerStyle}>{this.getTopTableButtons(score, showButton, sum, i)}</TableCell>\n        </TableRow>\n      );\n    });\n  }\n\n  getDiceValue = () => {\n    const { values } = this.props;\n    return reduce(values, (sum, d) => sum + d, 0);\n  }\n\n  showButton = (i) => {\n    const { values } = this.props;\n    switch (i) {\n      case 0: // 3 of a kind\n        return reduce(values, hasXDice(3), {}) === true;\n      case 1: // 4 of a kind\n        return reduce(values, hasXDice(4), {}) === true;\n      case 2: // Full House\n        return isFullHouse(reduce(values, getHistogram(), {}));\n      case 3: // Sm. Straight\n        return isStraight(reduce(values, getHistogram(), {}), 4);\n      case 4: // Lg. Straight\n        return isStraight(reduce(values, getHistogram(), {}), 5);\n      case 5: // Yahtzee\n        return reduce(values, hasXDice(5), {}) === true;\n      case 6: // Chance\n        return true;\n      default:\n        // eslint-disable-next-line no-console\n        console.error('Unexpected Value');\n        return false;\n    }\n  }\n\n  getBottomTableButtons = (score, points, hasYahtzee, i) => {\n    const { showScoreButtons } = this.props;\n    if (score >= 0) {\n      return score;\n    }\n    if (showScoreButtons) {\n      // Yahtzee Bonus\n      if (hasYahtzee) {\n        const { values, top } = this.props;\n        const canYahtzeeBonus = reduce(\n          reduce(values, getHistogram(), {}),\n          (acc, value, key) => {\n            if (value === 5 && top[key - 1].score >= 0) {\n              return true;\n            }\n            return acc;\n          },\n          false,\n        );\n        if (canYahtzeeBonus) {\n          return this.getScoreButton(true, points + 100, false, i);\n        }\n      }\n      return this.getScoreButton(this.showButton(i), points, false, i);\n    }\n    return null;\n  }\n\n  generateBottomTable = () => {\n    const { bottom } = this.props;\n    const hasYahtzee = bottom[5].score > 0;\n    return map(bottom, ({\n      name, hint, points, score,\n    }, i) => {\n      if (points === ADD_DICE) {\n        points = this.getDiceValue();\n      }\n\n      return (\n        <TableRow key={name}>\n          <TableCell>{name}</TableCell>\n          <TableCell>{hint}</TableCell>\n          <TableCell style={centerStyle}>{this.getBottomTableButtons(score, points, hasYahtzee, i)}</TableCell>\n        </TableRow>\n      );\n    });\n  }\n\n  render() {\n    const { topSum, finalTopSum, bottomSum } = this.props;\n\n    return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Minimum Required for Bonus</TableCell>\n            <TableCell>How to Score</TableCell>\n            <TableCell style={centerStyle}>Game Score</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.generateTopTable()}\n          <TableRow>\n            <TableCell colSpan={2}>Total == 63</TableCell>\n            <TableCell style={centerStyle}>{topSum}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Bonus if &gt;= 63</TableCell>\n            <TableCell>Score 35</TableCell>\n            <TableCell style={centerStyle}>{topSum >= 63 ? 35 : 0}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={2}>Upper Half Total</TableCell>\n            <TableCell style={centerStyle}>{finalTopSum}</TableCell>\n          </TableRow>\n          <TableRow />\n          {this.generateBottomTable()}\n          <TableRow>\n            <TableCell colSpan={2}>Lower Half Total</TableCell>\n            <TableCell style={centerStyle}>{bottomSum}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={2}>Upper Half Total</TableCell>\n            <TableCell style={centerStyle}>{finalTopSum}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={2}>Grand Total</TableCell>\n            <TableCell style={centerStyle}>{finalTopSum + bottomSum}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nScoreTable.propTypes = {\n  values: types.arrayOf(types.number.isRequired).isRequired,\n  top: types.arrayOf(types.shape({\n    name: types.string.isRequired,\n    score: types.number.isRequired,\n  })),\n  bottom: types.arrayOf(types.shape({\n    name: types.string.isRequired,\n    score: types.number.isRequired,\n  })),\n  onTopScore: types.func.isRequired,\n  onBottomScore: types.func.isRequired,\n  showScoreButtons: types.bool.isRequired,\n  topSum: types.number.isRequired,\n  finalTopSum: types.number.isRequired,\n  bottomSum: types.number.isRequired,\n};\n\nexport default ScoreTable;\n","import React from 'react';\nimport types from 'prop-types';\nimport maxBy from 'lodash/maxBy';\nimport get from 'lodash/get';\nimport {\n  ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area,\n} from 'recharts';\nimport { withTheme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport InfoPopup from '../../common/InfoPopup';\n// Parents: Main\n\nconst ScoreGraph = (props) => {\n  const { scores, theme: { palette: { secondary: { main }}}} = props;\n  const mostRecent = get(scores, `[${scores.length - 1}].score`, 0);\n  const topScore = scores.length > 0 ? maxBy(scores, 'score').score : 0;\n  return (\n    <InfoPopup title=\"Yahtzee Score History\" buttonText=\"Score History\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <AreaChart data={scores}>\n          <defs>\n            <linearGradient id=\"mainColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"20%\" stopColor={main} stopOpacity={0.8} />\n              <stop offset=\"100%\" stopColor={main} stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n          <YAxis width={40} orientation=\"right\" tickLine={false} />\n          <Tooltip />\n          <Area type=\"monotone\" dataKey=\"score\" stroke={main} fillOpacity={1} fill=\"url(#mainColor)\" />\n        </AreaChart>\n      </ResponsiveContainer>\n      <Typography variant=\"h4\">{`Most Recent: ${mostRecent}`}</Typography>\n      <Typography variant=\"h4\">{`Top Score: ${topScore}`}</Typography>\n    </InfoPopup>\n  );\n};\n\nScoreGraph.propTypes = {\n  scores: types.arrayOf(\n    types.shape({\n      score: types.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  theme: types.shape({\n    palette: types.shape({\n      secondary: types.shape({\n        main: types.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }),\n};\n\nexport default withTheme(ScoreGraph);\n","import React, { Component, Fragment } from 'react';\nimport types from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport reduce from 'lodash/reduce';\nimport map from 'lodash/map';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dice from '../../../apis/Dice';\nimport ScoreTable, { ADD_DICE } from './ScoreTable';\nimport ScoreGraph from './ScoreGraph';\nimport { addScore } from '../../../store/modules/yahtzee';\n// Parents: Main\n\nconst getInitialState = () => ({\n  roll: 0,\n  values: [0, 0, 0, 0, 0],\n  saved: [],\n  turn: 0,\n  topSum: 0,\n  finalTopSum: 0,\n  bottomSum: 0,\n  showScoreButtons: false,\n  hasScored: false,\n  finish: false,\n  top: [\n    { name: 'Aces', score: -1 },\n    { name: 'Twos', score: -1 },\n    { name: 'Threes', score: -1 },\n    { name: 'Fours', score: -1 },\n    { name: 'Fives', score: -1 },\n    { name: 'Sixes', score: -1 },\n  ],\n  bottom: [\n    {\n      name: '3 of a kind', hint: ADD_DICE, points: ADD_DICE, score: -1,\n    },\n    {\n      name: '4 of a kind', hint: ADD_DICE, points: ADD_DICE, score: -1,\n    },\n    {\n      name: 'Full House', hint: 'Score 25', points: 25, score: -1,\n    },\n    {\n      name: 'Sm. Straight (4)', hint: 'Score 30', points: 30, score: -1,\n    },\n    {\n      name: 'Lg. Straight (5)', hint: 'Score 40', points: 40, score: -1,\n    },\n    {\n      name: 'Yahtzee', hint: 'Score 50', points: 50, score: -1,\n    },\n    {\n      name: 'Chance', hint: ADD_DICE, points: ADD_DICE, score: -1,\n    },\n  ],\n});\n\n/* --------------------------------------------------\n* Home\n* -------------------------------------------------- */\nclass Yahtzee extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let { finalTopSum } = prevState;\n    const { top, bottom } = prevState;\n    let count = 0;\n\n    const topSum = reduce(top, (sum, { score }) => {\n      if (score >= 0) {\n        count += 1;\n        sum += score;\n        if (sum >= 63) {\n          finalTopSum = sum + 35;\n        } else {\n          finalTopSum = sum;\n        }\n      }\n      return sum;\n    }, 0);\n\n    const bottomSum = reduce(bottom, (sum, { score }) => {\n      if (score >= 0) {\n        count += 1;\n        sum += score;\n      }\n      return sum;\n    }, 0);\n\n    if (count >= 13) {\n      return { finish: true };\n    }\n    if (topSum !== prevState.topSum || bottomSum !== prevState.bottomSum) {\n      return { topSum, finalTopSum, bottomSum };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = getInitialState();\n  }\n\n  newGame = () => {\n    const { actions } = this.props;\n    const { finalTopSum, bottomSum } = this.state;\n    actions.addScore(finalTopSum + bottomSum);\n    this.setState(getInitialState());\n  }\n\n  handleDiceRoll = () => {\n    const { roll, hasScored, finish } = this.state;\n\n    if (finish) {\n      this.newGame();\n    }\n\n    if (roll >= 3 && hasScored === false) {\n      return;\n    }\n    if (roll >= 3 && hasScored === true) {\n      this.setState({\n        roll: 0,\n        values: [0, 0, 0, 0, 0],\n        saved: [],\n        hasScored: false,\n      });\n      return;\n    }\n\n    const { values, saved } = this.state;\n\n    for (let i = 0; i < values.length; i += 1) {\n      values[i] = Dice.roll();\n    }\n    values.sort();\n    saved.sort();\n\n    if (roll === 2) {\n      this.setState({\n        showScoreButtons: true, values, saved, roll: roll + 1,\n      });\n    } else {\n      this.setState({ values, saved, roll: roll + 1 });\n    }\n  }\n\n  handleSave = (i) => {\n    const { saved, values } = this.state;\n    if (values[i] === 0) {\n      return;\n    }\n    saved.push(values.splice(i, 1)[0]);\n    saved.sort();\n    this.setState({ saved });\n  }\n\n  handleUnsave = (i) => {\n    const { saved, values } = this.state;\n    values.push(saved.splice(i, 1)[0]);\n    values.sort();\n    this.setState({ values });\n  }\n\n  getButtonText = (roll) => {\n    const { finish } = this.state;\n    if (finish) {\n      return 'New Game';\n    }\n\n    switch (roll) {\n      case 0:\n        return 'First Roll';\n      case 1:\n        return 'Second Roll';\n      case 2:\n        return 'Last Roll';\n      case 3:\n        return 'Next Turn';\n      default:\n        return 'Error';\n    }\n  }\n\n  handleTopScore = (points, i) => {\n    const { top } = this.state;\n    top[i].score = points;\n    this.setState({ top, hasScored: true, showScoreButtons: false });\n  }\n\n  handleBottomScore = (points, i) => {\n    const { bottom } = this.state;\n    bottom[i].score = points;\n    this.setState({ bottom, hasScored: true, showScoreButtons: false });\n  }\n\n  render() {\n    const {\n      values, saved, roll, top, showScoreButtons, bottom, topSum, finalTopSum, bottomSum,\n    } = this.state;\n    const { scores } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"flex-container\">\n          <Typography variant=\"h2\">Yahtzee</Typography>\n          <ScoreGraph scores={scores} />\n        </div>\n        <hr />\n        <div className=\"flex-container\">\n          <Typography variant=\"h4\">{`Roll #${roll}/3`}</Typography>\n          <div style={{ display: 'block', margin: 'auto', width: 320 }}>\n            {map(saved, (val, i) => (\n              <Button color=\"secondary\" onClick={() => this.handleUnsave(i)} variant=\"outlined\" key={i}>\n                {val}\n              </Button>\n            ))}\n            {map(values, (val, i) => (\n              <Button color=\"primary\" onClick={() => this.handleSave(i)} variant=\"outlined\" key={i}>\n                {val}\n              </Button>\n            ))}\n          </div>\n          <Button color=\"primary\" onClick={this.handleDiceRoll} variant=\"contained\">\n            {this.getButtonText(roll)}\n          </Button>\n        </div>\n        <hr />\n        <Typography variant=\"h4\">{`Total: ${finalTopSum + bottomSum}`}</Typography>\n        <ScoreTable\n          values={[...saved, ...values]}\n          bottom={bottom}\n          top={top}\n          onTopScore={this.handleTopScore}\n          onBottomScore={this.handleBottomScore}\n          showScoreButtons={showScoreButtons}\n          topSum={topSum}\n          finalTopSum={finalTopSum}\n          bottomSum={bottomSum}\n        />\n      </Fragment>\n    );\n  }\n}\n\nYahtzee.propTypes = {\n  actions: types.shape({\n    addScore: types.func.isRequired,\n  }).isRequired,\n  scores: types.arrayOf(\n    types.shape({\n      score: types.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\n// react-redux export\nconst mapStateToProps = (state) => ({ scores: state.yahtzee });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators({ addScore }, dispatch),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Yahtzee);\n","import Yahtzee from './Yahtzee';\n\nexport default Yahtzee;\n"],"sourceRoot":""}