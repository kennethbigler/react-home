{"version":3,"sources":["components/resume/poker/PokerGraph.jsx","components/resume/poker/PokerTable.jsx","components/resume/poker/helpers.js","constants/poker.js","components/resume/poker/PennyPokerNight.jsx","components/resume/poker/GigNowPokerNight.jsx","components/resume/poker/PokerNightTabs.jsx","components/resume/poker/index.js"],"names":["PokerNight","props","parsedScores","colors","domain","ticks","react_default","a","createElement","es6","width","height","data","map","color","key","type","dataKey","stroke","connectNulls","interval","orientation","tickLine","itemSorter","value","styles","cell","paddingRight","whiteSpace","row","borderTop","PokerTable","totals","tableRows","chunk","sortBy","val","Table","TableHead","TableRow","TableCell","colSpan","i","TableBody","style","obj","parseData","scores","week","reduce","acc","hasIn","pennyPokerScores","name","Ken","Lauren","Aaron","Winston","Jordan","Landon","Lily","Keishi","Andy","Mike","Tom","Meeks","Sam","Gus","Ashley","Geoff","Ming","Zach","Scott","pennyPokerColors","amber","blue","blueGrey","brown","cyan","deepOrange","deepPurple","green","indigo","lightBlue","lightGreen","lime","orange","pink","purple","red","teal","yellow","grey","Emily","gigNowPokerScores","Sabik","Avi","Seb","Jonathan","Brady","Michael A","Carlos","Matt","Dhruven","Dharam","Kaustubh","Patrick","gigNowPokerColors","zeroOutPreviousWeek","unshift","_loop","thisWeek","lastWeek","forOwn","length","PennyPokerNight","memo","_parseData","PokerGraph","poker_PokerTable","PokerNightTabs","_useState","useState","_useState2","Object","slicedToArray","tab","setTab","AppBar","position","marginBottom","marginTop","Tabs","onChange","event","Tab","label","poker_PennyPokerNight","GigNowPokerNight"],"mappings":"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","file":"static/js/37.8209b64e.chunk.js","sourcesContent":["import React from 'react';\nimport types from 'prop-types';\nimport {\n  ResponsiveContainer, LineChart, Line, XAxis, YAxis, Tooltip,\n} from 'recharts';\nimport map from 'lodash/map';\n\nconst PokerNight = (props) => {\n  const {\n    parsedScores, colors, domain, ticks,\n  } = props;\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={650}>\n      <LineChart data={parsedScores}>\n        {map(colors, (color, key) => (\n          <Line\n            type=\"monotone\"\n            dataKey={key}\n            key={key}\n            stroke={color}\n            connectNulls\n          />\n        ))}\n        <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n        <YAxis\n          domain={domain}\n          width={40}\n          orientation=\"right\"\n          tickLine={false}\n          ticks={ticks && ticks}\n        />\n        <Tooltip itemSorter={a => -a.value} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nPokerNight.propTypes = {\n  parsedScores: types.arrayOf(types.objectOf(types.oneOfType([types.string, types.number]))).isRequired,\n  colors: types.objectOf(types.string).isRequired,\n  domain: types.arrayOf(types.number).isRequired,\n  ticks: types.arrayOf(types.number),\n};\n\nexport default PokerNight;\n","import React from 'react';\nimport types from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport map from 'lodash/map';\nimport chunk from 'lodash/chunk';\nimport sortBy from 'lodash/sortBy';\n\nconst styles = {\n  cell: {\n    paddingRight: 5,\n    whiteSpace: 'nowrap',\n  },\n  row: {\n    borderTop: '2px solid',\n  },\n};\n\nconst PokerTable = (props) => {\n  const { totals } = props;\n  const tableRows = chunk(\n    sortBy(\n      map(totals, (val, key) => ({ key, val })),\n      ['val'],\n    ),\n    4,\n  );\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell colSpan=\"3\">Totals</TableCell>\n        </TableRow>\n      </TableHead>\n      {map(tableRows, (row, i) => (\n        <TableBody key={i} style={styles.row}>\n          <TableRow>\n            {map(row, obj => (\n              <TableCell key={obj.key} style={styles.cell}>{obj.key}</TableCell>\n            ))}\n          </TableRow>\n          <TableRow>\n            {map(row, obj => (\n              <TableCell key={obj.key} style={styles.cell}>{obj.val}</TableCell>\n            ))}\n          </TableRow>\n        </TableBody>\n      ))}\n    </Table>\n  );\n};\n\nPokerTable.propTypes = {\n  totals: types.objectOf(types.number).isRequired,\n};\n\nexport default PokerTable;\n","import reduce from 'lodash/reduce';\nimport hasIn from 'lodash/hasIn';\nimport map from 'lodash/map';\n\n/**\n * Helper function that takes an array and changes scores to be\n * the sums for a player, rather than just the single night\n *\n * @param {Array} scores - array of objects containing a night's results\n * @returns {Object} totals for all of the players\n */\nconst parseData = (scores) => {\n  const totals = {};\n\n  // iterate over all the scores\n  const parsedScores = map(scores, (week) => {\n    // iterate over the players in a week\n    const parsedWeek = reduce(week, (acc, val, key) => {\n      if (hasIn(totals, key) && key !== 'name') {\n        // update total with value (if total exists)\n        totals[key] += val;\n        acc[key] = totals[key];\n      } else if (key !== 'name') {\n        // add value to totals obj (totals did not exist)\n        totals[key] = val;\n        acc[key] = totals[key];\n      } else {\n        // key == name\n        acc[key] = val;\n      }\n      return acc;\n    }, {});\n    return parsedWeek;\n  });\n\n  return { parsedScores, totals };\n};\n\nexport default parseData;\n","import {\n  amber, blue, blueGrey, brown, cyan, deepOrange, deepPurple, green, grey, indigo, lightBlue, lightGreen, lime, orange, pink, purple, red, teal, yellow,\n} from '@material-ui/core/colors/';\nimport forOwn from 'lodash/forOwn';\n\nexport const pennyPokerScores = [\n  {\n    name: 'Night 1',\n    Ken: 5,\n    Lauren: -83,\n    Aaron: -45,\n    Winston: -17,\n    Jordan: -25,\n    Landon: -27,\n    Lily: 3,\n    Keishi: 209,\n    Andy: -22,\n  }, {\n    name: 'Night 2',\n    Ken: -42,\n    Aaron: -1,\n    Jordan: 94,\n    Lily: -131,\n    Andy: -140,\n    Mike: 220,\n  }, {\n    name: 'Night 3',\n    Ken: -100,\n    Jordan: -24,\n    Lily: -45,\n    Tom: 39,\n    Meeks: 147,\n  }, {\n    name: 'Night 4',\n    Ken: 62,\n    Aaron: -33,\n    Jordan: 35,\n    Lily: 179,\n    Keishi: 15,\n    Mike: 220,\n    Tom: -100,\n    Sam: 17,\n    Gus: -14,\n    Ashley: -14,\n    Geoff: -100,\n    Ming: -100,\n  }, {\n    name: 'Night 5',\n    Ken: 218,\n    Lauren: -90,\n    Aaron: 60,\n    Jordan: 82,\n    Lily: -70,\n    Tom: -200,\n  }, {\n    name: 'Night 6',\n    Ken: -33,\n    Jordan: 46,\n    Lily: -98,\n    Keishi: -32,\n    Andy: 27,\n    Mike: 90,\n  }, {\n    name: 'Night 7',\n    Ken: 187,\n    Aaron: 14,\n    Jordan: -46,\n    Tom: -55,\n    Gus: -100,\n  }, {\n    name: 'Night 8',\n    Ken: 127,\n    Aaron: -40,\n    Jordan: 119,\n    Gus: 16,\n    Zach: -122,\n    Scott: -100,\n  }, {\n    name: 'Night 9',\n    Ken: 11,\n    Jordan: 17,\n    Andy: 30,\n    Gus: -58,\n  }, {\n    name: 'Night 10',\n    Ken: -23,\n    Lauren: 58,\n    Jordan: -20,\n    Landon: -100,\n    Lily: -100,\n    Andy: 240,\n    Tom: 9,\n  }, {\n    name: 'Night 11',\n    Ken: 42,\n    Aaron: -55,\n    Jordan: 0,\n    Tom: 38,\n    Gus: -25,\n  }, {\n    name: 'Night 12',\n    Ken: 57,\n    Aaron: 34,\n    Tom: 9,\n    Gus: -100,\n  },\n];\n\nexport const pennyPokerColors = {\n  Ken: amber[500],\n  Lauren: blue[500],\n  Aaron: blueGrey[500],\n  Winston: brown[500],\n  Jordan: cyan[500],\n  Landon: deepOrange[500],\n  Lily: deepPurple[500],\n  Keishi: green[500],\n  Andy: indigo[500],\n  Mike: lightBlue[500],\n  Tom: lightGreen[500],\n  Meeks: lime[500],\n  Sam: orange[500],\n  Gus: pink[500],\n  Ashley: purple[500],\n  Geoff: red[500],\n  Ming: teal[500],\n  Zach: yellow[500],\n  Scott: grey[500],\n  Emily: grey[900],\n};\n\nexport const gigNowPokerScores = [\n  {\n    name: 'Night 1',\n    Ken: 32.25,\n    Sabik: 35.25,\n    Avi: 15.50,\n    Seb: -23,\n    Jonathan: -20,\n    Mike: -20,\n    Brady: -20,\n  }, {\n    name: 'Night 2',\n    Jonathan: -20,\n    Seb: -40,\n    Sabik: -20,\n    Mike: 90,\n    Brady: -20,\n    'Michael A': 70,\n    Carlos: -20,\n    Matt: -20,\n    Dhruven: -20,\n  }, {\n    Jonathan: 71,\n    Dharam: 40,\n    Seb: 32,\n    Dhruven: 17,\n    Kaustubh: 0,\n    Brady: 0,\n    Matt: -20,\n    Ken: -40,\n    Patrick: -40,\n    Mike: -60,\n  },\n];\n\nexport const gigNowPokerColors = {\n  Ken: amber[500],\n  Jonathan: blue[500],\n  Seb: blueGrey[500],\n  Sabik: brown[500],\n  Avi: cyan[500],\n  Mike: deepOrange[500],\n  Brady: deepPurple[500],\n  'Michael A': green[500],\n  Carlos: indigo[500],\n  Matt: lightBlue[500],\n  Dhruven: lightGreen[500],\n  Dharam: lime[500],\n  Kaustubh: orange[500],\n  Patrick: pink[500],\n};\n\n/**\n * A function that creates an initial score entry of 0\n * for all participants, the week before they joined.\n *\n * @param {Array} scores - scores from every poker night\n */\nfunction zeroOutPreviousWeek(scores) {\n  scores.unshift({});\n\n  for (let i = 1; i < scores.length; i += 1) {\n    const thisWeek = scores[i];\n    const lastWeek = scores[i - 1];\n\n    forOwn(thisWeek, (value, key) => {\n      if (!lastWeek[key]) {\n        lastWeek[key] = 0;\n      }\n    });\n  }\n}\n\nzeroOutPreviousWeek(pennyPokerScores);\nzeroOutPreviousWeek(gigNowPokerScores);\n","import React, { memo } from 'react';\n// custom\nimport PokerGraph from './PokerGraph';\nimport PokerTable from './PokerTable';\nimport parseData from './helpers';\nimport { pennyPokerScores, pennyPokerColors } from '../../../constants/poker';\n// Parents: PokerNightTabs\n\nconst PennyPokerNight = memo(() => {\n  const { parsedScores, totals } = parseData(pennyPokerScores);\n\n  return (\n    <div>\n      <PokerGraph\n        parsedScores={parsedScores}\n        colors={pennyPokerColors}\n        domain={[-400, 600]}\n        ticks={[-400, -200, 0, 200, 400, 600]}\n      />\n      <PokerTable totals={totals} />\n    </div>\n  );\n});\n\nexport default PennyPokerNight;\n","import React, { memo } from 'react';\n// custom\nimport PokerGraph from './PokerGraph';\nimport PokerTable from './PokerTable';\nimport parseData from './helpers';\nimport { gigNowPokerScores, gigNowPokerColors } from '../../../constants/poker';\n// Parents: PokerNightTabs\n\nconst PokerNight = memo(() => {\n  const { parsedScores, totals } = parseData(gigNowPokerScores);\n\n  return (\n    <div>\n      <PokerGraph\n        parsedScores={parsedScores}\n        colors={gigNowPokerColors}\n        domain={[-100, 100]}\n      />\n      <PokerTable totals={totals} />\n    </div>\n  );\n});\n\nexport default PokerNight;\n","import React, { useState, memo } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PennyPokerNight from './PennyPokerNight';\nimport GigNowPokerNight from './GigNowPokerNight';\n// Parents: Main\n\nconst PokerNightTabs = memo(() => {\n  const [tab, setTab] = useState(0);\n\n  const handleChange = (event, val) => {\n    setTab(val);\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\" style={{ marginBottom: 20, marginTop: 10 }}>\n        <Tabs value={tab} onChange={handleChange}>\n          <Tab label=\"Penny Poker\" />\n          <Tab label=\"GigNow Poker\" />\n        </Tabs>\n      </AppBar>\n      {tab === 0 && <PennyPokerNight />}\n      {tab === 1 && <GigNowPokerNight />}\n    </div>\n  );\n});\n\nexport default PokerNightTabs;\n","import PokerNightTabs from './PokerNightTabs';\n\nexport default PokerNightTabs;\n"],"sourceRoot":""}