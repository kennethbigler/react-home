{"version":3,"file":"static/js/g_are_you_the_one.d1f2d49c.chunk.js","mappings":"2OACaA,EAAc,CACzB,CACEC,OAAQ,CACN,QACA,WACA,WACA,WACA,OACA,UACA,QACA,QACA,UACA,UAEFC,MAAO,CACL,OACA,MACA,UACA,UACA,SACA,QACA,OACA,KACA,OACA,QAGJ,CACED,OAAQ,CACN,aACA,SACA,SACA,YACA,QACA,UACA,QACA,UACA,QACA,SACA,SAEFC,MAAO,CACL,OACA,UACA,UACA,SACA,QACA,UACA,OACA,SACA,SACA,UAGJ,CACED,OAAQ,CACN,SACA,SACA,UACA,SACA,QACA,OACA,WACA,UACA,UACA,UAEFC,MAAO,CACL,OACA,SACA,QACA,SACA,QACA,SACA,OACA,SACA,QACA,QAGJ,CACED,OAAQ,CACN,SACA,UACA,OACA,YACA,QACA,SACA,SACA,SACA,OACA,YAEFC,MAAO,CACL,OACA,MACA,UACA,WACA,OACA,SACA,UACA,MACA,UACA,UAGJ,CACED,OAAQ,CACN,SACA,WACA,MACA,SACA,SACA,MACA,OACA,UACA,UACA,SACA,WAEFC,MAAO,CACL,QACA,UACA,SACA,SACA,SACA,OACA,UACA,OACA,UACA,OACA,UAGJ,CACED,OAAQ,CACN,SACA,SACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,OAEFC,MAAO,CACL,UACA,UACA,QACA,UACA,QACA,MACA,SACA,QACA,UACA,UACA,UAGJ,CACED,OAAQ,CACN,OACA,OACA,OACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,YAEFC,MAAO,CACL,SACA,QACA,MACA,SACA,QACA,QACA,MACA,SACA,QACA,QACA,SAKOC,EAAU,CACrB,WACA,WACA,WACA,WACA,WACA,WACA,YAGWC,EAAU,CACrB,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,cACA,gBClMIC,EAAe,eAACC,EAAD,uDAFE,EAEF,MAAyC,CAC5DC,QAASP,EAAYM,GAAQL,OAAOO,KAAI,kBAAO,CAAP,IACxCC,QAAST,EAAYM,GAAQL,OAAOO,KAAI,kBACtCR,EAAYM,GAAQJ,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","sources":["constants/ayto.ts","recoil/are-you-the-one-atom.ts","components/common/dropdown/Dropdown.tsx","components/games/are-you-the-one/Controls.tsx","components/games/are-you-the-one/table/TBDialog.tsx","components/games/are-you-the-one/table/TableBody.tsx","components/games/are-you-the-one/table/Table.tsx","components/games/are-you-the-one/analysis/Analysis.tsx","components/games/are-you-the-one/analysis/useHist.ts","components/games/are-you-the-one/AreYouTheOne.tsx"],"sourcesContent":["// are-you-the-one\nexport const aytoSeasons = [\n  {\n    ladies: [\n      \"Amber\",\n      \"Ashleigh\",\n      \"Brittany\",\n      \"Coleysia\",\n      \"Jacy\",\n      \"Jessica\",\n      \"Kayla\",\n      \"Paige\",\n      \"Shanley\",\n      \"Simone\",\n    ],\n    gents: [\n      \"Adam\",\n      \"Dre\",\n      \"Chris S\",\n      \"Chris T\",\n      \"Dillan\",\n      \"Ethan\",\n      \"Joey\",\n      \"JJ\",\n      \"Ryan\",\n      \"Wes\",\n    ],\n  },\n  {\n    ladies: [\n      \"Alexandria\",\n      \"Ashley\",\n      \"Briana\",\n      \"Christina\",\n      \"Ellie\",\n      \"Jasmine\",\n      \"Jenni\",\n      \"Jessica\",\n      \"Paris\",\n      \"Shelby\",\n      \"Tyler\",\n    ],\n    gents: [\n      \"Alex\",\n      \"Anthony\",\n      \"Brandon\",\n      \"Curtis\",\n      \"Dario\",\n      \"Garland\",\n      \"John\",\n      \"Layton\",\n      \"Nathan\",\n      \"Tyler\",\n    ],\n  },\n  {\n    ladies: [\n      \"Amanda\",\n      \"Britni\",\n      \"Chelsey\",\n      \"Hannah\",\n      \"Kayla\",\n      \"Kiki\",\n      \"Cheyenne\",\n      \"Melanie\",\n      \"Rashida\",\n      \"Stacey\",\n    ],\n    gents: [\n      \"Alec\",\n      \"Austin\",\n      \"Chuck\",\n      \"Connor\",\n      \"Devin\",\n      \"Hunter\",\n      \"Mike\",\n      \"Nelson\",\n      \"Tyler\",\n      \"Zak\",\n    ],\n  },\n  {\n    ladies: [\n      \"Alyssa\",\n      \"Camille\",\n      \"Emma\",\n      \"Francesca\",\n      \"Julia\",\n      \"Kaylen\",\n      \"Mikala\",\n      \"Nicole\",\n      \"Tori\",\n      \"Victoria\",\n    ],\n    gents: [\n      \"Asaf\",\n      \"Cam\",\n      \"Cameron\",\n      \"Giovanni\",\n      \"John\",\n      \"Morgan\",\n      \"Prosper\",\n      \"Sam\",\n      \"Stephen\",\n      \"Tyler\",\n    ],\n  },\n  {\n    ladies: [\n      \"Alicia\",\n      \"Carolina\",\n      \"Cas\",\n      \"Gianna\",\n      \"Hannah\",\n      \"Kam\",\n      \"Kari\",\n      \"Kathryn\",\n      \"Shannon\",\n      \"Taylor\",\n      \"Tyranny\",\n    ],\n    gents: [\n      \"Andre\",\n      \"Derrick\",\n      \"Edward\",\n      \"Hayden\",\n      \"Jaylan\",\n      \"Joey\",\n      \"Michael\",\n      \"Mike\",\n      \"Osvaldo\",\n      \"Ozzy\",\n      \"Tyler\",\n    ],\n  },\n  {\n    ladies: [\n      \"Alexis\",\n      \"Alivia\",\n      \"Audrey\",\n      \"Diandra\",\n      \"Geles\",\n      \"Jada\",\n      \"Keyana\",\n      \"Nicole\",\n      \"Nurys\",\n      \"Uche\",\n      \"Zoe\",\n    ],\n    gents: [\n      \"Anthony\",\n      \"Clinton\",\n      \"David\",\n      \"Dimitri\",\n      \"Ethan\",\n      \"Joe\",\n      \"Kareem\",\n      \"Keith\",\n      \"Malcolm\",\n      \"Michael\",\n      \"Tyler\",\n    ],\n  },\n  {\n    ladies: [\n      \"Asia\",\n      \"Bria\",\n      \"Cali\",\n      \"Jasmine\",\n      \"Kayla\",\n      \"Kenya\",\n      \"Lauren\",\n      \"Maria\",\n      \"Morgan\",\n      \"Nutsa\",\n      \"Samantha\",\n    ],\n    gents: [\n      \"Andrew\",\n      \"Brett\",\n      \"Cam\",\n      \"Daniel\",\n      \"Kwasi\",\n      \"Lewis\",\n      \"Moe\",\n      \"Shamoy\",\n      \"Tevin\",\n      \"Tomas\",\n      \"Zak\",\n    ],\n  },\n];\n\nexport const seasons = [\n  \"Season 1\",\n  \"Season 2\",\n  \"Season 3\",\n  \"Season 4\",\n  \"Season 5\",\n  \"Season 6\",\n  \"Season 7\",\n];\n\nexport const options = [\n  \"Matchup 1\",\n  \"Matchup 2\",\n  \"Matchup 3\",\n  \"Matchup 4\",\n  \"Matchup 5\",\n  \"Matchup 6\",\n  \"Matchup 7\",\n  \"Matchup 8\",\n  \"Matchup 9\",\n  \"Matchup 10\",\n  \"Truth Booth\",\n  \"Consolidated\",\n];\n","import { atom, DefaultValue, selector } from \"recoil\";\nimport { aytoSeasons, options } from \"../constants/ayto\";\n\nexport interface RoundPairing {\n  /** [lady-i: gent-i] */\n  pairs: number[];\n  /** score of the round */\n  score: number;\n}\n\nexport interface AYTOState {\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n}\n\nconst DEFAULT_SEASON = 6;\n\nconst newAYTOState = (season = DEFAULT_SEASON): AYTOState => ({\n  matches: aytoSeasons[season].ladies.map(() => -1),\n  noMatch: aytoSeasons[season].ladies.map(() =>\n    aytoSeasons[season].gents.map(() => false)\n  ),\n  roundPairings: [],\n});\n\n/** used for main game state */\nexport const areYouTheOneAtom = atom({\n  key: \"areYouTheOneAtom\",\n  default:\n    (JSON.parse(\n      localStorage.getItem(\"are-you-the-one-atom\") || \"null\"\n    ) as AYTOState) || newAYTOState(),\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"are-you-the-one-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\n/** used internally to store season */\nconst aytoSeasonAtom = atom({\n  key: \"aytoSeason\",\n  default:\n    (JSON.parse(\n      localStorage.getItem(\"ayto-season-atom\") || \"null\"\n    ) as number) || DEFAULT_SEASON,\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"ayto-season-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\n/** used externally to set season and side effects in main state */\nexport const aytoSeasonSelector = selector({\n  key: \"aytoSeasonSelector\",\n  get: ({ get }) => get(aytoSeasonAtom),\n  set: ({ set }, state) => {\n    if (!(state instanceof DefaultValue)) {\n      set(aytoSeasonAtom, state);\n      set(areYouTheOneAtom, newAYTOState(state));\n    }\n  },\n});\n\n/** used externally to get player info */\nexport const aytoPlayerSelector = selector({\n  key: \"aytoPlayerSelector\",\n  get: ({ get }) => {\n    const season = get(aytoSeasonAtom);\n    const newOptions = [...options];\n    // if season 1, there are only 9 TBs\n    if (season === 1) {\n      newOptions.splice(9, 1);\n    }\n\n    return { ...aytoSeasons[season], options };\n  },\n});\n\nexport default areYouTheOneAtom;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\n\ninterface DropdownProps {\n  onSelect: (index: number) => void;\n  options: string[];\n  value: number;\n  ariaLabel: string;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { ariaLabel, value, options, onSelect } = props;\n\n  // hooks/state\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number\n  ) => {\n    onSelect(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => setOpen((prevOpen) => !prevOpen);\n\n  const handleClose = (event: Event) => {\n    if (anchorRef.current?.contains(event.target as HTMLElement)) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        ref={anchorRef}\n        variant=\"contained\"\n        aria-label={`${ariaLabel} group`}\n        color=\"primary\"\n        sx={{ marginBottom: 1 }}\n      >\n        <Button>{options[value]}</Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label={`${ariaLabel} button`}\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        sx={{ zIndex: 1501 }}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\" autoFocusItem>\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === value}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  aytoSeasonSelector,\n  RoundPairing,\n} from \"../../../recoil/are-you-the-one-atom\";\nimport { seasons } from \"../../../constants/ayto\";\nimport Dropdown from \"../../common/dropdown/Dropdown\";\n\ninterface ControlsProps {\n  onSelect: (index: number) => void;\n  options: string[];\n  roundNumber: number;\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  updateScore: (score: number) => void;\n  onBlackout: (pairs: number[]) => void;\n}\n\n// eslint-disable-next-line no-restricted-globals\nconst getScore = (value: number) => (isNaN(value) ? -1 : value);\n\n/** Controls component for Are You The One */\nconst Controls = (props: ControlsProps) => {\n  const {\n    options,\n    onSelect,\n    roundNumber,\n    roundPairings,\n    onBlackout,\n    updateScore,\n  } = props;\n\n  // hooks/state\n  const [season, setSeason] = useRecoilState(aytoSeasonSelector);\n  const [score, setScore] = React.useState(\n    getScore(roundPairings[roundNumber]?.score)\n  );\n\n  // handlers\n  const handleSeasonSelect = (newSeason: number) => setSeason(newSeason);\n  const handleMatchupSelect = (index: number) => {\n    setScore(getScore(roundPairings[index]?.score));\n    onSelect(index);\n  };\n\n  const handleBlackout = () => onBlackout(roundPairings[roundNumber].pairs);\n\n  const handleTextFieldChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setScore(parseInt(event.target.value, 10) || 0);\n    updateScore(parseInt(event.target.value, 10));\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n      }}\n    >\n      <Dropdown\n        ariaLabel=\"select season\"\n        value={season}\n        options={seasons}\n        onSelect={handleSeasonSelect}\n      />\n      <Dropdown\n        ariaLabel=\"select matchup\"\n        value={roundNumber}\n        options={options}\n        onSelect={handleMatchupSelect}\n      />\n      {roundNumber < options.length - 2 && (\n        <>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleBlackout}>\n            Blackout\n          </Button>\n          <TextField\n            id=\"score-input\"\n            label=\"Score\"\n            variant=\"outlined\"\n            type=\"number\"\n            value={score}\n            onChange={handleTextFieldChange}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\n\nexport interface TBDialogProps {\n  open: boolean;\n  content: string;\n  onMatch: () => void;\n  onNoMatch: () => void;\n  onCancel: () => void;\n}\n\nconst TBDialog = ({\n  open,\n  content,\n  onMatch,\n  onNoMatch,\n  onCancel,\n}: TBDialogProps) => (\n  <Dialog onClose={onCancel} open={open}>\n    <DialogTitle>TB Result</DialogTitle>\n    <DialogContent>Are {content} a perfect match?</DialogContent>\n    <DialogActions>\n      <Button onClick={onMatch}>Match</Button>\n      <Button onClick={onNoMatch} color=\"error\">\n        No Match\n      </Button>\n      <Button onClick={onCancel} color=\"warning\">\n        Cancel\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default TBDialog;\n","import React from \"react\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\nimport { ColorOptions } from \"../types\";\nimport TBDialog from \"./TBDialog\";\nimport { AYTOHist } from \"../analysis/useHist\";\n\nexport interface AYTOTableProps {\n  gents: string[];\n  hist: AYTOHist[][];\n  ladies: string[];\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  options: string[];\n  roundNumber: number;\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  updateMatch: (li: number, gi: number) => void;\n  updateNoMatch: (li: number, gi: number) => void;\n  updatePairs: (ri: number, li: number, gi: number) => void;\n}\n\nconst AYTOTableBody = (props: AYTOTableProps) => {\n  const {\n    gents,\n    hist,\n    ladies,\n    matches,\n    noMatch,\n    options,\n    roundNumber: ri,\n    roundPairings,\n    updateMatch,\n    updateNoMatch,\n    updatePairs,\n  } = props;\n  const isTB = options.length === ri + 2;\n  const isConsolidated = options.length === ri + 1;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [tbi, setTBI] = React.useState([-1, -1]);\n\n  // Handlers\n  const handleClick = (roundi: number, ladyi: number, genti: number) => () => {\n    if (isConsolidated) {\n      return;\n    }\n    if (isTB) {\n      setTBI([ladyi, genti]);\n      setOpen(true);\n      return;\n    }\n    // Regular Round, verify gent isn't already taken\n    const tempLi = roundPairings[roundi]?.pairs.indexOf(genti);\n    if (tempLi !== -1) {\n      // deselect gent from old lady\n      updatePairs(roundi, tempLi, -1);\n    }\n    // assign to new lady\n    updatePairs(roundi, ladyi, genti);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleMatch = () => {\n    const [li, gi] = tbi;\n    updateMatch(li, gi);\n    handleCancel();\n  };\n\n  const handleNoMatch = () => {\n    const [li, gi] = tbi;\n    updateNoMatch(li, gi);\n    handleCancel();\n  };\n\n  return (\n    <TableBody>\n      {ladies.map((lName, li) => (\n        <TableRow\n          key={`ayto-table-row-${lName}`}\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n        >\n          <TableCell component=\"th\" scope=\"row\">\n            {lName}\n          </TableCell>\n          {gents.map((gName, gi) => {\n            // variables\n            let variant: \"outlined\" | \"contained\" = \"outlined\";\n            let color: ColorOptions = \"primary\";\n\n            // logic\n            if (isTB) {\n              // if has data about match or no match\n              if ((noMatch[li] && noMatch[li][gi]) || matches[li] === gi) {\n                variant = \"contained\";\n              }\n            } else if (roundPairings[ri]?.pairs[li] === gi) {\n              // if paired this round\n              variant = \"contained\";\n            }\n\n            if (noMatch[li] && noMatch[li][gi]) {\n              color = \"error\";\n            }\n\n            // if match\n            if (matches[li] === gi) {\n              color = \"success\";\n            }\n\n            const histValue = (hist[li] && hist[li][gi]?.rounds?.length) || 0;\n            // if consolidated\n            if (isConsolidated && histValue > 0) {\n              variant = \"contained\";\n            }\n\n            // render\n            return (\n              <TableCell key={gName} sx={{ padding: 0, textAlign: \"center\" }}>\n                <Button\n                  variant={variant}\n                  color={color}\n                  onClick={handleClick(ri, li, gi)}\n                >\n                  {isConsolidated ? histValue : `${lName[0]}-${gName[0]}`}\n                </Button>\n              </TableCell>\n            );\n          })}\n        </TableRow>\n      ))}\n      <TBDialog\n        open={open}\n        content={`${ladies[tbi[0]]} & ${gents[tbi[1]]}`}\n        onCancel={handleCancel}\n        onMatch={handleMatch}\n        onNoMatch={handleNoMatch}\n      />\n    </TableBody>\n  );\n};\n\nexport default AYTOTableBody;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport AYTOTableBody, { AYTOTableProps } from \"./TableBody\";\n\nconst AYTOTable = ({ gents, ...other }: AYTOTableProps) => (\n  <TableContainer component={Paper}>\n    <Table aria-label=\"are you the one data entry table\">\n      <TableHead>\n        <TableRow>\n          <TableCell />\n          {gents.map((name) => (\n            <TableCell\n              key={name}\n              sx={{ paddingLeft: 0, paddingRight: 0, textAlign: \"center\" }}\n            >\n              {name}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <AYTOTableBody gents={gents} {...other} />\n    </Table>\n  </TableContainer>\n);\n\nexport default AYTOTable;\n","import React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Chip from \"@mui/material/Chip\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\nimport { ChipColorOptions } from \"../types\";\nimport { AYTOHist } from \"./useHist\";\n\nexport interface AnalysisProps {\n  calculatedEquations: RoundPairing[];\n  gents: string[];\n  hist: AYTOHist[][];\n  ladies: string[];\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  tempScore: number[];\n}\n\nconst Analysis = (props: AnalysisProps) => {\n  const {\n    gents,\n    ladies,\n    matches,\n    noMatch,\n    roundPairings,\n    hist,\n    tempScore,\n    calculatedEquations,\n  } = props;\n\n  // state\n  const [showAll, setShowAll] = React.useState(false);\n\n  // handlers\n  const handleSwitch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setShowAll(event.target.checked);\n  };\n\n  return (\n    <div>\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        <h1>Analysis</h1>\n        <FormControlLabel\n          control={\n            <Switch checked={showAll} onChange={handleSwitch} name=\"show-all\" />\n          }\n          label=\"Show All Couples\"\n        />\n      </Stack>\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {roundPairings.map(({ pairs, score }, ri) => {\n          const equation = pairs.map((gi, li) => {\n            // if cleared pairing\n            if (li < 0 || gi < 0) {\n              return null;\n            }\n\n            const isRepeat = hist[li][gi].rounds.length > 1;\n            let color: ChipColorOptions = isRepeat ? \"primary\" : \"default\";\n\n            if (!showAll) {\n              // hide matches and noMatches\n              if (noMatch[li][gi] || matches[li] === gi) {\n                return null;\n              }\n            } else {\n              // no match chip\n              if (noMatch[li][gi]) {\n                color = \"error\";\n              }\n              // match chip\n              if (matches[li] === gi) {\n                color = \"success\";\n              }\n            }\n\n            const label = `${ladies[li]}-${gents[gi]}${\n              isRepeat ? ` ${hist[li][gi].rounds.length}` : \"\"\n            } - ${hist[li][gi].odds}%`;\n\n            // create equation chips\n            return (\n              <Chip\n                key={`eq-r${ri}-l${li}-g${gi}`}\n                label={label}\n                color={color}\n              />\n            );\n          });\n\n          // return each equation stack\n          return !equation.every((e) => e === null) ? (\n            <Stack key={`equation-${ri}`} spacing={1}>\n              <h2 style={{ textAlign: \"center\" }}>Matchup {ri + 1}</h2>\n              {equation}\n              <Chip\n                label={showAll ? score : score - tempScore[ri]}\n                color=\"warning\"\n              />\n            </Stack>\n          ) : null;\n        })}\n      </Stack>\n      {calculatedEquations.length > 0 && <hr />}\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {calculatedEquations.map(({ pairs, score }, cei) => (\n          <Stack key={`equation-${cei}`} spacing={1}>\n            <h2 style={{ textAlign: \"center\" }}>Calculated {cei + 1}</h2>\n            {pairs.map((gi, li) => (\n              <Chip\n                key={`eq-calc-l${li}-g${gi}`}\n                label={`${ladies[li]}-${gents[gi]} ${hist[li][gi].rounds.length} - ${hist[li][gi].odds}%`}\n                color=\"primary\"\n              />\n            ))}\n            <Chip label={`max ${score}`} color=\"warning\" />\n          </Stack>\n        ))}\n      </Stack>\n    </div>\n  );\n};\n\nexport default Analysis;\n","import { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\n\nexport interface AYTOHist {\n  odds: number;\n  oddsWeight: number;\n  rounds: number[];\n}\n\nexport interface AYTODictObj {\n  couples: [number, number][];\n  score: number;\n}\n\nexport interface AYTODict {\n  [key: string]: AYTODictObj;\n}\n\n/** [lady-i: (gent-i | -1), -1, -1, ...] */\n/** [lady-i: [gent-i: bool]] */\n/** [round-i: RoundPairing] */\nconst useHist = (\n  len: number,\n  matches: number[],\n  noMatch: boolean[][],\n  roundPairings: RoundPairing[]\n) => {\n  // state\n  const hist: AYTOHist[][] = [];\n  const tempScore: number[] = [];\n  const totals: number[] = [];\n\n  // create histogram\n  roundPairings.forEach(({ pairs }, ri) => {\n    tempScore[ri] = 0;\n    totals[ri] = len;\n\n    pairs.forEach((gi, li) => {\n      // noMatch increases odds of the rest\n      if (li < 0 || gi < 0 || noMatch[li][gi]) {\n        totals[ri] -= 1;\n      }\n      // remove matches\n      if (matches[li] === gi) {\n        tempScore[ri] += 1;\n        totals[ri] -= 1;\n      }\n      // verify data obj\n      !hist[li] && (hist[li] = []);\n      !hist[li][gi] && (hist[li][gi] = { odds: 0, oddsWeight: 0, rounds: [] });\n      // histogram\n      hist[li][gi].rounds.push(ri);\n    });\n  });\n\n  // temp state\n  const dict: AYTODict = {};\n\n  // with histogram made, time to get some stats\n  roundPairings.forEach(({ pairs, score }, ri) => {\n    pairs.forEach((gi, li) => {\n      // ----------     odds     ---------- //\n      const histObj = hist[li][gi];\n      // 0% odds for no match\n      if (noMatch[li][gi]) {\n        return;\n      }\n      // 100% odds for match\n      if (matches[li] === gi) {\n        histObj.odds = 100;\n        return;\n      }\n      // calculate odds for the round\n      const odds = totals[ri]\n        ? ((score - tempScore[ri]) * 100) / totals[ri]\n        : 0;\n      // assign first odds\n      if (histObj.oddsWeight === 0) {\n        histObj.odds = Math.floor(odds);\n      } else if (!odds || !histObj.odds) {\n        // if odds for either are 0\n        histObj.odds = 0;\n      } else {\n        // rolling average\n        histObj.odds = Math.floor(\n          (histObj.odds * histObj.oddsWeight + odds) / (histObj.oddsWeight + 1)\n        );\n      }\n      // update odds weight\n      histObj.oddsWeight += 1;\n\n      // ----------     equations     ---------- //\n      // only care about repeats\n      if (histObj.rounds.length < 2) {\n        return;\n      }\n      // create key from round combination (length)\n      const keys = [\n        histObj.rounds.reduce((acc, val) => acc + val.toString(), \"\"),\n      ];\n      // add every pair of 2 rounds as keys\n      for (let i = ri + 1; i < histObj.rounds.length; i += 1) {\n        keys.push(`${histObj.rounds[ri]}${histObj.rounds[i]}`);\n      }\n      // NOTE: length (l) and 2 are covered, anything in-between is not directly considered (still covered in 2s)\n      keys.forEach((key) => {\n        // put that in the dictionary\n        !dict[key] && (dict[key] = { couples: [], score });\n        // calculate equations\n        let canAdd = true;\n        dict[key].couples.forEach(([tli, tgi]) => {\n          canAdd = canAdd && tli !== li && tgi !== gi;\n        });\n        canAdd && dict[key].couples.push([li, gi]);\n        dict[key].score = Math.min(score - tempScore[ri], dict[key].score);\n      });\n    });\n  });\n\n  // more state\n  const calculatedEquations: RoundPairing[] = [];\n\n  // convert qualifying couples to more equations\n  Object.keys(dict).forEach((key) => {\n    if (\n      // only care about repeat couples\n      dict[key].couples.length > 1 &&\n      // where there are more couples than score available\n      dict[key].couples.length > dict[key].score\n    ) {\n      const tempPairs: number[] = [];\n      // convert to RP\n      dict[key].couples.forEach(([li, gi]) => {\n        tempPairs[li] = gi;\n      });\n      // validate new equation doesn't already exist\n      let isRepeat = false;\n      calculatedEquations.forEach(({ pairs, score }, ci) => {\n        let hasExactRepeat = true;\n        let hasRoughRepeat = true;\n        for (let i = 0; i < pairs.length; i += 1) {\n          if (tempPairs[i] !== pairs[i]) {\n            if (tempPairs[i]) {\n              hasExactRepeat = false;\n              hasRoughRepeat = false;\n            } else {\n              // new equation has fewer couples, may still be a match but is missing some keys\n              hasExactRepeat = false;\n            }\n          }\n        }\n        isRepeat =\n          // compare against itself\n          isRepeat ||\n          // exclude if exact repeat\n          hasExactRepeat ||\n          // exclude if rough repeat with higher or equal score\n          (hasRoughRepeat && dict[key].score >= score);\n        // if exact repeat, pick the lower of the 2 scores\n        if (hasExactRepeat) {\n          calculatedEquations[ci].score = Math.min(score, dict[key].score);\n        }\n      });\n      // Add RP to equations\n      !isRepeat &&\n        calculatedEquations.push({\n          pairs: tempPairs,\n          score: dict[key].score,\n        });\n    }\n  });\n\n  return {\n    hist,\n    tempScore,\n    calculatedEquations,\n  };\n};\n\nexport default useHist;\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport Controls from \"./Controls\";\nimport Table from \"./table/Table\";\nimport Analysis from \"./analysis/Analysis\";\nimport aYTOAtom, {\n  aytoPlayerSelector,\n} from \"../../../recoil/are-you-the-one-atom\";\nimport useHist from \"./analysis/useHist\";\n\n/** TODO: replace Dropdown with MUI Dropdown when available */\nconst AreYouTheOne = () => {\n  const [{ matches, noMatch, roundPairings }, setState] =\n    useRecoilState(aYTOAtom);\n  const { ladies, gents, options } = useRecoilValue(aytoPlayerSelector);\n\n  // state\n  const [roundNumber, setRoundNumber] = React.useState(0);\n  const { hist, tempScore, calculatedEquations } = useHist(\n    ladies.length,\n    matches,\n    noMatch,\n    roundPairings\n  );\n\n  // handlers\n  const handleSelect = (selected: number) => {\n    setRoundNumber(selected);\n  };\n\n  const handleUpdateScore = (score: number) => {\n    const newRoundPairing = !roundPairings[roundNumber]\n      ? { pairs: [], score: 0 }\n      : { ...roundPairings[roundNumber] };\n    newRoundPairing.score = score;\n    const newRoundPairings = [...roundPairings];\n    newRoundPairings[roundNumber] = newRoundPairing;\n    setState({ matches, noMatch, roundPairings: newRoundPairings });\n  };\n\n  const handleUpdateNoMatch = (li: number, gi: number) => {\n    const newMatches = noMatch.map((gentArray: boolean[]) => [...gentArray]);\n    // if array for lady doesn't exist yet, create skeleton one\n    !newMatches[li] && (newMatches[li] = []);\n    // assign no match\n    newMatches[li][gi] = !newMatches[li][gi];\n    // update state\n    setState({ matches, noMatch: newMatches, roundPairings });\n  };\n\n  const handleBlackout = (pairs: number[]) => {\n    // create immutable copy for storage\n    const newNoMatches = noMatch.map((gentArray: boolean[]) => [...gentArray]);\n    // no match for all pairs\n    pairs.forEach((gi, li) => {\n      if (matches[li] !== gi && !noMatch[li][gi]) {\n        // if array for lady doesn't exist yet, create skeleton one\n        !newNoMatches[li] && (newNoMatches[li] = []);\n        // assign no match\n        newNoMatches[li][gi] = true;\n      }\n    });\n    // update state\n    setState({ matches, noMatch: newNoMatches, roundPairings });\n  };\n\n  const handleUpdatePairs = (ri: number, li: number, gi: number) => {\n    const newRoundPairing = !roundPairings[ri]\n      ? { pairs: [], score: 0 }\n      : { ...roundPairings[ri], pairs: [...roundPairings[ri].pairs] };\n    newRoundPairing.pairs[li] = gi;\n    const newRoundPairings = [...roundPairings];\n    newRoundPairings[roundNumber] = newRoundPairing;\n    setState({ matches, noMatch, roundPairings: newRoundPairings });\n  };\n\n  const handleUpdateMatch = (li: number, gi: number) => {\n    const newMatches = [...matches];\n    const newNoMatches = noMatch.map((gentArray: boolean[]) => [...gentArray]);\n    // if array for lady doesn't exist yet, create skeleton one\n    !newNoMatches[li] && (newNoMatches[li] = []);\n    // assign new match\n    newMatches[li] = gi;\n    // make all gent options no matches\n    for (let i = 0; i < gents.length; i += 1) {\n      newNoMatches[li][i] = i !== gi;\n    }\n    // make all ladies options no matches\n    for (let i = 0; i < ladies.length; i += 1) {\n      !newNoMatches[i] && (newNoMatches[i] = []);\n      newNoMatches[i][gi] = i !== li;\n    }\n\n    // update round pairings\n    const newRoundPairings = [...roundPairings];\n    for (let ri = 0; ri < options.length - 2; ri += 1) {\n      if (\n        !roundPairings[ri] ||\n        roundPairings[ri].pairs[li] < 0 ||\n        roundPairings[ri].pairs[li] === undefined\n      ) {\n        const newRoundPairing = !newRoundPairings[ri]\n          ? { pairs: [], score: 0 }\n          : { ...roundPairings[ri], pairs: [...roundPairings[ri].pairs] };\n        newRoundPairing.pairs[li] = gi;\n        newRoundPairings[ri] = newRoundPairing;\n      }\n    }\n\n    // update state\n    setState({\n      matches: newMatches,\n      noMatch: newNoMatches,\n      roundPairings: newRoundPairings,\n    });\n  };\n\n  return (\n    <>\n      <h1>Are You The One?</h1>\n      <Controls\n        onSelect={handleSelect}\n        options={options}\n        roundNumber={roundNumber}\n        roundPairings={roundPairings}\n        onBlackout={handleBlackout}\n        updateScore={handleUpdateScore}\n      />\n      <br />\n      <Table\n        gents={gents}\n        hist={hist}\n        ladies={ladies}\n        matches={matches}\n        noMatch={noMatch}\n        options={options}\n        roundNumber={roundNumber}\n        roundPairings={roundPairings}\n        updateMatch={handleUpdateMatch}\n        updateNoMatch={handleUpdateNoMatch}\n        updatePairs={handleUpdatePairs}\n      />\n      <Analysis\n        calculatedEquations={calculatedEquations}\n        gents={gents}\n        hist={hist}\n        ladies={ladies}\n        matches={matches}\n        noMatch={noMatch}\n        roundPairings={roundPairings}\n        tempScore={tempScore}\n      />\n    </>\n  );\n};\n\nexport default AreYouTheOne;\n"],"names":["aytoSeasons","ladies","gents","seasons","options","newAYTOState","season","matches","map","noMatch","roundPairings","areYouTheOneAtom","atom","key","default","JSON","parse","localStorage","getItem","effects","onSet","state","setItem","stringify","aytoSeasonAtom","aytoSeasonSelector","selector","get","set","DefaultValue","aytoPlayerSelector","newOptions","splice","props","ariaLabel","value","onSelect","React","open","setOpen","anchorRef","handleClose","event","current","contains","target","ButtonGroup","ref","variant","color","sx","marginBottom","Button","size","undefined","onClick","prevOpen","ArrowDropDown","Popper","anchorEl","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","option","index","MenuItem","selected","handleMenuItemClick","getScore","isNaN","roundNumber","onBlackout","updateScore","useRecoilState","setSeason","score","setScore","display","justifyContent","flexWrap","newSeason","length","pairs","TextField","label","type","onChange","parseInt","content","onMatch","onNoMatch","onCancel","Dialog","onClose","DialogTitle","DialogContent","DialogActions","hist","ri","updateMatch","updateNoMatch","updatePairs","isTB","isConsolidated","tbi","setTBI","handleCancel","TableBody","lName","li","TableRow","border","TableCell","component","scope","gName","gi","roundi","ladyi","genti","histValue","rounds","padding","textAlign","tempLi","indexOf","other","TableContainer","Table","TableHead","name","paddingLeft","paddingRight","tempScore","calculatedEquations","showAll","setShowAll","Stack","direction","FormControlLabel","control","Switch","checked","spacing","equation","isRepeat","odds","Chip","every","e","cei","len","totals","forEach","oddsWeight","push","dict","histObj","Math","floor","keys","reduce","acc","val","toString","i","couples","canAdd","tli","tgi","min","Object","tempPairs","ci","hasExactRepeat","hasRoughRepeat","aYTOAtom","setState","useRecoilValue","setRoundNumber","useHist","newNoMatches","gentArray","newRoundPairing","newRoundPairings","newMatches"],"sourceRoot":""}