{"version":3,"sources":["hooks/useToggle.ts","apis/noop.ts","helpers/lazyWithPreload.ts","hooks/useAnchorEl.ts","components/common/ButtonPopover.tsx","components/common/header/PlayerMenu.tsx","components/common/header/TopBar.tsx","components/common/header/Header.tsx","components/resume/Menu.tsx","components/resume/Routes.tsx"],"names":["useToggleState","defaultVal","React","useState","isToggled","setIsToggled","handleToggle","lazyWithPreload","ComponentPromise","lazy","useAnchorEl","anchorEl","setAnchorEl","setAnchor","e","currentTarget","clearAnchor","contentStyle","padding","ButtonPopover","props","children","buttonText","open","Boolean","Button","aria-haspopup","variant","component","onClick","Popover","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","style","cloneElement","namePadStyles","maxWidth","width","display","margin","PlayerMenu","isChecked","playerActions","updateBot","handleKeyPress","key","updateName","target","value","state","isBot","players","this","Grid","container","spacing","item","xs","Typography","map","p","i","name","TextField","defaultValue","onKeyPress","placeholder","Switch","checked","color","onChange","_e","isC","disabled","Component","getDerivedStateFromProps","a","connect","dispatch","bindActionCreators","flexLeftStyles","alignItems","flexRightStyles","marginRight","TopBar","toDarkTheme","themeActions","displayDarkTheme","setState","toggleSwitch","toLightTheme","displayLightTheme","theme","type","toggleOpen","showPlayers","fontColor","iconColor","AppBar","left","right","top","Toolbar","disableGutters","className","IconButton","aria-label","cursor","PureComponent","defaultProps","Header","isOpen","setIsOpen","handleNav","palette","Drawer","position","onItemClick","loc","withTheme","Menu","memo","menu","route","divider","index","Divider","MenuItem","noop","window","alt","src","paddingLeft","paddingRight","Summary","Work","Education","TravelMap","Resume","GitTools","Poker","MurderMystery","GraphQL","Cars","Routes","match","url","paths","reduce","acc","obj","path","push","exact","from","to","fallback"],"mappings":"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","file":"static/js/resume.79e3956b.chunk.js","sourcesContent":["import React from 'react';\n\ntype ToggleStateHook = [ boolean, React.MouseEventHandler, Function ];\n\nconst useToggleState = (defaultVal = false): ToggleStateHook => {\n  const [isToggled, setIsToggled] = React.useState(defaultVal);\n\n  const handleToggle = (): void => { setIsToggled(!isToggled); };\n\n  return [isToggled, handleToggle, setIsToggled];\n};\n\nexport default useToggleState;\n","export default (): void => {};\n","import React from 'react';\n\ntype Props = {};\ntype ReactComponent = React.ComponentType<Props>;\ntype ImportPromise = Promise<{ default: ReactComponent }>;\ntype LazyComponent = React.LazyExoticComponent<ReactComponent>;\n\nexport default function lazyWithPreload(ComponentPromise: ImportPromise): LazyComponent {\n  return React.lazy(() => ComponentPromise);\n}\n","import React from 'react';\n\ninterface AnchorElHook {\n  anchorEl: null | HTMLElement;\n  setAnchor: React.MouseEventHandler;\n  clearAnchor: React.MouseEventHandler;\n}\n\nconst useAnchorEl = (): AnchorElHook => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const setAnchor = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(e.currentTarget);\n  };\n  const clearAnchor = (): void => {\n    setAnchorEl(null);\n  };\n  return { anchorEl, setAnchor, clearAnchor };\n};\n\nexport default useAnchorEl;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport useAnchorEl from '../../hooks/useAnchorEl';\n\ninterface ButtonPopoverProps {\n  children: React.ReactElement;\n  buttonText: string;\n}\n\nconst contentStyle: React.CSSProperties = { padding: 15 };\n\nconst ButtonPopover: React.FC<ButtonPopoverProps> = (props: ButtonPopoverProps) => {\n  const { anchorEl, setAnchor, clearAnchor } = useAnchorEl();\n  const { children, buttonText } = props;\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <Button\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        component=\"button\"\n        onClick={setAnchor}\n      >\n        {buttonText}\n      </Button>\n      <Popover\n        id=\"simple-popper\"\n        open={open}\n        anchorEl={anchorEl}\n        onClose={clearAnchor}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <div style={contentStyle}>\n          {React.cloneElement(children)}\n        </div>\n      </Popover>\n    </>\n  );\n};\n\nexport default ButtonPopover;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { updateName, updateBot } from '../../../store/modules/players';\nimport { DBRootState, DBPlayer } from '../../../store/types';\n\ninterface PlayerActions {\n  updateName: Function;\n  updateBot: Function;\n}\ninterface PlayerMenuProps {\n  playerActions: PlayerActions;\n  players: DBPlayer[];\n}\ninterface PlayerMenuState {\n  isBot: boolean[];\n}\n\nconst namePadStyles: React.CSSProperties = {\n  maxWidth: '420px',\n  width: '100%',\n  display: 'block',\n  margin: 'auto',\n};\n\nclass PlayerMenu extends Component<PlayerMenuProps, PlayerMenuState> {\n  constructor(props: PlayerMenuProps) {\n    super(props);\n\n    this.state = { isBot: []};\n  }\n\n  static getDerivedStateFromProps: React.GetDerivedStateFromProps<PlayerMenuProps, PlayerMenuState> = (props) => ({ isBot: props.players.map((a) => a.isBot) })\n\n  handleToggle = (id: number, isChecked: boolean): void => {\n    const { playerActions } = this.props;\n    playerActions.updateBot(id, isChecked);\n  };\n\n  handleKeyPress = (e: React.KeyboardEvent<HTMLDivElement>, id: number): void => {\n    const { playerActions } = this.props;\n    if (e.key === 'Enter') {\n      playerActions.updateName(id, (e.target as HTMLInputElement).value || '');\n    }\n  };\n\n  render(): React.ReactNode {\n    const { players } = this.props;\n    const { isBot } = this.state;\n\n    return (\n      <div style={namePadStyles}>\n        <Grid container spacing={1}>\n          <Grid item xs={9}>\n            <Typography variant=\"h5\">\n              Edit Player Names\n            </Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography variant=\"h5\">\n              Is Bot?\n            </Typography>\n          </Grid>\n        </Grid>\n        {players.map((p, i) => (p.id !== 0\n          ? (\n            <Grid key={`${p.name},${i}`} container spacing={1}>\n              <Grid item xs={9}>\n                <TextField\n                  defaultValue={p.name}\n                  onKeyPress={(e: React.KeyboardEvent<HTMLDivElement>): void => this.handleKeyPress(e, p.id)}\n                  placeholder=\"Enter Player Name\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <Switch\n                  checked={isBot[i]}\n                  color=\"primary\"\n                  onChange={(_e, isC): void => this.handleToggle(p.id, isC)}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid key={`${p.name},${i}`} container spacing={1}>\n              <Grid item xs={9}>\n                <Typography variant=\"h5\">\n                  {p.name}\n                </Typography>\n              </Grid>\n              <Grid item xs={3}>\n                <Switch checked disabled />\n              </Grid>\n            </Grid>\n          )\n        ))}\n      </div>\n    );\n  }\n}\n\n// react-redux export\nconst mapStateToProps = (state: DBRootState): { players: DBPlayer[] } => ({\n  players: state.players,\n});\nconst mapDispatchToProps = (dispatch: Dispatch): { playerActions: PlayerActions } => ({\n  playerActions: bindActionCreators({ updateName, updateBot }, dispatch),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlayerMenu);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Switch from '@material-ui/core/Switch';\nimport SimplePopover from '../ButtonPopover';\nimport PlayerMenu from './PlayerMenu';\nimport {\n  displayDarkTheme,\n  displayLightTheme,\n} from '../../../store/modules/theme';\nimport { DBUITheme, DBRootState } from '../../../store/types';\n\ninterface ThemeActions {\n  displayDarkTheme: Function;\n  displayLightTheme: Function;\n}\ninterface TopBarProps {\n  fontColor: 'inherit' | 'initial' | 'error' | 'primary' | 'secondary' | 'textPrimary' | 'textSecondary' | undefined;\n  iconColor: 'inherit' | 'primary' | 'secondary' | 'default' | undefined;\n  showPlayers?: boolean;\n  theme: DBUITheme;\n  themeActions: ThemeActions;\n  toggleOpen: React.MouseEventHandler;\n}\ninterface TopBarState {\n  checked: boolean;\n  toggleSwitch: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\n}\n\nconst flexLeftStyles: React.CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n};\nconst flexRightStyles: React.CSSProperties = {\n  display: 'flex',\n  marginRight: 15,\n};\n\nclass TopBar extends PureComponent<TopBarProps, TopBarState> {\n  static defaultProps: {\n    showPlayers: boolean;\n  };\n\n  constructor(props: TopBarProps) {\n    super(props);\n    const { theme } = props;\n\n    if (theme.type === 'dark') {\n      this.state = { checked: false, toggleSwitch: this.toLightTheme };\n    } else {\n      this.state = { checked: true, toggleSwitch: this.toDarkTheme };\n    }\n  }\n\n  toDarkTheme = (): void => {\n    const { themeActions } = this.props;\n    themeActions.displayDarkTheme();\n    this.setState({ checked: false, toggleSwitch: this.toLightTheme });\n  };\n\n  toLightTheme = (): void => {\n    const { themeActions } = this.props;\n    themeActions.displayLightTheme();\n    this.setState({ checked: true, toggleSwitch: this.toDarkTheme });\n  };\n\n  render(): React.ReactNode {\n    const {\n      toggleOpen, showPlayers, fontColor, iconColor,\n    } = this.props;\n    const { checked, toggleSwitch } = this.state;\n    return (\n      <AppBar style={{ left: 0, right: 0, top: 0 }}>\n        <Toolbar disableGutters>\n          <div className=\"flex-container\">\n            <div style={flexLeftStyles}>\n              <IconButton\n                aria-label=\"Menu\"\n                onClick={toggleOpen}\n                color={iconColor}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                onClick={toggleOpen}\n                style={{ cursor: 'pointer' }}\n                variant=\"h6\"\n                color={fontColor}\n              >\n                Menu\n              </Typography>\n            </div>\n            {showPlayers && (\n              <div style={flexRightStyles}>\n                <SimplePopover buttonText=\"Players\">\n                  <PlayerMenu />\n                </SimplePopover>\n              </div>\n            )}\n            <div style={flexRightStyles}>\n              <Switch checked={checked} onChange={toggleSwitch} />\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\n// react-redux export\nconst mapStateToProps = (state: DBRootState): { theme: DBUITheme } => ({\n  theme: state.theme,\n});\nconst mapDispatchToProps = (dispatch: Dispatch): { themeActions: ThemeActions } => ({\n  themeActions: bindActionCreators(\n    { displayDarkTheme, displayLightTheme },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationClose from '@material-ui/icons/Close';\nimport { withTheme, Theme } from '@material-ui/core/styles';\nimport TopBar from './TopBar';\nimport useToggleState from '../../../hooks/useToggle';\n\ninterface NavProps {\n  onItemClick: (loc: string) => void;\n}\ninterface HeaderProps {\n  children: React.ReactElement<NavProps>;\n  handleNav: Function;\n  showPlayers?: boolean;\n  theme: Theme;\n}\n\nconst Header: React.FC<HeaderProps> = (props: HeaderProps) => {\n  const [isOpen, toggleOpen, setIsOpen] = useToggleState(false);\n  const {\n    children, handleNav, showPlayers,\n    theme: { palette: { type }},\n  } = props;\n\n  const handleNavigation = (loc: string): void => {\n    setIsOpen(false);\n    handleNav(loc);\n  };\n\n  const iconColor = type === 'light' ? 'inherit' : 'default';\n  const fontColor = type === 'light' ? 'inherit' : 'initial';\n\n  return (\n    <>\n      <TopBar toggleOpen={toggleOpen} showPlayers={showPlayers} fontColor={fontColor} iconColor={iconColor} />\n      <Drawer onClose={toggleOpen} open={isOpen}>\n        <AppBar position=\"sticky\">\n          <Toolbar disableGutters>\n            <IconButton\n              aria-label=\"Menu Close\"\n              onClick={toggleOpen}\n              color={iconColor}\n            >\n              <NavigationClose />\n            </IconButton>\n            <Typography variant=\"h6\" color={fontColor}>\n              Menu\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        {React.cloneElement(children, { onItemClick: handleNavigation })}\n      </Drawer>\n    </>\n  );\n};\n\nHeader.defaultProps = {\n  showPlayers: false,\n};\n\nexport default withTheme(Header);\n","import React, { memo } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport noop from '../../apis/noop';\n\ninterface MenuProps {\n  onItemClick?: Function;\n}\n\nconst Menu: React.FC<MenuProps> = memo((props: MenuProps) => {\n  const { onItemClick } = props;\n  // internal routes\n  const menu = [\n    { name: 'Summary', route: '' },\n    { name: 'Work', route: 'work' },\n    { name: 'Resume', route: 'resume' },\n    { name: 'Hackathons & Education', route: 'education' },\n    { divider: true },\n    { name: 'Git Tools', route: 'git-tools' },\n    { name: 'GraphQL Demo', route: 'graphql' },\n    { divider: true },\n    { name: 'Cars', route: 'cars' },\n    { name: 'Travel Map', route: 'travel' },\n    { name: 'Murder Mystery', route: 'murder' },\n    { name: 'Poker Night Scores', route: 'poker' },\n    { name: 'React Games', route: 'games' },\n  ].map((item, index) => (item.divider\n    ? (\n      <Divider key={index} />\n    ) : (\n      <MenuItem key={item.name} onClick={(): void => (onItemClick ? onItemClick(`/${item.route}`) : noop())}>\n        {item.name}\n      </MenuItem>\n    )\n  ));\n\n  // external links\n  const github = (): void => { window.open('https://github.com/kennethbigler/react-home'); };\n  const linkedIn = (): void => { window.open('https://www.linkedin.com/in/kennethbigler'); };\n  const stackOverflow = (): void => { window.open('https://stackoverflow.com/users/4830309/ken-bigler'); };\n\n  return (\n    <>\n      {menu}\n      <Divider />\n      <MenuItem onClick={github}>\n        GitHub\n      </MenuItem>\n      <MenuItem onClick={linkedIn}>\n        LinkedIn\n      </MenuItem>\n      <Divider />\n      <br />\n      <img\n        alt=\"profile for Ken Bigler at Stack Overflow, Q&A for professional and enthusiast programmers\"\n        id=\"stackOverflow\"\n        onClick={stackOverflow}\n        src=\"https://stackoverflow.com/users/flair/4830309.png?theme=dark\"\n        style={{\n          display: 'block',\n          margin: 'auto',\n          cursor: 'pointer',\n          width: 240,\n          paddingLeft: 16,\n          paddingRight: 16,\n        }}\n      />\n    </>\n  );\n});\n\nexport default Menu;\n","import React, { Suspense } from 'react';\nimport {\n  Switch, Route, Redirect, match as Match,\n} from 'react-router-dom';\nimport lazyWithPreload from '../../helpers/lazyWithPreload';\nimport Header from '../common/header/Header';\nimport Menu from './Menu';\nimport LoadingSpinner from '../common/loading-spinner';\n\n// lazy load page components\nconst Summary = lazyWithPreload(import(/* webpackChunkName: \"r_summary\" */ './summary'));\nconst Work = lazyWithPreload(import(/* webpackChunkName: \"r_work\" */ './work'));\nconst Education = lazyWithPreload(import(/* webpackChunkName: \"r_education\" */ './education'));\nconst TravelMap = lazyWithPreload(import(/* webpackChunkName: \"r_travel\" */ './travel-map'));\nconst Resume = lazyWithPreload(import(/* webpackChunkName: \"r_resume\" */ './resume'));\nconst GitTools = lazyWithPreload(import(/* webpackChunkName: \"r_git\" */ './git-tools'));\nconst Poker = lazyWithPreload(import(/* webpackChunkName: \"r_poker\" */ './poker'));\nconst MurderMystery = lazyWithPreload(import(/* webpackChunkName: \"r_poker\" */ './murder-mystery'));\nconst GraphQL = lazyWithPreload(import(/* webpackChunkName: \"r_graphql\" */ './graphql'));\nconst Cars = lazyWithPreload(import(/* webpackChunkName: \"r_cars\" */ './cars'));\n\ninterface RoutesProps {\n  handleNav: Function;\n  match: Match;\n}\n\nconst Routes: React.FC<RoutesProps> = (props: RoutesProps) => {\n  const { match, handleNav } = props;\n  const { url } = match;\n\n  const paths = [\n    { name: 'work', component: Work },\n    { name: 'education', component: Education },\n    { name: 'travel', component: TravelMap },\n    { name: 'resume', component: Resume },\n    { name: 'git-tools', component: GitTools },\n    { name: 'poker', component: Poker },\n    { name: 'murder', component: MurderMystery },\n    { name: 'graphql', component: GraphQL },\n    { name: 'cars', component: Cars },\n  ].reduce((acc: React.ReactNodeArray, obj) => {\n    const { name, component } = obj;\n    const path = `${url}${name}`;\n    acc.push(<Route key={`${path}r`} exact {...{ path, component }} />);\n    acc.push(<Redirect key={`${path}d`} from={`${path}*`} to={path} />);\n    return acc;\n  },\n  []);\n\n  return (\n    <>\n      <Header handleNav={handleNav}>\n        <Menu />\n      </Header>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Switch>\n          <Route component={Summary} exact path={`${url}`} />\n          {paths}\n          <Redirect from={`${url}*`} to={`${url}`} />\n          <Route component={Summary} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default Routes;\n"],"sourceRoot":""}