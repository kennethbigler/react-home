{"version":3,"file":"static/js/g_yahtzee.c8536583.chunk.js","mappings":"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","sources":["components/common/info-popover/InfoPopup.tsx","apis/Dice.ts","components/games/yahtzee/score-table/Header.tsx","components/games/yahtzee/score-table/TopScores.tsx","components/games/yahtzee/score-table/scoreTableHelper.ts","components/games/yahtzee/score-table/TopTable.tsx","components/games/yahtzee/types.ts","components/games/yahtzee/score-table/BottomScores.tsx","components/games/yahtzee/score-table/BottomTable.tsx","components/games/yahtzee/score-table/ScoreTable.tsx","components/games/yahtzee/ScoreGraph.tsx","components/games/yahtzee/Header.tsx","components/games/yahtzee/TableHeader.tsx","recoil/yahtzee-state.ts","components/games/yahtzee/use-yahtzee-state.ts","components/games/yahtzee/Yahtzee.tsx","hooks/useOpenState.ts"],"sourcesContent":["import * as React from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Button from \"@mui/material/Button\";\nimport useOpenState from \"../../../hooks/useOpenState\";\n\ninterface InfoPopupProps {\n  /** popup content */\n  children: React.ReactNode | React.ReactNodeArray;\n  /** title content */\n  title: string | React.ReactElement;\n  /** button content */\n  buttonText?: string | React.ReactElement;\n}\n\nconst InfoPopup = (props: InfoPopupProps): React.ReactElement => {\n  const [isOpen, handleOpen, handleClose] = useOpenState();\n  const { buttonText, title, children } = props;\n\n  return (\n    <>\n      <Button\n        onClick={handleOpen as React.MouseEventHandler}\n        variant=\"contained\"\n      >\n        {buttonText || title}\n      </Button>\n      <Dialog\n        title=\"info-popup\"\n        onClose={handleClose as React.MouseEventHandler}\n        open={isOpen}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>{children}</DialogContent>\n        <DialogActions>\n          <Button\n            color=\"secondary\"\n            onClick={handleClose as React.MouseEventHandler}\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default InfoPopup;\n","import { Dice } from \"../recoil/yahtzee-state\";\n\nexport const diceRoller = (): Dice =>\n  (Math.floor(Math.random() * 6) + 1) as Dice;\n\nexport default {\n  // randomize order of the cards\n  roll(): Dice {\n    return diceRoller();\n  },\n};\n\n// Dice as a react hook, seems kind of like an anti-pattern\nexport function useDice(): () => number {\n  function rollDice(): number {\n    return diceRoller();\n  }\n\n  return rollDice;\n}\n","import * as React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface HeaderProps {\n  style: React.CSSProperties;\n}\n\nconst Header: React.FC<HeaderProps> = React.memo((props: HeaderProps) => (\n  <TableHead>\n    <TableRow>\n      <TableCell>Minimum Required for Bonus</TableCell>\n      <TableCell>How to Score</TableCell>\n      <TableCell style={props.style}>Game Score</TableCell>\n    </TableRow>\n  </TableHead>\n));\n\nexport default Header;\n","import * as React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface TopScoresProps {\n  finalTopSum: number;\n  topSum: number;\n  style: React.CSSProperties;\n}\n\nconst TopScores: React.FC<TopScoresProps> = React.memo(\n  ({ topSum, finalTopSum, style }: TopScoresProps) => (\n    <>\n      <TableRow>\n        <TableCell colSpan={2}>Total == 63</TableCell>\n        <TableCell style={style}>{topSum}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>Bonus if &gt;= 63</TableCell>\n        <TableCell>Score 35</TableCell>\n        <TableCell style={style}>{topSum % 100 >= 63 ? 35 : 0}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell colSpan={2}>Upper Half Total</TableCell>\n        <TableCell style={style}>{finalTopSum}</TableCell>\n      </TableRow>\n      <TableRow />\n    </>\n  )\n);\n\nexport default TopScores;\n","import { TopGameScore } from \"../types\";\nimport { Dice } from \"../../../../recoil/yahtzee-state\";\n\ninterface DiceHistogram {\n  0?: number;\n  1: number;\n  2: number;\n  3: number;\n  4: number;\n  5: number;\n  6: number;\n}\n\nexport const getHistogram =\n  () =>\n  (hist: DiceHistogram, val: Dice): DiceHistogram => {\n    if (!hist[val]) {\n      hist[val] = 1;\n    } else {\n      hist[val] += 1;\n    }\n    return hist;\n  };\n\nexport const hasXDice = (values: Dice[], n: number): boolean => {\n  const hist = values.reduce(getHistogram(), {} as DiceHistogram);\n  let hasDice = false;\n  Object.values(hist).forEach((value) => {\n    if (value >= n) {\n      hasDice = true;\n    }\n  });\n  return hasDice;\n};\n\nexport const isFullHouse = (values: Dice[]): boolean => {\n  const hist = values.reduce(getHistogram(), {} as DiceHistogram);\n\n  let has3 = false;\n  let has2 = false;\n\n  Object.values(hist).forEach((value) => {\n    if (value >= 3) {\n      has3 = true;\n    } else if (value >= 2) {\n      has2 = true;\n    }\n  });\n\n  return has3 && has2;\n};\n\nexport const isStraight = (values: Dice[], length: number): boolean => {\n  const hist = values.reduce(getHistogram(), {} as DiceHistogram);\n\n  let count = 0;\n  const dice: Dice[] = [1, 2, 3, 4, 5, 6];\n  dice.forEach((i: Dice) => {\n    if (count < length) {\n      const value = hist[i];\n      if (!value) {\n        count = 0;\n      } else {\n        count += 1;\n      }\n    }\n  });\n  return count >= length;\n};\n\nexport const canYahtzeeBonus = (values: Dice[], top: TopGameScore[]): boolean =>\n  Object.entries(values.reduce(getHistogram(), {} as DiceHistogram)).reduce(\n    (acc: boolean, [key, value]) => {\n      if (value === 5 && top[Number(key) - 1].score >= 0) {\n        return true;\n      }\n      return acc;\n    },\n    false\n  );\n","import * as React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { BottomGameScore, TopGameScore } from \"../types\";\nimport { Dice } from \"../../../../recoil/yahtzee-state\";\nimport TopScores from \"./TopScores\";\nimport { hasXDice } from \"./scoreTableHelper\";\n\ninterface TopTableProps {\n  finalTopSum: number;\n  getScoreButton: (\n    showButton: boolean,\n    points: number,\n    wasTop: boolean,\n    i: number\n  ) => React.ReactNode;\n  showScoreButtons: boolean;\n  style: React.CSSProperties;\n  top: TopGameScore[];\n  bottom: BottomGameScore[];\n  topSum: number;\n  values: Dice[];\n}\n\nconst TopTable: React.FC<TopTableProps> = (props: TopTableProps) => {\n  const {\n    bottom,\n    values,\n    showScoreButtons,\n    getScoreButton,\n    top,\n    style,\n    topSum,\n    finalTopSum,\n  } = props;\n\n  const getButtonInfo = (d: number): [number, number] =>\n    values.reduce(\n      (count, val) => {\n        if (val === d) {\n          count[0] += 1;\n          count[1] += d;\n        }\n        return count;\n      },\n      [0, 0]\n    );\n\n  const hasYahtzee = bottom[5].score > 0;\n  const yahtzeeBonus = hasYahtzee && hasXDice(values, 5);\n\n  const getTopTableButtons = (\n    score: number,\n    showButton: boolean,\n    sum: number,\n    i: number\n  ): React.ReactNode | null => {\n    if (score >= 0) {\n      return score;\n    }\n    return showScoreButtons\n      ? getScoreButton(showButton, yahtzeeBonus ? sum + 100 : sum, true, i)\n      : null;\n  };\n\n  return (\n    <>\n      {top.map(({ name, score }, i) => {\n        const d = i + 1;\n        const [count, sum] = getButtonInfo(d);\n        const showButton = count >= 1;\n\n        return (\n          <TableRow key={name}>\n            <TableCell>{`${name}: ${d},${d},${d} = ${d * 3}`}</TableCell>\n            <TableCell>{`Add Only ${name}`}</TableCell>\n            <TableCell style={style}>\n              {getTopTableButtons(score, showButton, sum, i)}\n            </TableCell>\n          </TableRow>\n        );\n      })}\n      <TopScores topSum={topSum} finalTopSum={finalTopSum} style={style} />\n    </>\n  );\n};\n\nexport default TopTable;\n","export const ADD_DICE = \"Sum of Dice\";\ntype AddDice = \"Sum of Dice\";\n\nexport interface TopGameScore {\n  name: string;\n  score: number;\n}\nexport interface BottomGameScore {\n  name: string;\n  score: number;\n  hint: string;\n  points: number | AddDice;\n}\n\nexport default ADD_DICE;\n","import * as React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface BottomScoresProps {\n  bottomSum: number;\n  finalTopSum: number;\n  style: React.CSSProperties;\n}\n\nconst BottomScores: React.FC<BottomScoresProps> = React.memo(\n  ({ finalTopSum, bottomSum, style }: BottomScoresProps) => (\n    <>\n      <TableRow>\n        <TableCell colSpan={2}>Lower Half Total</TableCell>\n        <TableCell style={style}>{bottomSum}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell colSpan={2}>Upper Half Total</TableCell>\n        <TableCell style={style}>{finalTopSum}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell colSpan={2}>Grand Total</TableCell>\n        <TableCell style={style}>{finalTopSum + bottomSum}</TableCell>\n      </TableRow>\n    </>\n  )\n);\n\nexport default BottomScores;\n","import * as React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { TopGameScore, BottomGameScore, ADD_DICE } from \"../types\";\nimport { Dice } from \"../../../../recoil/yahtzee-state\";\nimport {\n  hasXDice,\n  isFullHouse,\n  isStraight,\n  canYahtzeeBonus,\n} from \"./scoreTableHelper\";\nimport BottomScores from \"./BottomScores\";\n\ninterface BottomTableProps {\n  bottom: BottomGameScore[];\n  bottomSum: number;\n  finalTopSum: number;\n  getScoreButton: (\n    showButton: boolean,\n    points: number,\n    wasTop: boolean,\n    i: number\n  ) => React.ReactNode;\n  showScoreButtons: boolean;\n  style: React.CSSProperties;\n  top: TopGameScore[];\n  values: Dice[];\n}\n\nconst getDiceValue = (values: Dice[]): number =>\n  values.reduce((sum: number, d) => sum + d, 0);\n\nconst showButton = (i: number, values: Dice[]): boolean => {\n  switch (i) {\n    case 0: // 3 of a kind\n      return hasXDice(values, 3);\n    case 1: // 4 of a kind\n      return hasXDice(values, 4);\n    case 2: // Full House\n      return isFullHouse(values);\n    case 3: // Sm. Straight\n      return isStraight(values, 4);\n    case 4: // Lg. Straight\n      return isStraight(values, 5);\n    case 5: // Yahtzee\n      return hasXDice(values, 5);\n    case 6: // Chance\n      return true;\n    default:\n      // eslint-disable-next-line no-console\n      console.error(\"Unexpected Value\");\n      return false;\n  }\n};\n\nconst BottomTable: React.FC<BottomTableProps> = (props: BottomTableProps) => {\n  const { values, showScoreButtons, getScoreButton, top } = props;\n  const getBottomTableButtons = React.useCallback(\n    (\n      score: number,\n      points: number,\n      hasYahtzee: boolean,\n      i: number\n    ): React.ReactNode | null => {\n      if (score >= 0) {\n        return score;\n      }\n      if (showScoreButtons) {\n        // Yahtzee Bonus\n        if (hasYahtzee) {\n          if (canYahtzeeBonus(values, top)) {\n            return getScoreButton(true, points + 100, false, i);\n          }\n        }\n        return getScoreButton(showButton(i, values), points, false, i);\n      }\n      return null;\n    },\n    [getScoreButton, showScoreButtons, top, values]\n  );\n\n  const { bottom, style } = props;\n  const generateBottomTable = React.useCallback((): React.ReactNode => {\n    const hasYahtzee = bottom[5].score > 0;\n    return bottom.map((gameScore, i) => {\n      const { name, hint, points, score } = gameScore;\n\n      const parsedPoints = points === ADD_DICE ? getDiceValue(values) : points;\n\n      return (\n        <TableRow key={name}>\n          <TableCell>{name}</TableCell>\n          <TableCell>{hint}</TableCell>\n          <TableCell style={style}>\n            {getBottomTableButtons(score, parsedPoints, hasYahtzee, i)}\n          </TableCell>\n        </TableRow>\n      );\n    });\n  }, [bottom, getBottomTableButtons, style, values]);\n\n  const { finalTopSum, bottomSum } = props;\n\n  return (\n    <>\n      {generateBottomTable()}\n      <BottomScores\n        bottomSum={bottomSum}\n        finalTopSum={finalTopSum}\n        style={style}\n      />\n    </>\n  );\n};\n\nexport default BottomTable;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport { TopGameScore, BottomGameScore } from \"../types\";\nimport { Dice } from \"../../../../recoil/yahtzee-state\";\nimport Header from \"./Header\";\nimport TopTable from \"./TopTable\";\nimport BottomTable from \"./BottomTable\";\n\ninterface ScoreTableProps {\n  bottom: BottomGameScore[];\n  bottomSum: number;\n  finalTopSum: number;\n  onTopScore: (points: number, i: number) => void;\n  onBottomScore: (points: number, i: number) => void;\n  showScoreButtons: boolean;\n  top: TopGameScore[];\n  topSum: number;\n  values: Dice[];\n}\n\nconst centerStyle: React.CSSProperties = { textAlign: \"center\" };\n\nconst ScoreTable: React.FC<ScoreTableProps> = (props: ScoreTableProps) => {\n  const {\n    bottom,\n    bottomSum,\n    finalTopSum,\n    showScoreButtons,\n    top,\n    topSum,\n    values,\n    onTopScore,\n    onBottomScore,\n  } = props;\n\n  const getScoreButton = React.useCallback(\n    (\n      showButton: boolean,\n      points: number,\n      wasTop: boolean,\n      i: number\n    ): React.ReactNode =>\n      showButton ? (\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          onClick={\n            wasTop\n              ? (): void => onTopScore(points, i)\n              : (): void => onBottomScore(points, i)\n          }\n        >\n          {`Add ${points} Points`}\n        </Button>\n      ) : (\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          onClick={\n            wasTop\n              ? (): void => onTopScore(0, i)\n              : (): void => onBottomScore(0, i)\n          }\n        >\n          0\n        </Button>\n      ),\n    [onBottomScore, onTopScore]\n  );\n\n  return (\n    <Table size=\"small\">\n      <Header style={centerStyle} />\n      <TableBody>\n        <TopTable\n          finalTopSum={finalTopSum}\n          getScoreButton={getScoreButton}\n          showScoreButtons={showScoreButtons}\n          style={centerStyle}\n          top={top}\n          values={values}\n          bottom={bottom}\n          topSum={topSum}\n        />\n        <BottomTable\n          finalTopSum={finalTopSum}\n          getScoreButton={getScoreButton}\n          showScoreButtons={showScoreButtons}\n          style={centerStyle}\n          top={top}\n          values={values}\n          bottom={bottom}\n          bottomSum={bottomSum}\n        />\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default ScoreTable;\n","import * as React from \"react\";\nimport {\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Tooltip,\n  AreaChart,\n  Area,\n} from \"recharts\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport InfoPopup from \"../../common/info-popover/InfoPopup\";\n\ninterface ScoreGraphProps {\n  scores: number[];\n}\ninterface ScoreGraphEntry {\n  value: number;\n}\n\nconst generateScoreGraph = (scores: number[]): ScoreGraphEntry[] =>\n  scores.map((value) => ({ value }));\n\nconst ScoreGraph: React.FC<ScoreGraphProps> = (props: ScoreGraphProps) => {\n  const {\n    palette: {\n      secondary: { main },\n    },\n  } = useTheme();\n  const { scores: dBScores } = props;\n\n  const scores = React.useMemo(() => generateScoreGraph(dBScores), [dBScores]);\n  const recent = scores[scores.length - 1] || { value: 0 };\n  const mostRecent = recent.value;\n  const top = scores.reduce(\n    (prev, curr) => (curr.value > prev.value ? curr : prev),\n    { value: 0 }\n  );\n  const topScore = top.value;\n\n  return (\n    <InfoPopup title=\"Yahtzee Score History\" buttonText=\"Score History\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <AreaChart data={scores}>\n          <defs>\n            <linearGradient id=\"mainColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"20%\" stopColor={main} stopOpacity={0.8} />\n              <stop offset=\"100%\" stopColor={main} stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n          <YAxis width={40} orientation=\"right\" tickLine={false} />\n          <Tooltip />\n          <Area\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke={main}\n            fillOpacity={1}\n            fill=\"url(#mainColor)\"\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n      <Typography variant=\"h4\">{`Most Recent: ${mostRecent}`}</Typography>\n      <Typography variant=\"h4\">{`Top Score: ${topScore}`}</Typography>\n    </InfoPopup>\n  );\n};\n\nexport default ScoreGraph;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport ScoreGraph from \"./ScoreGraph\";\n\ninterface HeaderProps {\n  scores: number[];\n  money: number;\n  name: string;\n}\n\nconst Header: React.FC<HeaderProps> = ({\n  scores,\n  money,\n  name,\n}: HeaderProps) => (\n  <>\n    <Typography variant=\"h2\" component=\"h1\">\n      Yahtzee\n    </Typography>\n    <div className=\"flex-container\">\n      <Typography variant=\"h4\" component=\"h2\">\n        {name}: ${money}\n      </Typography>\n      <ScoreGraph scores={scores} />\n    </div>\n  </>\n);\n\nexport default Header;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { Dice } from \"../../../recoil/yahtzee-state\";\n\ninterface TableHeaderProps {\n  roll: Dice;\n  values: Dice[];\n  saved: Dice[];\n  handleUnsave: (i: number) => void;\n  handleSave: (i: number) => void;\n  handleDiceRoll: React.MouseEventHandler;\n  getButtonText: (roll: Dice) => string;\n}\n\nconst wrapperStyles: React.CSSProperties = {\n  display: \"block\",\n  margin: \"auto\",\n  width: 320,\n};\n\nconst TableHeader: React.FC<TableHeaderProps> = (props: TableHeaderProps) => {\n  const {\n    values,\n    saved,\n    roll,\n    handleUnsave,\n    handleSave,\n    handleDiceRoll,\n    getButtonText,\n  } = props;\n\n  return (\n    <div className=\"flex-container\">\n      <Typography variant=\"h4\" component=\"h3\">{`Roll #${roll}/3`}</Typography>\n      <div style={wrapperStyles}>\n        {saved.map((val, i) => (\n          <Button\n            key={i}\n            variant=\"contained\"\n            onClick={(): void => handleUnsave(i)}\n          >\n            {val}\n          </Button>\n        ))}\n        {values.map((val, i) => (\n          <Button\n            key={i}\n            color=\"secondary\"\n            variant=\"outlined\"\n            onClick={(): void => handleSave(i)}\n          >\n            {val}\n          </Button>\n        ))}\n      </div>\n      <Button\n        onClick={handleDiceRoll}\n        variant=\"contained\"\n        disabled={roll === 3}\n      >\n        {getButtonText(roll)}\n      </Button>\n    </div>\n  );\n};\n\nexport default TableHeader;\n","import { atom, DefaultValue, selector } from \"recoil\";\nimport playerAtom from \"./player-atom\";\n\nexport const dice = [0, 1, 2, 3, 4, 5, 6] as const;\nexport type Dice = (typeof dice)[number];\nexport interface YahtzeeState {\n  roll: Dice;\n  values: Dice[];\n  saved: Dice[];\n  turn: number;\n  showScoreButtons: boolean;\n  topScores: number[];\n  bottomScores: number[];\n  scores: number[];\n}\n\nexport const newYahtzee = (): Omit<YahtzeeState, \"scores\"> => ({\n  roll: 0,\n  values: [0, 0, 0, 0, 0],\n  saved: [],\n  turn: 0,\n  showScoreButtons: false,\n  topScores: [-1, -1, -1, -1, -1, -1],\n  bottomScores: [-1, -1, -1, -1, -1, -1, -1],\n});\n\nexport const yahtzeeAtom = atom({\n  key: \"yahtzeeAtom\",\n  default: (JSON.parse(\n    localStorage.getItem(\"yahtzee-atom\") || \"null\"\n  ) as YahtzeeState) || { ...newYahtzee(), scores: [] },\n  effects: [\n    ({ onSet }) => {\n      onSet((newState) => {\n        localStorage.setItem(\"yahtzee-atom\", JSON.stringify(newState));\n      });\n    },\n  ],\n});\n\nexport const sumsYahtzeeSelector = selector({\n  key: \"sumsYahtzeeSelector\",\n  get: ({ get }) => {\n    const { topScores, bottomScores } = get(yahtzeeAtom);\n\n    let count = 0;\n\n    const topSum = topScores.reduce((sum, score) => {\n      if (score >= 0) {\n        count += 1;\n        sum += score;\n      }\n      return sum;\n    }, 0);\n\n    const bottomSum = bottomScores.reduce((sum, score) => {\n      if (score >= 0) {\n        count += 1;\n        sum += score;\n      }\n      return sum;\n    }, 0);\n\n    let finalTopSum = topSum;\n    if (topSum >= 63) {\n      finalTopSum += 35;\n    }\n\n    const finish = count >= 13;\n\n    return {\n      topSum,\n      bottomSum,\n      finalTopSum,\n      finish,\n    };\n  },\n});\n\nconst yahtzeeState = selector({\n  key: \"yahtzeeState\",\n  get: ({ get }) => {\n    const yahtzee = get(yahtzeeAtom);\n    const { money, name } = get(playerAtom)[0];\n\n    return { ...yahtzee, money, name };\n  },\n  set: ({ get, set }, state) => {\n    if (!(state instanceof DefaultValue)) {\n      const { money, name, ...yahtzee } = state;\n      set(yahtzeeAtom, yahtzee);\n\n      const players = get(playerAtom);\n      const newPlayers = [...players];\n      newPlayers[0] = { ...players[0], money };\n      set(playerAtom, newPlayers);\n    }\n  },\n});\n\nexport default yahtzeeState;\n","import { useRecoilState } from \"recoil\";\nimport yahtzeeState, { newYahtzee, Dice } from \"../../../recoil/yahtzee-state\";\n\nconst useYahtzeeState = () => {\n  const [state, setState] = useRecoilState(yahtzeeState);\n\n  const newGame = (score: number) =>\n    setState({\n      name: state.name,\n      ...newYahtzee(),\n      scores: [...state.scores, score],\n      money: state.money + Math.ceil(score / 10),\n    });\n  const diceClick = (values: Dice[], saved: Dice[]) =>\n    setState({\n      ...state,\n      values,\n      saved,\n    });\n  const updateTop = (topScores: number[]) =>\n    setState({\n      ...state,\n      topScores,\n      showScoreButtons: false,\n      roll: 0,\n      values: [0, 0, 0, 0, 0],\n      saved: [],\n    });\n  const updateBottom = (bottomScores: number[]) =>\n    setState({\n      ...state,\n      bottomScores,\n      showScoreButtons: false,\n      roll: 0,\n      values: [0, 0, 0, 0, 0],\n      saved: [],\n    });\n  const updateRoll = (\n    values: Dice[],\n    saved: Dice[],\n    roll: Dice,\n    payToPlay: boolean\n  ) =>\n    setState({\n      ...state,\n      values,\n      saved,\n      roll,\n      showScoreButtons: true,\n      money: payToPlay ? state.money - 25 : state.money,\n    });\n\n  return {\n    state,\n    newGame,\n    diceClick,\n    updateTop,\n    updateBottom,\n    updateRoll,\n  };\n};\n\nexport default useYahtzeeState;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { useRecoilValue } from \"recoil\";\nimport DiceAPI from \"../../../apis/Dice\";\nimport ScoreTable from \"./score-table/ScoreTable\";\nimport { ADD_DICE, BottomGameScore } from \"./types\";\nimport Header from \"./Header\";\nimport TableHeader from \"./TableHeader\";\nimport { Dice, sumsYahtzeeSelector } from \"../../../recoil/yahtzee-state\";\nimport useYahtzeeState from \"./use-yahtzee-state\";\n\nconst topConstants = [\n  { name: \"Aces\" },\n  { name: \"Twos\" },\n  { name: \"Threes\" },\n  { name: \"Fours\" },\n  { name: \"Fives\" },\n  { name: \"Sixes\" },\n];\nconst bottomConstants = [\n  { name: \"3 of a kind\", hint: ADD_DICE, points: ADD_DICE },\n  { name: \"4 of a kind\", hint: ADD_DICE, points: ADD_DICE },\n  { name: \"Full House\", hint: \"Score 25\", points: 25 },\n  { name: \"Sm. Straight (4)\", hint: \"Score 30\", points: 30 },\n  { name: \"Lg. Straight (5)\", hint: \"Score 40\", points: 40 },\n  { name: \"Yahtzee\", hint: \"Score 50\", points: 50 },\n  { name: \"Chance\", hint: ADD_DICE, points: ADD_DICE },\n];\n\nconst Yahtzee: React.FC = () => {\n  const { state, diceClick, newGame, updateTop, updateBottom, updateRoll } =\n    useYahtzeeState();\n\n  const {\n    topScores,\n    bottomScores,\n    values,\n    saved,\n    roll,\n    showScoreButtons,\n    scores,\n    money,\n    name,\n  } = state;\n\n  const { topSum, bottomSum, finalTopSum, finish } =\n    useRecoilValue(sumsYahtzeeSelector);\n\n  const handleDiceRoll = (): void => {\n    if (finish) {\n      newGame(finalTopSum + bottomSum);\n      return;\n    }\n    if (roll >= 3) {\n      return;\n    }\n\n    const newValues = [...values];\n    const newSaved = [...saved];\n\n    for (let i = 0; i < newValues.length; i += 1) {\n      newValues[i] = DiceAPI.roll();\n    }\n    newValues.sort();\n    newSaved.sort();\n    updateRoll(\n      newValues,\n      newSaved,\n      (roll + 1) as Dice,\n      bottomSum + topSum === 0 && roll === 0\n    );\n  };\n\n  const handleSave = (i: number): void => {\n    if (values[i] === 0) {\n      return;\n    }\n    const newValues = [...values];\n    const newSaved = [...saved];\n    newSaved.push(newValues.splice(i, 1)[0]);\n    newSaved.sort();\n    diceClick(newValues, newSaved);\n  };\n\n  const handleUnsave = (i: number): void => {\n    const newValues = [...values];\n    const newSaved = [...saved];\n    newValues.push(newSaved.splice(i, 1)[0]);\n    newValues.sort();\n    diceClick(newValues, newSaved);\n  };\n\n  const getButtonText = React.useCallback(\n    (rollNum: Dice): string => {\n      if (finish) {\n        return \"New Game\";\n      }\n\n      switch (rollNum) {\n        case 0:\n          return \"First Roll\";\n        case 1:\n          return \"Second Roll\";\n        case 2:\n          return \"Last Roll\";\n        case 3:\n          return \"Score\";\n        default:\n          return \"Error\";\n      }\n    },\n    [finish]\n  );\n\n  const handleTopScore = (points: number, i: number): void => {\n    const newTopScores = [...topScores];\n    newTopScores[i] = points;\n    updateTop(newTopScores);\n  };\n\n  const handleBottomScore = (points: number, i: number): void => {\n    const newBottomScores = [...bottomScores];\n    newBottomScores[i] = points;\n    updateBottom(newBottomScores);\n  };\n\n  const top = topScores.map((score, i) => ({ ...topConstants[i], score }));\n  const bottom = bottomScores.map((score, i) => ({\n    ...bottomConstants[i],\n    score,\n  })) as BottomGameScore[];\n\n  return (\n    <>\n      <Header scores={scores} money={money} name={name} />\n      <hr />\n      <TableHeader\n        values={values}\n        saved={saved}\n        roll={roll}\n        handleUnsave={handleUnsave}\n        handleSave={handleSave}\n        handleDiceRoll={handleDiceRoll}\n        getButtonText={getButtonText}\n      />\n      <hr />\n      <Typography variant=\"h4\">{`Total: ${\n        finalTopSum + bottomSum\n      }`}</Typography>\n      <ScoreTable\n        values={[...saved, ...values]}\n        bottom={bottom}\n        top={top}\n        onTopScore={handleTopScore}\n        onBottomScore={handleBottomScore}\n        showScoreButtons={showScoreButtons}\n        topSum={topSum}\n        finalTopSum={finalTopSum}\n        bottomSum={bottomSum}\n      />\n    </>\n  );\n};\n\nexport default Yahtzee;\n","import * as React from \"react\";\n\ntype OpenStateHook = [boolean, () => void, () => void];\n\nconst useOpenState = (defaultVal = false): OpenStateHook => {\n  const [isOpen, setIsOpen] = React.useState(defaultVal);\n\n  const handleOpen = (): void => {\n    setIsOpen(true);\n  };\n  const handleClose = (): void => {\n    setIsOpen(false);\n  };\n\n  return [isOpen, handleOpen, handleClose];\n};\n\nexport default useOpenState;\n"],"names":["props","useOpenState","isOpen","handleOpen","handleClose","buttonText","title","children","onClick","variant","onClose","open","maxWidth","fullWidth","color","diceRoller","Math","floor","random","React","TableHead","TableRow","TableCell","style","topSum","finalTopSum","colSpan","hasXDice","values","n","hist","reduce","val","hasDice","Object","forEach","value","isStraight","length","count","i","bottom","showScoreButtons","getScoreButton","top","yahtzeeBonus","score","getTopTableButtons","showButton","sum","map","name","d","getButtonInfo","ADD_DICE","bottomSum","has3","has2","isFullHouse","console","error","getBottomTableButtons","points","hasYahtzee","entries","acc","key","Number","canYahtzeeBonus","generateBottomTable","gameScore","hint","parsedPoints","getDiceValue","centerStyle","textAlign","onTopScore","onBottomScore","wasTop","Button","Table","size","TableBody","main","useTheme","palette","secondary","dBScores","scores","generateScoreGraph","mostRecent","topScore","prev","curr","InfoPopup","ResponsiveContainer","width","height","AreaChart","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","interval","YAxis","orientation","tickLine","Tooltip","Area","type","stroke","fillOpacity","fill","Typography","money","component","className","wrapperStyles","display","margin","saved","roll","handleUnsave","handleSave","handleDiceRoll","getButtonText","disabled","yahtzeeAtom","atom","default","JSON","parse","localStorage","getItem","turn","topScores","bottomScores","effects","onSet","newState","setItem","stringify","sumsYahtzeeSelector","selector","get","finish","yahtzee","playerAtom","set","state","DefaultValue","players","newPlayers","useRecoilState","yahtzeeState","setState","newGame","ceil","diceClick","updateTop","updateBottom","updateRoll","payToPlay","topConstants","bottomConstants","useYahtzeeState","useRecoilValue","rollNum","newValues","newSaved","push","splice","sort","DiceAPI","newTopScores","newBottomScores","defaultVal","setIsOpen"],"sourceRoot":""}