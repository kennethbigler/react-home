{"version":3,"file":"static/js/g_slots.25ab0602.chunk.js","mappings":"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","sources":["components/games/slots/PayoutTable.tsx","components/games/slots/MoneyTable.tsx","components/games/slots/ReelDisplay.tsx","components/games/slots/Slots.tsx","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { DBSlotOptions as SO } from \"../../../store/types\";\n\n/** used to display the payout table */\nconst payoutTable = [\n  { symbol: `${SO.JACKPOT} ${SO.JACKPOT} ${SO.JACKPOT}`, payout: 1666 },\n  { symbol: `${SO.SEVEN} ${SO.SEVEN} ${SO.SEVEN}`, payout: 300 },\n  { symbol: `${SO.TRIPLE_BAR} ${SO.TRIPLE_BAR} ${SO.TRIPLE_BAR}`, payout: 100 },\n  { symbol: `${SO.DOUBLE_BAR} ${SO.DOUBLE_BAR} ${SO.DOUBLE_BAR}`, payout: 50 },\n  { symbol: `${SO.BAR} ${SO.BAR} ${SO.BAR}`, payout: 25 },\n  { symbol: \"3 of any bar\", payout: 12 },\n  { symbol: `${SO.CHERRY} ${SO.CHERRY} ${SO.CHERRY}`, payout: 12 },\n  { symbol: `${SO.CHERRY} ${SO.CHERRY}`, payout: 6 },\n  { symbol: SO.CHERRY, payout: 3 },\n];\n\nconst PayoutTable: React.FC = React.memo(() => (\n  <Table>\n    <TableHead>\n      <TableRow>\n        <TableCell>Slot Roll</TableCell>\n        <TableCell>Payout</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {payoutTable.map((row, i) => (\n        <TableRow key={i}>\n          <TableCell>{row.symbol}</TableCell>\n          <TableCell>{`${row.payout} : 1`}</TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n));\n\nexport default PayoutTable;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface MoneyTableProps {\n  playerName: string;\n  playerMoney: number;\n  dealerMoney: number;\n}\n\nconst MoneyTable: React.FC<MoneyTableProps> = React.memo(\n  ({ playerName, playerMoney, dealerMoney }: MoneyTableProps) => (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Player</TableCell>\n          <TableCell>Money</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow>\n          <TableCell>{playerName}</TableCell>\n          <TableCell>{`$${playerMoney}`}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>House</TableCell>\n          <TableCell>{`$${dealerMoney}`}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  )\n);\n\nexport default MoneyTable;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport { DBSlotDisplay } from \"../../../store/types\";\n\ninterface ReelDisplayProps {\n  reel: DBSlotDisplay[];\n}\n\nconst cellStyles: React.CSSProperties = {\n  minHeight: 39,\n  fontWeight: 900,\n};\n\nconst ReelDisplay: React.FC<ReelDisplayProps> = (props: ReelDisplayProps) => {\n  const { reel } = props;\n  /** generate code for slot machine */\n  const getSlots = React.useCallback((): React.ReactNode[] => {\n    // display for slots\n    const slots = [];\n    for (let i = 0; i < 3; i += 1) {\n      // create 3 cells in a row\n      const row = reel.map((reelRow, j) => (\n        <TableCell key={`${j},${i}`}>\n          <Typography\n            variant=\"h4\"\n            align=\"center\"\n            color=\"secondary\"\n            style={cellStyles}\n          >\n            {reelRow[i]}\n          </Typography>\n        </TableCell>\n      ));\n      // separate into rows\n      const slotRow = <TableRow key={`row${i}`}>{row}</TableRow>;\n      slots.push(slotRow);\n    }\n    return slots;\n  }, [reel]);\n\n  return (\n    <Table>\n      <TableBody>{getSlots()}</TableBody>\n    </Table>\n  );\n};\n\nexport default ReelDisplay;\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { updateDBSlotMachine } from \"../../../store/modules/slots\";\nimport { DBRootState } from \"../../../store/types\";\nimport PayoutTable from \"./PayoutTable\";\nimport MoneyTable from \"./MoneyTable\";\nimport ReelDisplay from \"./ReelDisplay\";\n\n/* Slots  ->  ReelDisplay\n *       |->  MoneyTable\n *       |->  PayoutTable */\nconst Slots: React.FC = () => {\n  const { players, reel } = useSelector((state: DBRootState) => ({\n    players: state.players,\n    reel: state.slots,\n  }));\n  const dispatch = useDispatch();\n\n  const updateSlotMachine = useCallback((): void => {\n    const { id, bet } = players[0];\n    const dealerId = players[players.length - 1].id;\n    dispatch(updateDBSlotMachine(id, dealerId, bet));\n  }, [players, dispatch]);\n\n  // https://vegasclick.com/games/slots/how-they-work\n  const player = players[0];\n  const dealer = players[players.length - 1];\n\n  return (\n    <>\n      <Typography variant=\"h2\">Casino Slot Machine</Typography>\n      <Grid container spacing={1} style={{ marginTop: \"2em\" }}>\n        <Grid item sm={6} xs={12}>\n          <Grid container spacing={1} style={{ marginBottom: \"1em\" }}>\n            <Grid item sm={3} xs={12}>\n              <Button\n                color=\"primary\"\n                onClick={updateSlotMachine}\n                style={{ marginBottom: 15 }}\n                variant=\"contained\"\n                role=\"button\"\n              >\n                Spin\n              </Button>\n            </Grid>\n            <Grid item sm={9} xs={12}>\n              <ReelDisplay reel={reel} />\n            </Grid>\n          </Grid>\n          <MoneyTable\n            playerMoney={player.money}\n            playerName={player.name}\n            dealerMoney={dealer.money}\n          />\n        </Grid>\n        <Grid item sm={6} xs={12}>\n          <PayoutTable />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Slots;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["payoutTable","symbol","SO","payout","React","Table","TableHead","TableRow","TableCell","TableBody","map","row","i","playerName","playerMoney","dealerMoney","cellStyles","minHeight","fontWeight","props","reel","getSlots","slots","reelRow","j","Typography","variant","align","color","style","slotRow","push","useSelector","state","players","dispatch","useDispatch","updateSlotMachine","useCallback","id","bet","dealerId","length","updateDBSlotMachine","player","dealer","Grid","container","spacing","marginTop","item","sm","xs","marginBottom","Button","onClick","role","money","name","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","overridesResolver","styles","root","display","tablelvl2","defaultComponent","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","Tablelvl2Context","value","children","as","clsx"],"sourceRoot":""}