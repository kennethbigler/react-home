{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/colors/grey.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","components/games/tictactoe/Header.tsx","components/games/tictactoe/helpers.ts","components/games/tictactoe/History.tsx","components/games/tictactoe/Cell.tsx","components/games/tictactoe/Board.tsx","components/games/tictactoe/TicTacToe.tsx","components/games/tictactoe/index.ts"],"names":["Tablelvl2Context","React","createContext","TableContext","Object","defineProperty","exports","value","default","_default","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","Table","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","other","_objectWithoutProperties","table","useMemo","createElement","Provider","_extends","clsx","root","withStyles","theme","display","width","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","name","tablelvl2","variant","TableBody","TableRow","_props$hover","hover","_props$selected","selected","useContext","head","footer","verticalAlign","outline","backgroundColor","type","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","ariaSort","concat","capitalize","borderBottom","lighten","fade","divider","darken","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","background","Header","memo","winner","turn","newGame","Toolbar","Typography","style","flex","Button","onClick","getTurn","n","O","X","calculateWinner","board","lines","i","length","a","b","c","EMPTY","winRow","undefined","History","useState","ascend","setAscend","history","step","jumpToStep","getHistoryText","useCallback","round","move","location","description","Math","floor","key","moves","map","reverse","marginTop","marginBottom","Cell","main","useTheme","attr","tableCellStyle","border","grey","Board","cells","newCells","row","j","includes","push","boardRow","paperStyles","margin","TicTacToe","useSelector","state","ticTacToe","dispatch","useDispatch","handleClick","newHistory","slice","playTurn","newTTTGame","stepNo","newTurn","gutterBottom","Paper","elevation"],"mappings":"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","file":"static/js/g_tictactoe.2e20a7aa.chunk.js","sourcesContent":["import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#d5d5d5',\n  A200: '#aaaaaa',\n  A400: '#303030',\n  A700: '#616161'\n};\nvar _default = grey;\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'table' : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return React.createElement(TableContext.Provider, {\n    value: table\n  }, React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tbody' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$selected': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.04)' // grey[100]\n        : 'rgba(255, 255, 255, 0.08)'\n      },\n      '&$hover:hover': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.07)' // grey[200]\n        : 'rgba(255, 255, 255, 0.14)'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tr' : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      head: classes.head,\n      footer: classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0px 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var Component;\n\n  if (component) {\n    Component = component;\n  } else {\n    Component = tablelvl2 && tablelvl2.variant === 'head' ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && tablelvl2 && tablelvl2.variant === 'head') {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], {\n      head: table && table.stickyHeader && classes.stickyHeader\n    }[variant]),\n    \"aria-sort\": ariaSort,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['head', 'body', 'footer'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\ninterface HeaderProps {\n  newGame: React.MouseEventHandler;\n  turn: string;\n  winner?: string;\n}\n\nconst Header: React.FC<HeaderProps> = React.memo(({ winner, turn, newGame }: HeaderProps) => (\n  <Toolbar>\n    <Typography style={{ flex: 1 }} variant=\"h6\">\n      {winner ? `Winner: ${winner}` : `Turn: ${turn}`}\n    </Typography>\n    <Button color=\"primary\" onClick={newGame} variant=\"contained\">\n      Reset Game\n    </Button>\n  </Toolbar>\n));\n\nexport default Header;\n","import { O, X, EMPTY } from '../../../store/initialState';\n\nexport const getTurn = (n: number): string => (n % 2 ? O : X);\n\n/** function to check if there are 3 in a row\n * @return value of winner and positions for winner */\nexport function calculateWinner(board: string[] | undefined[]): { winner?: string; winRow: [number?, number?, number?] } {\n  const lines: [number, number, number][] = [\n    // horizontal\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    // vertical\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    // diagonal\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  // check each win condition\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    // if all 3 match and aren't empty\n    if (board[a] !== EMPTY && board[a] === board[b] && board[a] === board[c]) {\n      // return winner and winning positions\n      return { winner: board[a], winRow: lines[i] };\n    }\n  }\n  return { winner: undefined, winRow: []};\n}\n\nexport default getTurn;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { getTurn } from './helpers';\nimport { DBHistoryEntry } from '../../../store/types';\n\ninterface HistoryProps {\n  history: DBHistoryEntry[];\n  jumpToStep: Function;\n  step: number;\n}\n\nconst History: React.FC<HistoryProps> = (props: HistoryProps) => {\n  const [ascend, setAscend] = React.useState(true);\n  const { history, step, jumpToStep } = props;\n\n  /** function that generates text for the history tracker */\n  const getHistoryText = React.useCallback((round: DBHistoryEntry, move: number): React.ReactNode => {\n    const location = round.location || 0;\n    // generate description text\n    const description = !move\n      ? 'Game Start (Turn, Col, Row)'\n      : `Move #${move} (${getTurn(move - 1)}, `\n      + `${Math.floor(location / 3)}, ${location % 3})`;\n    // highlight current turn displayed on board\n    const color = step === move ? 'secondary' : 'default';\n\n    return (\n      <Button\n        key={move}\n        color={color}\n        onClick={(): void => jumpToStep(move)}\n        style={{ display: 'block' }}\n      >\n        {description}\n      </Button>\n    );\n  }, [jumpToStep, step]);\n\n  // move history\n  const moves = history.map(getHistoryText);\n  // asc vs. desc\n  !ascend && moves.reverse();\n\n  return (\n    <>\n      <Button\n        onClick={(): void => { setAscend(!ascend); }}\n        style={{ marginTop: 20, marginBottom: 20 }}\n        variant=\"contained\"\n      >\n        {ascend ? 'Asc' : 'Desc'}\n      </Button>\n      {moves}\n    </>\n  );\n};\n\nexport default History;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useTheme } from '@material-ui/core/styles';\n\ninterface CellProps {\n  onClick: React.MouseEventHandler;\n  value?: string;\n  winner: boolean;\n}\n\nconst Cell: React.FC<CellProps> = React.memo((props: CellProps) => {\n  const { value, winner, onClick } = props;\n  const { palette: { primary: { main }}} = useTheme();\n  // add attributes if cell is a winner\n  const attr: React.CSSProperties = winner ? { color: 'white', backgroundColor: main } : {};\n\n  return (\n    <Button onClick={onClick} style={attr}>\n      {value || <br />}\n    </Button>\n  );\n});\n\nexport default Cell;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport grey from '@material-ui/core/colors/grey';\nimport Cell from './Cell';\n\ninterface BoardProps {\n  board: string[] | undefined[];\n  onClick: Function;\n  winRow: [number?, number?, number?];\n}\n\nconst tableCellStyle: React.CSSProperties = {\n  padding: 0,\n  textAlign: 'center',\n  border: `1px solid ${grey[400]}`,\n};\n\nconst Board: React.FC<BoardProps> = (props: BoardProps) => {\n  const { board, onClick, winRow } = props;\n\n  const cells = React.useMemo(() => {\n    const newCells = [];\n\n    // create 3 rows\n    for (let i = 0; i < 3; i += 1) {\n      // create 3 cells in a row\n      const row = [];\n      for (let j = 0; j < 3; j += 1) {\n        const c = i * 3 + j;\n        // check if winning position\n        const winner = winRow.includes(c);\n        row.push(\n          <TableCell key={`${i},${j}`} style={tableCellStyle}>\n            <Cell onClick={(): void => onClick(c)} value={board[c]} winner={winner} />\n          </TableCell>,\n        );\n      }\n      const boardRow = (\n        <TableRow key={`row${i}`}>\n          {row}\n        </TableRow>\n      );\n      // separate into rows\n      newCells.push(boardRow);\n    }\n    return newCells;\n  }, [board, onClick, winRow]);\n\n  return (\n    <Table>\n      <TableBody>\n        {cells}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { playTurn, newGame } from '../../../store/modules/ticTacToe';\nimport Header from './Header';\nimport History from './History';\nimport Board from './Board';\nimport { getTurn, calculateWinner } from './helpers';\nimport { DBTicTacToe, DBRootState } from '../../../store/types';\nimport { X, O, EMPTY } from '../../../store/initialState';\n\nconst paperStyles: React.CSSProperties = { width: 343, display: 'block', margin: 'auto' };\n\n/* TicTacToe  ->  Header\n *           |->  Board  ->  Cell\n *           |->  History */\nconst TicTacToe: React.FC<{}> = () => {\n  const { turn, step, history } = useSelector((state: DBRootState) => ({ ...state.ticTacToe }));\n  const dispatch = useDispatch();\n\n  /** function that modifies board with appropriate turn\n   * @param location - location of board click (row * 3 + col) */\n  const handleClick = React.useCallback((location: number): void => {\n    const newHistory = history.slice(0, step + 1);\n    const current = newHistory[step];\n    const board = current.board.slice();\n\n    // game is over or cell is full\n    if (!calculateWinner(board).winner && board[location] === EMPTY) {\n      // place marker, then update turn\n      board[location] = turn;\n\n      dispatch(playTurn({\n        history: newHistory.concat([{ board, location }]),\n        step: newHistory.length,\n        turn: turn === X ? O : X,\n      }));\n    }\n  }, [dispatch, history, step, turn]);\n\n  /** function that resets game back to it's initial state */\n  const newTTTGame = React.useCallback((): void => {\n    dispatch(newGame());\n  }, [dispatch]);\n\n  /** function that modifies board to go back to a previous point in history\n   * @param step - desired point in history */\n  const jumpToStep = React.useCallback((stepNo: number): void => {\n    const newTurn: DBTicTacToe = { step: stepNo, turn: getTurn(stepNo), history };\n    // Double click will eliminate all other history if there is any\n    if (step === stepNo) {\n      newTurn.history = history.slice(0, step + 1);\n    }\n    // update board to previous turn, non-permanent, history exists still\n    dispatch(playTurn(newTurn));\n  }, [dispatch, history, step]);\n\n  const current = history[step];\n  const board = current.board.slice();\n  const { winner, winRow } = calculateWinner(board);\n\n  return (\n    <>\n      <Typography variant=\"h2\" gutterBottom>Tic-Tac-Toe</Typography>\n      <Paper elevation={2} style={paperStyles}>\n        <Header newGame={newTTTGame} turn={turn} winner={winner} />\n        <Board\n          board={board}\n          onClick={handleClick}\n          winRow={winRow}\n        />\n      </Paper>\n      <History history={history} jumpToStep={jumpToStep} step={step} />\n    </>\n  );\n};\n\nexport default TicTacToe;\n","import TicTacToe from './TicTacToe';\n\nexport default TicTacToe;\n"],"sourceRoot":""}