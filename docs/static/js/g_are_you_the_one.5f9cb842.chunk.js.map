{"version":3,"file":"static/js/g_are_you_the_one.5f9cb842.chunk.js","mappings":"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","sources":["components/games/are-you-the-one/controls/Dropdown.tsx","components/games/are-you-the-one/controls/Controls.tsx","components/games/are-you-the-one/table/TBDialog.tsx","components/games/are-you-the-one/table/TableBody.tsx","components/games/are-you-the-one/table/Table.tsx","components/games/are-you-the-one/analysis/Analysis.tsx","constants/ayto.ts","recoil/are-you-the-one-atom.ts","components/games/are-you-the-one/analysis/useHist.ts","components/games/are-you-the-one/AreYouTheOne.tsx"],"sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\n\ninterface DropdownProps {\n  onSelect: (index: number) => void;\n  options: string[];\n  roundNumber: number;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { roundNumber, options, onSelect } = props;\n\n  // hooks/state\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number\n  ) => {\n    onSelect(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        ref={anchorRef}\n        variant=\"contained\"\n        aria-label=\"split button\"\n        color={roundNumber + 2 === options.length ? \"error\" : \"primary\"}\n      >\n        <Button>{options[roundNumber]}</Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select matchup\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\" autoFocusItem>\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === roundNumber}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\nimport Dropdown from \"./Dropdown\";\n\ninterface ControlsProps {\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  onSelect: (index: number) => void;\n  options: string[];\n  roundNumber: number;\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  updateScore: (score: number) => void;\n  updateNoMatch: (li: number, gi: number) => void;\n}\n\n// eslint-disable-next-line no-restricted-globals\nconst getScore = (value: number) => (isNaN(value) ? -1 : value);\n\nconst Controls = (props: ControlsProps) => {\n  const {\n    matches,\n    noMatch,\n    options,\n    onSelect,\n    roundNumber,\n    roundPairings,\n    updateNoMatch,\n    updateScore,\n  } = props;\n\n  // hooks/state\n  const [score, setScore] = React.useState(\n    getScore(roundPairings[roundNumber]?.score)\n  );\n\n  // handlers\n  const handleSelect = (index: number) => {\n    setScore(getScore(roundPairings[index]?.score));\n    onSelect(index);\n  };\n\n  const handleBlackout = () => {\n    roundPairings[roundNumber].pairs.forEach((gi, li) => {\n      if (matches[li] !== gi && !noMatch[li][gi]) {\n        updateNoMatch(li, gi);\n      }\n    });\n  };\n\n  const handleTextFieldChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setScore(parseInt(event.target.value, 10) || 0);\n    updateScore(parseInt(event.target.value, 10));\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <Dropdown\n        roundNumber={roundNumber}\n        options={options}\n        onSelect={handleSelect}\n      />\n      {roundNumber < options.length - 2 && (\n        <>\n          <Button variant=\"outlined\" onClick={handleBlackout}>\n            Blackout\n          </Button>\n          <TextField\n            id=\"score-input\"\n            label=\"Score\"\n            variant=\"outlined\"\n            type=\"number\"\n            value={score}\n            onChange={handleTextFieldChange}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\n\nexport interface TBDialogProps {\n  open: boolean;\n  content: string;\n  onMatch: () => void;\n  onNoMatch: () => void;\n  onCancel: () => void;\n}\n\nconst TBDialog = ({\n  open,\n  content,\n  onMatch,\n  onNoMatch,\n  onCancel,\n}: TBDialogProps) => (\n  <Dialog onClose={onCancel} open={open}>\n    <DialogTitle>TB Result</DialogTitle>\n    <DialogContent>Are {content} a perfect match?</DialogContent>\n    <DialogActions>\n      <Button onClick={onMatch}>Match</Button>\n      <Button onClick={onNoMatch} color=\"error\">\n        No Match\n      </Button>\n      <Button onClick={onCancel} color=\"warning\">\n        Cancel\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default TBDialog;\n","import React from \"react\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\nimport { ColorOptions } from \"../types\";\nimport TBDialog from \"./TBDialog\";\nimport { AYTOHist } from \"../analysis/useHist\";\n\nexport interface AYTOTableProps {\n  gents: string[];\n  hist: AYTOHist[][];\n  ladies: string[];\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  options: string[];\n  roundNumber: number;\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  updateMatch: (li: number, gi: number) => void;\n  updateNoMatch: (li: number, gi: number) => void;\n  updatePairs: (ri: number, li: number, gi: number) => void;\n}\n\nconst AYTOTableBody = (props: AYTOTableProps) => {\n  const {\n    gents,\n    hist,\n    ladies,\n    matches,\n    noMatch,\n    options,\n    roundNumber: ri,\n    roundPairings,\n    updateMatch,\n    updateNoMatch,\n    updatePairs,\n  } = props;\n  const isTB = options.length === ri + 2;\n  const isConsolidated = options.length === ri + 1;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [tbi, setTBI] = React.useState([-1, -1]);\n\n  // Handlers\n  const handleClick = (roundi: number, ladyi: number, genti: number) => () => {\n    if (isConsolidated) {\n      return;\n    }\n    if (isTB) {\n      setTBI([ladyi, genti]);\n      setOpen(true);\n      return;\n    }\n    // Regular Round, verify gent isn't already taken\n    const tempLi = roundPairings[roundi]?.pairs.indexOf(genti);\n    if (tempLi !== -1) {\n      // deselect gent from old lady\n      updatePairs(roundi, tempLi, -1);\n    }\n    // assign to new lady\n    updatePairs(roundi, ladyi, genti);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleMatch = () => {\n    const [li, gi] = tbi;\n    updateMatch(li, gi);\n    handleCancel();\n  };\n\n  const handleNoMatch = () => {\n    const [li, gi] = tbi;\n    updateNoMatch(li, gi);\n    handleCancel();\n  };\n\n  return (\n    <TableBody>\n      {ladies.map((lName, li) => (\n        <TableRow\n          key={`ayto-table-row-${lName}`}\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n        >\n          <TableCell component=\"th\" scope=\"row\">\n            {lName}\n          </TableCell>\n          {gents.map((gName, gi) => {\n            // variables\n            let variant: \"outlined\" | \"contained\" = \"outlined\";\n            let color: ColorOptions = \"primary\";\n\n            // logic\n            if (isTB) {\n              // if has data about match or no match\n              if ((noMatch[li] && noMatch[li][gi]) || matches[li] === gi) {\n                variant = \"contained\";\n              }\n            } else if (roundPairings[ri]?.pairs[li] === gi) {\n              // if paired this round\n              variant = \"contained\";\n            }\n\n            if (noMatch[li] && noMatch[li][gi]) {\n              color = \"error\";\n            }\n\n            // if match\n            if (matches[li] === gi) {\n              color = \"success\";\n            }\n\n            const histValue = (hist[li] && hist[li][gi]?.rounds?.length) || 0;\n            // if consolidated\n            if (isConsolidated && histValue > 0) {\n              variant = \"contained\";\n            }\n\n            // render\n            return (\n              <TableCell key={gName} sx={{ padding: 0, textAlign: \"center\" }}>\n                <Button\n                  variant={variant}\n                  color={color}\n                  onClick={handleClick(ri, li, gi)}\n                >\n                  {isConsolidated ? histValue : `${lName[0]}-${gName[0]}`}\n                </Button>\n              </TableCell>\n            );\n          })}\n        </TableRow>\n      ))}\n      <TBDialog\n        open={open}\n        content={`${ladies[tbi[0]]} & ${gents[tbi[1]]}`}\n        onCancel={handleCancel}\n        onMatch={handleMatch}\n        onNoMatch={handleNoMatch}\n      />\n    </TableBody>\n  );\n};\n\nexport default AYTOTableBody;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport AYTOTableBody, { AYTOTableProps } from \"./TableBody\";\n\nconst AYTOTable = ({ gents, ...other }: AYTOTableProps) => (\n  <TableContainer component={Paper}>\n    <Table aria-label=\"are you the one data entry table\">\n      <TableHead>\n        <TableRow>\n          <TableCell />\n          {gents.map((name) => (\n            <TableCell\n              key={name}\n              sx={{ paddingLeft: 0, paddingRight: 0, textAlign: \"center\" }}\n            >\n              {name}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <AYTOTableBody gents={gents} {...other} />\n    </Table>\n  </TableContainer>\n);\n\nexport default AYTOTable;\n","import React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Chip from \"@mui/material/Chip\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\nimport { ChipColorOptions } from \"../types\";\nimport { AYTOHist } from \"./useHist\";\n\nexport interface AnalysisProps {\n  calculatedEquations: RoundPairing[];\n  gents: string[];\n  hist: AYTOHist[][];\n  ladies: string[];\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  tempScore: number[];\n}\n\nconst Analysis = (props: AnalysisProps) => {\n  const {\n    gents,\n    ladies,\n    matches,\n    noMatch,\n    roundPairings,\n    hist,\n    tempScore,\n    calculatedEquations,\n  } = props;\n\n  // state\n  const [showAll, setShowAll] = React.useState(false);\n\n  // handlers\n  const handleSwitch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setShowAll(event.target.checked);\n  };\n\n  return (\n    <div>\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        <h1>Analysis</h1>\n        <FormControlLabel\n          control={\n            <Switch checked={showAll} onChange={handleSwitch} name=\"show-all\" />\n          }\n          label=\"Show All Couples\"\n        />\n      </Stack>\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {roundPairings.map(({ pairs, score }, ri) => {\n          const equation = pairs.map((gi, li) => {\n            // if cleared pairing\n            if (li < 0 || gi < 0) {\n              return null;\n            }\n\n            const isRepeat = hist[li][gi].rounds.length > 1;\n            let color: ChipColorOptions = isRepeat ? \"primary\" : \"default\";\n\n            if (!showAll) {\n              // hide matches and noMatches\n              if (noMatch[li][gi] || matches[li] === gi) {\n                return null;\n              }\n            } else {\n              // no match chip\n              if (noMatch[li][gi]) {\n                color = \"error\";\n              }\n              // match chip\n              if (matches[li] === gi) {\n                color = \"success\";\n              }\n            }\n\n            const label = `${ladies[li]}-${gents[gi]}${\n              isRepeat ? ` ${hist[li][gi].rounds.length}` : \"\"\n            } - ${hist[li][gi].odds}%`;\n\n            // create equation chips\n            return (\n              <Chip\n                key={`eq-r${ri}-l${li}-g${gi}`}\n                label={label}\n                color={color}\n              />\n            );\n          });\n\n          // return each equation stack\n          return !equation.every((e) => e === null) ? (\n            <Stack key={`equation-${ri}`} spacing={1}>\n              <h2 style={{ textAlign: \"center\" }}>Matchup {ri + 1}</h2>\n              {equation}\n              <Chip\n                label={showAll ? score : score - tempScore[ri]}\n                color=\"warning\"\n              />\n            </Stack>\n          ) : null;\n        })}\n      </Stack>\n      {calculatedEquations.length > 0 && <hr />}\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {calculatedEquations.map(({ pairs, score }, cei) => (\n          <Stack key={`equation-${cei}`} spacing={1}>\n            <h2 style={{ textAlign: \"center\" }}>Calculated {cei + 1}</h2>\n            {pairs.map((gi, li) => (\n              <Chip\n                key={`eq-calc-l${li}-g${gi}`}\n                label={`${ladies[li]}-${gents[gi]} ${hist[li][gi].rounds.length} - ${hist[li][gi].odds}%`}\n                color=\"primary\"\n              />\n            ))}\n            <Chip label={`max ${score}`} color=\"warning\" />\n          </Stack>\n        ))}\n      </Stack>\n    </div>\n  );\n};\n\nexport default Analysis;\n","// are-you-the-one\nexport const ladies = [\n  \"Alicia\",\n  \"Carolina\",\n  \"Cas\",\n  \"Gianna\",\n  \"Hannah\",\n  \"Kam\",\n  \"Kari\",\n  \"Kathryn\",\n  \"Shannon\",\n  \"Taylor\",\n  \"Tyranny\",\n];\n\nexport const gents = [\n  \"Andre\",\n  \"Derrick\",\n  \"Edward\",\n  \"Hayden\",\n  \"Jaylan\",\n  \"Joey\",\n  \"Michael\",\n  \"Mike\",\n  \"Osvaldo\",\n  \"Ozzy\",\n  \"Tyler\",\n];\n\nexport const options = [\n  \"Matchup 1\",\n  \"Matchup 2\",\n  \"Matchup 3\",\n  \"Matchup 4\",\n  \"Matchup 5\",\n  \"Matchup 6\",\n  \"Matchup 7\",\n  \"Matchup 8\",\n  \"Matchup 9\",\n  \"Matchup 10\",\n  \"Truth Booth\",\n  \"Consolidated\",\n];\n","import { atom } from \"recoil\";\nimport { ladies, gents } from \"../constants/ayto\";\n\nexport interface RoundPairing {\n  /** [lady-i: gent-i] */\n  pairs: number[];\n  /** score of the round */\n  score: number;\n}\n\nexport interface AYTOState {\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n}\n\nexport const newAreYouTheOne = (): AYTOState => ({\n  matches: ladies.map(() => -1),\n  noMatch: ladies.map(() => gents.map(() => false)),\n  roundPairings: [],\n});\n\nconst areYouTheOneAtom = atom({\n  key: \"areYouTheOneAtom\",\n  default:\n    (JSON.parse(\n      localStorage.getItem(\"are-you-the-one-atom\") || \"null\"\n    ) as AYTOState) || newAreYouTheOne(),\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"are-you-the-one-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\nexport default areYouTheOneAtom;\n","import { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\n\nexport interface AYTOHist {\n  odds: number;\n  oddsWeight: number;\n  rounds: number[];\n}\n\nexport interface AYTODictObj {\n  couples: [number, number][];\n  score: number;\n}\n\nexport interface AYTODict {\n  [key: string]: AYTODictObj;\n}\n\n/** [lady-i: (gent-i | -1), -1, -1, ...] */\n/** [lady-i: [gent-i: bool]] */\n/** [round-i: RoundPairing] */\nconst useHist = (\n  len: number,\n  matches: number[],\n  noMatch: boolean[][],\n  roundPairings: RoundPairing[]\n) => {\n  // state\n  const hist: AYTOHist[][] = [];\n  const tempScore: number[] = [];\n  const totals: number[] = [];\n\n  // create histogram\n  roundPairings.forEach(({ pairs }, ri) => {\n    tempScore[ri] = 0;\n    totals[ri] = len;\n\n    pairs.forEach((gi, li) => {\n      // noMatch increases odds of the rest\n      if (li < 0 || gi < 0 || noMatch[li][gi]) {\n        totals[ri] -= 1;\n      }\n      // remove matches\n      if (matches[li] === gi) {\n        tempScore[ri] += 1;\n        totals[ri] -= 1;\n      }\n      // verify data obj\n      !hist[li] && (hist[li] = []);\n      !hist[li][gi] && (hist[li][gi] = { odds: 0, oddsWeight: 0, rounds: [] });\n      // histogram\n      hist[li][gi].rounds.push(ri);\n    });\n  });\n\n  // temp state\n  const dict: AYTODict = {};\n\n  // with histogram made, time to get some stats\n  roundPairings.forEach(({ pairs, score }, ri) => {\n    pairs.forEach((gi, li) => {\n      // ----------     odds     ---------- //\n      const histObj = hist[li][gi];\n      // 0% odds for no match\n      if (noMatch[li][gi]) {\n        return;\n      }\n      // 100% odds for match\n      if (matches[li] === gi) {\n        histObj.odds = 100;\n        return;\n      }\n      // calculate odds for the round\n      const odds = totals[ri]\n        ? ((score - tempScore[ri]) * 100) / totals[ri]\n        : 0;\n      // assign first odds\n      if (histObj.oddsWeight === 0) {\n        histObj.odds = Math.floor(odds);\n      } else if (!odds || !histObj.odds) {\n        // if odds for either are 0\n        histObj.odds = 0;\n      } else {\n        // rolling average\n        histObj.odds = Math.floor(\n          (histObj.odds * histObj.oddsWeight + odds) / (histObj.oddsWeight + 1)\n        );\n      }\n      // update odds weight\n      histObj.oddsWeight += 1;\n\n      // ----------     equations     ---------- //\n      // only care about repeats\n      if (histObj.rounds.length < 2) {\n        return;\n      }\n      // create key from round combination (length)\n      const keys = [\n        histObj.rounds.reduce((acc, val) => acc + val.toString(), \"\"),\n      ];\n      // add every pair of 2 rounds as keys\n      for (let i = ri + 1; i < histObj.rounds.length; i += 1) {\n        keys.push(`${histObj.rounds[ri]}${histObj.rounds[i]}`);\n      }\n      // NOTE: length (l) and 2 are covered, anything in-between is not directly considered (still covered in 2s)\n      keys.forEach((key) => {\n        // put that in the dictionary\n        !dict[key] && (dict[key] = { couples: [], score });\n        // calculate equations\n        let canAdd = true;\n        dict[key].couples.forEach(([tli, tgi]) => {\n          canAdd = canAdd && tli !== li && tgi !== gi;\n        });\n        canAdd && dict[key].couples.push([li, gi]);\n        dict[key].score = Math.min(score - tempScore[ri], dict[key].score);\n      });\n    });\n  });\n\n  // more state\n  const calculatedEquations: RoundPairing[] = [];\n\n  // convert qualifying couples to more equations\n  Object.keys(dict).forEach((key) => {\n    if (\n      // only care about repeat couples\n      dict[key].couples.length > 1 &&\n      // where there are more couples than score available\n      dict[key].couples.length > dict[key].score\n    ) {\n      const tempPairs: number[] = [];\n      // convert to RP\n      dict[key].couples.forEach(([li, gi]) => {\n        tempPairs[li] = gi;\n      });\n      // validate new equation doesn't already exist\n      let isRepeat = false;\n      calculatedEquations.forEach(({ pairs, score }, ci) => {\n        let hasExactRepeat = true;\n        let hasRoughRepeat = true;\n        for (let i = 0; i < pairs.length; i += 1) {\n          if (tempPairs[i] !== pairs[i]) {\n            if (tempPairs[i]) {\n              hasExactRepeat = false;\n              hasRoughRepeat = false;\n            } else {\n              // new equation has fewer couples, may still be a match but is missing some keys\n              hasExactRepeat = false;\n            }\n          }\n        }\n        isRepeat =\n          // compare against itself\n          isRepeat ||\n          // exclude if exact repeat\n          hasExactRepeat ||\n          // exclude if rough repeat with higher or equal score\n          (hasRoughRepeat && dict[key].score >= score);\n        // if exact repeat, pick the lower of the 2 scores\n        if (hasExactRepeat) {\n          calculatedEquations[ci].score = Math.min(score, dict[key].score);\n        }\n      });\n      // Add RP to equations\n      !isRepeat &&\n        calculatedEquations.push({\n          pairs: tempPairs,\n          score: dict[key].score,\n        });\n    }\n  });\n\n  return {\n    hist,\n    tempScore,\n    calculatedEquations,\n  };\n};\n\nexport default useHist;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport Controls from \"./controls/Controls\";\nimport Table from \"./table/Table\";\nimport Analysis from \"./analysis/Analysis\";\nimport { ladies, gents, options } from \"../../../constants/ayto\";\nimport aYTOAtom from \"../../../recoil/are-you-the-one-atom\";\nimport useHist from \"./analysis/useHist\";\n\n/**\n * TODO: replace Dropdown with MUI Dropdown when available\n */\nconst AreYouTheOne = () => {\n  const [{ matches, noMatch, roundPairings }, setState] =\n    useRecoilState(aYTOAtom);\n\n  // state\n  const [roundNumber, setRoundNumber] = React.useState(0);\n  const { hist, tempScore, calculatedEquations } = useHist(\n    ladies.length,\n    matches,\n    noMatch,\n    roundPairings\n  );\n\n  // handlers\n  const handleSelect = (selected: number) => {\n    setRoundNumber(selected);\n  };\n\n  const handleUpdateScore = (score: number) => {\n    const newRoundPairing = !roundPairings[roundNumber]\n      ? { pairs: [], score: 0 }\n      : { ...roundPairings[roundNumber] };\n    newRoundPairing.score = score;\n    const newRoundPairings = [...roundPairings];\n    newRoundPairings[roundNumber] = newRoundPairing;\n    setState({ matches, noMatch, roundPairings: newRoundPairings });\n  };\n\n  const handleUpdateNoMatch = (li: number, gi: number) => {\n    const newMatches = noMatch.map((gentArray: boolean[]) => [...gentArray]);\n    // if array for lady doesn't exist yet, create skeleton one\n    !newMatches[li] && (newMatches[li] = []);\n    // assign no match\n    newMatches[li][gi] = !newMatches[li][gi];\n    // update state\n    setState({ matches, noMatch: newMatches, roundPairings });\n  };\n\n  const handleUpdatePairs = (ri: number, li: number, gi: number) => {\n    const newRoundPairing = !roundPairings[ri]\n      ? { pairs: [], score: 0 }\n      : { ...roundPairings[ri], pairs: [...roundPairings[ri].pairs] };\n    newRoundPairing.pairs[li] = gi;\n    const newRoundPairings = [...roundPairings];\n    newRoundPairings[roundNumber] = newRoundPairing;\n    setState({ matches, noMatch, roundPairings: newRoundPairings });\n  };\n\n  const handleUpdateMatch = (li: number, gi: number) => {\n    const newMatches = [...matches];\n    const newNoMatches = noMatch.map((gentArray: boolean[]) => [...gentArray]);\n    // if array for lady doesn't exist yet, create skeleton one\n    !newNoMatches[li] && (newNoMatches[li] = []);\n    // assign new match\n    newMatches[li] = gi;\n    // make all gent options no matches\n    for (let i = 0; i < gents.length; i += 1) {\n      newNoMatches[li][i] = i !== gi;\n    }\n    // make all ladies options no matches\n    for (let i = 0; i < ladies.length; i += 1) {\n      !newNoMatches[i] && (newNoMatches[i] = []);\n      newNoMatches[i][gi] = i !== li;\n    }\n\n    // update round pairings\n    const newRoundPairings = [...roundPairings];\n    for (let ri = 0; ri < options.length - 2; ri += 1) {\n      if (\n        !roundPairings[ri] ||\n        roundPairings[ri].pairs[li] < 0 ||\n        roundPairings[ri].pairs[li] === undefined\n      ) {\n        const newRoundPairing = !newRoundPairings[ri]\n          ? { pairs: [], score: 0 }\n          : { ...roundPairings[ri], pairs: [...roundPairings[ri].pairs] };\n        newRoundPairing.pairs[li] = gi;\n        newRoundPairings[ri] = newRoundPairing;\n      }\n    }\n\n    // update state\n    setState({\n      matches: newMatches,\n      noMatch: newNoMatches,\n      roundPairings: newRoundPairings,\n    });\n  };\n\n  return (\n    <>\n      <h1>Are You The One?</h1>\n      <Controls\n        matches={matches}\n        noMatch={noMatch}\n        onSelect={handleSelect}\n        options={options}\n        roundNumber={roundNumber}\n        roundPairings={roundPairings}\n        updateNoMatch={handleUpdateNoMatch}\n        updateScore={handleUpdateScore}\n      />\n      <br />\n      <Table\n        gents={gents}\n        hist={hist}\n        ladies={ladies}\n        matches={matches}\n        noMatch={noMatch}\n        options={options}\n        roundNumber={roundNumber}\n        roundPairings={roundPairings}\n        updateMatch={handleUpdateMatch}\n        updateNoMatch={handleUpdateNoMatch}\n        updatePairs={handleUpdatePairs}\n      />\n      <Analysis\n        calculatedEquations={calculatedEquations}\n        gents={gents}\n        hist={hist}\n        ladies={ladies}\n        matches={matches}\n        noMatch={noMatch}\n        roundPairings={roundPairings}\n        tempScore={tempScore}\n      />\n    </>\n  );\n};\n\nexport default AreYouTheOne;\n"],"names":["props","roundNumber","options","onSelect","React","open","setOpen","anchorRef","handleClose","event","current","contains","target","ButtonGroup","ref","variant","color","length","Button","size","undefined","onClick","prevOpen","ArrowDropDown","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","map","option","index","MenuItem","selected","handleMenuItemClick","getScore","value","isNaN","matches","noMatch","roundPairings","updateNoMatch","updateScore","score","setScore","display","justifyContent","pairs","forEach","gi","li","TextField","label","type","onChange","parseInt","content","onMatch","onNoMatch","onCancel","Dialog","onClose","DialogTitle","DialogContent","DialogActions","gents","hist","ladies","ri","updateMatch","updatePairs","isTB","isConsolidated","tbi","setTBI","handleCancel","TableBody","lName","TableRow","sx","border","TableCell","component","scope","gName","roundi","ladyi","genti","histValue","rounds","padding","textAlign","tempLi","indexOf","other","TableContainer","Table","TableHead","name","paddingLeft","paddingRight","tempScore","calculatedEquations","showAll","setShowAll","Stack","direction","FormControlLabel","control","Switch","checked","spacing","flexWrap","equation","isRepeat","odds","Chip","every","e","cei","atom","key","default","JSON","parse","localStorage","getItem","effects","onSet","state","setItem","stringify","len","totals","oddsWeight","push","dict","histObj","Math","floor","keys","reduce","acc","val","toString","i","couples","canAdd","tli","tgi","min","Object","tempPairs","ci","hasExactRepeat","hasRoughRepeat","useRecoilState","aYTOAtom","setState","setRoundNumber","useHist","handleUpdateNoMatch","newMatches","gentArray","newRoundPairing","newRoundPairings","newNoMatches"],"sourceRoot":""}