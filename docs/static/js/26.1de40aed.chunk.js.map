{"version":3,"sources":["../node_modules/lodash/isString.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_baseIndexOf.js","components/common/InfoPopup.jsx","../node_modules/lodash/maxBy.js","apis/Dice.js","components/games/yahtzee/yahtzeeHelper.js","components/games/yahtzee/ScoreTable.jsx","components/games/yahtzee/ScoreGraph.jsx","components/games/yahtzee/Yahtzee.jsx","components/games/yahtzee/index.jsx"],"names":["baseGetTag","__webpack_require__","isArray","isObjectLike","stringTag","module","exports","value","array","fromIndex","index","length","baseFindIndex","baseIsNaN","strictIndexOf","InfoPopup","props","_useState","useState","_useState2","Object","_Users_kennethbigler_GitHub_react_home_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOpen","setIsOpen","buttonText","title","children","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_6__","color","onClick","variant","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_2__","onClose","open","maxWidth","fullWidth","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_5__","baseExtremum","baseGt","baseIteratee","iteratee","undefined","Dice","roll","Math","floor","random","hasXDice","n","hist","val","getHistogram","isFullHouse","histogram","has3","has2","forEach","isStraight","count","i","ADD_DICE","centerStyle","textAlign","ScoreTable","getButtonInfo","d","values","_this","reduce","getScoreButton","showButton","points","top","_this$props","onTopScore","onBottomScore","react_default","Button","concat","getTopTableButtons","score","sum","showScoreButtons","generateTopTable","map","_ref","name","_this$getButtonInfo","_this$getButtonInfo2","slicedToArray","TableRow","key","TableCell","style","getDiceValue","console","error","getBottomTableButtons","hasYahtzee","_this$props2","acc","generateBottomTable","bottom","_ref2","hint","_this$props3","this","topSum","finalTopSum","bottomSum","Table","size","TableHead","TableBody","colSpan","Component","withTheme","scores","main","theme","palette","secondary","mostRecent","get","topScore","maxBy","es6","width","height","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","interval","orientation","tickLine","type","stroke","fillOpacity","fill","Typography","getInitialState","saved","turn","hasScored","finish","Yahtzee","state","newGame","actions","_this$state","addScore","setState","handleDiceRoll","_this$state2","_this$state3","sort","handleSave","_this$state4","push","splice","handleUnsave","_this$state5","getButtonText","handleTopScore","handleBottomScore","_this2","_this$state6","className","yahtzee_ScoreGraph","display","margin","yahtzee_ScoreTable","toConsumableArray","nextProps","prevState","connect","yahtzee","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/26.1de40aed.chunk.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar stringTag = '[object String]';\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\n\nfunction isString(value) {\n  return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;\n}\n\nmodule.exports = isString;","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = strictIndexOf;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;","import React, { useState } from 'react';\nimport types from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n// Parents: Board\n\n/* ========================================\n * Popup\n * ======================================== */\nconst InfoPopup = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { buttonText, title, children } = props;\n  return (\n    <div>\n      <Button color=\"primary\" onClick={() => { setIsOpen(true); }} variant=\"contained\">\n        {buttonText || title}\n      </Button>\n      <Dialog onClose={() => { setIsOpen(false); }} open={isOpen} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={() => { setIsOpen(false); }}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nInfoPopup.propTypes = {\n  // types = [array, bool, func, number, object, string, symbol].isRequired\n  children: types.oneOfType([types.arrayOf(types.node), types.node]).isRequired,\n  title: types.oneOfType([types.string, types.element]).isRequired,\n  buttonText: types.oneOfType([types.string, types.element]),\n};\n\nexport default InfoPopup;\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\n\n\nfunction maxBy(array, iteratee) {\n  return array && array.length ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt) : undefined;\n}\n\nmodule.exports = maxBy;","export default {\n  // randomize order of the cards\n  roll() {\n    return Math.floor(Math.random() * 6) + 1;\n  },\n};\n\n// Dice as a react hook, seems kind of like an anti-pattern\nexport function useDice() {\n  function rollDice() {\n    return Math.floor(Math.random() * 6) + 1;\n  }\n\n  return rollDice;\n}\n","import forEach from 'lodash/forEach';\n\nexport const hasXDice = n => (hist, val) => {\n  if (hist === true) {\n    return true;\n  }\n  if (!hist[val]) {\n    hist[val] = 1;\n  } else {\n    hist[val] += 1;\n    if (hist[val] >= n) {\n      return true;\n    }\n  }\n  return hist;\n};\n\nexport const getHistogram = () => (hist, val) => {\n  if (hist === true) {\n    return true;\n  }\n  if (!hist[val]) {\n    hist[val] = 1;\n  } else {\n    hist[val] += 1;\n  }\n  return hist;\n};\n\nexport const isFullHouse = (histogram) => {\n  let has3 = false;\n  let has2 = false;\n\n  forEach(histogram, (value) => {\n    if (value >= 3) {\n      has3 = true;\n    } else if (value >= 2) {\n      has2 = true;\n    }\n  });\n\n  return has3 && has2;\n};\n\nexport const isStraight = (histogram, length) => {\n  let count = 0;\n  forEach(['1', '2', '3', '4', '5', '6'], (i) => {\n    if (count < length) {\n      const value = histogram[i];\n      if (!value) {\n        count = 0;\n      } else {\n        count += 1;\n      }\n    }\n  });\n  return count >= length;\n};\n","import React, { Component } from 'react';\nimport types from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport map from 'lodash/map';\nimport reduce from 'lodash/reduce';\nimport {\n  hasXDice, getHistogram, isFullHouse, isStraight,\n} from './yahtzeeHelper';\n// Parents: Popup\n\nexport const ADD_DICE = 'Sum of Dice';\nconst centerStyle = { textAlign: 'center' };\nclass ScoreTable extends Component {\n  static propTypes = {\n    // types = [array, bool, func, number, object, string, symbol].isRequired\n    values: types.arrayOf(types.number.isRequired).isRequired,\n    top: types.arrayOf(types.shape({\n      name: types.string.isRequired,\n      score: types.number.isRequired,\n    })),\n    bottom: types.arrayOf(types.shape({\n      name: types.string.isRequired,\n      score: types.number.isRequired,\n    })),\n    onTopScore: types.func.isRequired,\n    onBottomScore: types.func.isRequired,\n    showScoreButtons: types.bool.isRequired,\n    topSum: types.number.isRequired,\n    finalTopSum: types.number.isRequired,\n    bottomSum: types.number.isRequired,\n  };\n\n  getButtonInfo = (d) => {\n    const { values } = this.props;\n    return reduce(values, (count, val) => {\n      if (val === d) {\n        count[0] += 1;\n        count[1] += d;\n      }\n      return count;\n    }, [0, 0]);\n  }\n\n  getScoreButton = (showButton, points, top, i) => {\n    const { onTopScore, onBottomScore } = this.props;\n    return showButton\n      ? (\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={top\n            ? () => onTopScore(points, i)\n            : () => onBottomScore(points, i)}\n        >\n          {`Add ${points} Points`}\n        </Button>\n      ) : (\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={top\n            ? () => onTopScore(0, i)\n            : () => onBottomScore(0, i)}\n        >\n          0\n        </Button>\n      );\n  }\n\n  getTopTableButtons = (score, showButton, sum, i) => {\n    const { showScoreButtons } = this.props;\n    if (score >= 0) {\n      return score;\n    }\n    return showScoreButtons ? this.getScoreButton(showButton, sum, true, i) : null;\n  }\n\n  generateTopTable = () => {\n    const { top } = this.props;\n    return map(top, ({ name, score }, i) => {\n      const d = i + 1;\n      const [count, sum] = this.getButtonInfo(i + 1);\n      const showButton = count >= 1;\n\n      return (\n        <TableRow key={name}>\n          <TableCell>{`${name}: ${d},${d},${d} = ${d * 3}`}</TableCell>\n          <TableCell>{`Add Only ${name}`}</TableCell>\n          <TableCell style={centerStyle}>{this.getTopTableButtons(score, showButton, sum, i)}</TableCell>\n        </TableRow>\n      );\n    });\n  }\n\n  getDiceValue = () => {\n    const { values } = this.props;\n    return reduce(values, (sum, d) => sum + d, 0);\n  }\n\n  showButton = (i) => {\n    const { values } = this.props;\n    switch (i) {\n      case 0: // 3 of a kind\n        return reduce(values, hasXDice(3), {}) === true;\n      case 1: // 4 of a kind\n        return reduce(values, hasXDice(4), {}) === true;\n      case 2: // Full House\n        return isFullHouse(reduce(values, getHistogram(), {}));\n      case 3: // Sm. Straight\n        return isStraight(reduce(values, getHistogram(), {}), 4);\n      case 4: // Lg. Straight\n        return isStraight(reduce(values, getHistogram(), {}), 5);\n      case 5: // Yahtzee\n        return reduce(values, hasXDice(5), {}) === true;\n      case 6: // Chance\n        return true;\n      default:\n        // eslint-disable-next-line no-console\n        console.error('Unexpected Value');\n        return false;\n    }\n  }\n\n  getBottomTableButtons = (score, points, hasYahtzee, i) => {\n    const { showScoreButtons } = this.props;\n    if (score >= 0) {\n      return score;\n    }\n    if (showScoreButtons) {\n      // Yahtzee Bonus\n      if (hasYahtzee) {\n        const { values, top } = this.props;\n        const canYahtzeeBonus = reduce(\n          reduce(values, getHistogram(), {}),\n          (acc, value, key) => {\n            if (value === 5 && top[key - 1].score >= 0) {\n              return true;\n            }\n            return acc;\n          },\n          false,\n        );\n        if (canYahtzeeBonus) {\n          return this.getScoreButton(true, points + 100, false, i);\n        }\n      }\n      return this.getScoreButton(this.showButton(i), points, false, i);\n    }\n    return null;\n  }\n\n  generateBottomTable = () => {\n    const { bottom } = this.props;\n    const hasYahtzee = bottom[5].score > 0;\n    return map(bottom, ({\n      name, hint, points, score,\n    }, i) => {\n      if (points === ADD_DICE) {\n        points = this.getDiceValue();\n      }\n\n      return (\n        <TableRow key={name}>\n          <TableCell>{name}</TableCell>\n          <TableCell>{hint}</TableCell>\n          <TableCell style={centerStyle}>{this.getBottomTableButtons(score, points, hasYahtzee, i)}</TableCell>\n        </TableRow>\n      );\n    });\n  }\n\n  render() {\n    const { topSum, finalTopSum, bottomSum } = this.props;\n\n    return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Minimum Required for Bonus</TableCell>\n            <TableCell>How to Score</TableCell>\n            <TableCell style={centerStyle}>Game Score</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.generateTopTable()}\n          <TableRow>\n            <TableCell colSpan={2}>Total == 63</TableCell>\n            <TableCell style={centerStyle}>{topSum}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Bonus if &gt;= 63</TableCell>\n            <TableCell>Score 35</TableCell>\n            <TableCell style={centerStyle}>{topSum >= 63 ? 35 : 0}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={2}>Upper Half Total</TableCell>\n            <TableCell style={centerStyle}>{finalTopSum}</TableCell>\n          </TableRow>\n          <TableRow />\n          {this.generateBottomTable()}\n          <TableRow>\n            <TableCell colSpan={2}>Lower Half Total</TableCell>\n            <TableCell style={centerStyle}>{bottomSum}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={2}>Upper Half Total</TableCell>\n            <TableCell style={centerStyle}>{finalTopSum}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={2}>Grand Total</TableCell>\n            <TableCell style={centerStyle}>{finalTopSum + bottomSum}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nexport default ScoreTable;\n","import React from 'react';\nimport types from 'prop-types';\nimport maxBy from 'lodash/maxBy';\nimport get from 'lodash/get';\nimport {\n  ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area,\n} from 'recharts';\nimport { withTheme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport InfoPopup from '../../common/InfoPopup';\n// Parents: Main\n\nconst ScoreGraph = (props) => {\n  const { scores, theme: { palette: { secondary: { main } } } } = props;\n  const mostRecent = get(scores, `[${scores.length - 1}].score`, 0);\n  const topScore = scores.length > 0 ? maxBy(scores, 'score').score : 0;\n  return (\n    <InfoPopup title=\"Yahtzee Score History\" buttonText=\"Score History\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <AreaChart data={scores}>\n          <defs>\n            <linearGradient id=\"mainColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"20%\" stopColor={main} stopOpacity={0.8} />\n              <stop offset=\"100%\" stopColor={main} stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n          <YAxis width={40} orientation=\"right\" tickLine={false} />\n          <Tooltip />\n          <Area type=\"monotone\" dataKey=\"score\" stroke={main} fillOpacity={1} fill=\"url(#mainColor)\" />\n        </AreaChart>\n      </ResponsiveContainer>\n      <Typography variant=\"h4\">{`Most Recent: ${mostRecent}`}</Typography>\n      <Typography variant=\"h4\">{`Top Score: ${topScore}`}</Typography>\n    </InfoPopup>\n  );\n};\n\nScoreGraph.propTypes = {\n  // types = [array, bool, func, number, object, string, symbol].isRequired\n  scores: types.arrayOf(\n    types.shape({\n      score: types.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  theme: types.shape({\n    palette: types.shape({\n      secondary: types.shape({\n        main: types.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }),\n};\n\nexport default withTheme(ScoreGraph);\n","import React, { Component } from 'react';\nimport types from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport reduce from 'lodash/reduce';\nimport map from 'lodash/map';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dice from '../../../apis/Dice';\nimport ScoreTable, { ADD_DICE } from './ScoreTable';\nimport ScoreGraph from './ScoreGraph';\nimport { addScore } from '../../../store/modules/yahtzee';\n// Parents: Main\n\nconst getInitialState = () => ({\n  roll: 0,\n  values: [0, 0, 0, 0, 0],\n  saved: [],\n  turn: 0,\n  topSum: 0,\n  finalTopSum: 0,\n  bottomSum: 0,\n  showScoreButtons: false,\n  hasScored: false,\n  finish: false,\n  top: [\n    { name: 'Aces', score: -1 },\n    { name: 'Twos', score: -1 },\n    { name: 'Threes', score: -1 },\n    { name: 'Fours', score: -1 },\n    { name: 'Fives', score: -1 },\n    { name: 'Sixes', score: -1 },\n  ],\n  bottom: [\n    {\n      name: '3 of a kind', hint: ADD_DICE, points: ADD_DICE, score: -1,\n    },\n    {\n      name: '4 of a kind', hint: ADD_DICE, points: ADD_DICE, score: -1,\n    },\n    {\n      name: 'Full House', hint: 'Score 25', points: 25, score: -1,\n    },\n    {\n      name: 'Sm. Straight (4)', hint: 'Score 30', points: 30, score: -1,\n    },\n    {\n      name: 'Lg. Straight (5)', hint: 'Score 40', points: 40, score: -1,\n    },\n    {\n      name: 'Yahtzee', hint: 'Score 50', points: 50, score: -1,\n    },\n    {\n      name: 'Chance', hint: ADD_DICE, points: ADD_DICE, score: -1,\n    },\n  ],\n});\n\n/* --------------------------------------------------\n* Home\n* -------------------------------------------------- */\nclass Yahtzee extends Component {\n  static propTypes = {\n    // types = [array, bool, func, number, object, string, symbol].isRequired\n    actions: types.shape({\n      addScore: types.func.isRequired,\n    }).isRequired,\n    scores: types.arrayOf(\n      types.shape({\n        score: types.number.isRequired,\n      }).isRequired,\n    ).isRequired,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let { finalTopSum } = prevState;\n    const { top, bottom } = prevState;\n    let count = 0;\n\n    const topSum = reduce(top, (sum, { score }) => {\n      if (score >= 0) {\n        count += 1;\n        sum += score;\n        if (sum >= 63) {\n          finalTopSum = sum + 35;\n        } else {\n          finalTopSum = sum;\n        }\n      }\n      return sum;\n    }, 0);\n\n    const bottomSum = reduce(bottom, (sum, { score }) => {\n      if (score >= 0) {\n        count += 1;\n        sum += score;\n      }\n      return sum;\n    }, 0);\n\n    if (count >= 13) {\n      return { finish: true };\n    }\n    if (topSum !== prevState.topSum || bottomSum !== prevState.bottomSum) {\n      return { topSum, finalTopSum, bottomSum };\n    }\n    return null;\n  }\n\n  state = getInitialState();\n\n  newGame = () => {\n    const { actions } = this.props;\n    const { finalTopSum, bottomSum } = this.state;\n    actions.addScore(finalTopSum + bottomSum);\n    this.setState(getInitialState());\n  }\n\n  handleDiceRoll = () => {\n    const { roll, hasScored, finish } = this.state;\n\n    if (finish) {\n      this.newGame();\n    }\n\n    if (roll >= 3 && hasScored === false) {\n      return;\n    }\n    if (roll >= 3 && hasScored === true) {\n      this.setState({\n        roll: 0,\n        values: [0, 0, 0, 0, 0],\n        saved: [],\n        hasScored: false,\n      });\n      return;\n    }\n\n    const { values, saved } = this.state;\n\n    for (let i = 0; i < values.length; i += 1) {\n      values[i] = Dice.roll();\n    }\n    values.sort();\n    saved.sort();\n\n    if (roll === 2) {\n      this.setState({\n        showScoreButtons: true, values, saved, roll: roll + 1,\n      });\n    } else {\n      this.setState({ values, saved, roll: roll + 1 });\n    }\n  }\n\n  handleSave = (i) => {\n    const { saved, values } = this.state;\n    if (values[i] === 0) {\n      return;\n    }\n    saved.push(values.splice(i, 1)[0]);\n    saved.sort();\n    this.setState({ saved });\n  }\n\n  handleUnsave = (i) => {\n    const { saved, values } = this.state;\n    values.push(saved.splice(i, 1)[0]);\n    values.sort();\n    this.setState({ values });\n  }\n\n  getButtonText = (roll) => {\n    const { finish } = this.state;\n    if (finish) {\n      return 'New Game';\n    }\n\n    switch (roll) {\n      case 0:\n        return 'First Roll';\n      case 1:\n        return 'Second Roll';\n      case 2:\n        return 'Last Roll';\n      case 3:\n        return 'Next Turn';\n      default:\n        return 'Error';\n    }\n  }\n\n  handleTopScore = (points, i) => {\n    const { top } = this.state;\n    top[i].score = points;\n    this.setState({ top, hasScored: true, showScoreButtons: false });\n  }\n\n  handleBottomScore = (points, i) => {\n    const { bottom } = this.state;\n    bottom[i].score = points;\n    this.setState({ bottom, hasScored: true, showScoreButtons: false });\n  }\n\n  render() {\n    const {\n      values, saved, roll, top, showScoreButtons, bottom, topSum, finalTopSum, bottomSum,\n    } = this.state;\n    const { scores } = this.props;\n\n    return (\n      <div>\n        <div className=\"flex-container\">\n          <Typography variant=\"h2\">Yahtzee</Typography>\n          <ScoreGraph scores={scores} />\n        </div>\n        <hr />\n        <div className=\"flex-container\">\n          <Typography variant=\"h4\">{`Roll #${roll}/3`}</Typography>\n          <div style={{ display: 'block', margin: 'auto', width: 320 }}>\n            {map(saved, (val, i) => (\n              <Button color=\"secondary\" onClick={() => this.handleUnsave(i)} variant=\"outlined\" key={i}>\n                {val}\n              </Button>\n            ))}\n            {map(values, (val, i) => (\n              <Button color=\"primary\" onClick={() => this.handleSave(i)} variant=\"outlined\" key={i}>\n                {val}\n              </Button>\n            ))}\n          </div>\n          <Button color=\"primary\" onClick={this.handleDiceRoll} variant=\"contained\">\n            {this.getButtonText(roll)}\n          </Button>\n        </div>\n        <hr />\n        <Typography variant=\"h4\">{`Total: ${finalTopSum + bottomSum}`}</Typography>\n        <ScoreTable\n          values={[...saved, ...values]}\n          bottom={bottom}\n          top={top}\n          onTopScore={this.handleTopScore}\n          onBottomScore={this.handleBottomScore}\n          showScoreButtons={showScoreButtons}\n          topSum={topSum}\n          finalTopSum={finalTopSum}\n          bottomSum={bottomSum}\n        />\n      </div>\n    );\n  }\n}\n\n// react-redux export\nconst mapStateToProps = state => ({ scores: state.yahtzee });\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({ addScore }, dispatch),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Yahtzee);\n","import Yahtzee from './Yahtzee';\n\nexport default Yahtzee;\n"],"sourceRoot":""}