{"version":3,"sources":["../node_modules/@mui/material/Table/Tablelvl2Context.js","../node_modules/@mui/material/Table/TableContext.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../node_modules/@mui/material/TableRow/tableRowClasses.js","../node_modules/@mui/material/TableRow/TableRow.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","components/games/tictactoe/Header.tsx","components/games/tictactoe/helpers.ts","components/games/tictactoe/History.tsx","components/games/tictactoe/Cell.tsx","components/games/tictactoe/Board.tsx","components/games/tictactoe/TicTacToe.tsx"],"names":["Tablelvl2Context","React","TableContext","getTableUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableRoot","styled","name","overridesResolver","props","styles","ownerState","root","stickyHeader","theme","_extends","display","width","borderCollapse","borderSpacing","typography","body2","padding","spacing","color","palette","text","secondary","textAlign","captionSide","defaultComponent","Table","inProps","ref","useThemeProps","className","component","size","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","table","_jsx","Provider","value","children","as","role","clsx","getTableBodyUtilityClass","TableBodyRoot","tablelvl2","variant","TableBody","getTableRowUtilityClass","tableRowClasses","TableRowRoot","head","footer","verticalAlign","outline","hover","backgroundColor","action","selected","alpha","primary","main","selectedOpacity","hoverOpacity","TableRow","getTableCellUtilityClass","tableCellClasses","TableCellRoot","capitalize","align","borderBottom","mode","lighten","divider","darken","lineHeight","pxToRem","fontWeight","fontWeightMedium","fontSize","paddingCheckbox","flexDirection","position","top","zIndex","background","default","TableCell","componentProp","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","Header","memo","winner","turn","newGame","Toolbar","Typography","style","flex","Button","onClick","getTurn","n","O","X","calculateWinner","board","lines","i","length","a","b","c","EMPTY","winRow","undefined","History","useState","ascend","setAscend","history","step","jumpToStep","getHistoryText","useCallback","round","move","location","description","Math","floor","moves","map","reverse","marginTop","marginBottom","Cell","useTheme","attr","tableCellStyle","border","grey","Board","cells","useMemo","newCells","row","j","includes","push","boardRow","paperStyles","margin","TicTacToe","useSelector","state","ticTacToe","dispatch","useDispatch","handleClick","newHistory","slice","playTurn","concat","newTTTGame","stepNo","newTurn","gutterBottom","Paper","elevation"],"mappings":"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","file":"static/js/g_tictactoe.1fd915a3.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableBody;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { darken, alpha, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\n\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: theme.palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: theme.palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: theme.palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: theme.palette.background.default\n}));\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n\n  let scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default TableCell;","import React from 'react';\nimport Button from '@mui/material/Button';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\ninterface HeaderProps {\n  newGame: React.MouseEventHandler;\n  turn: string;\n  winner?: string;\n}\n\nconst Header: React.FC<HeaderProps> = React.memo(({ winner, turn, newGame }: HeaderProps) => (\n  <Toolbar>\n    <Typography style={{ flex: 1 }} variant=\"h6\">\n      {winner ? `Winner: ${winner}` : `Turn: ${turn}`}\n    </Typography>\n    <Button color=\"primary\" onClick={newGame} variant=\"contained\" role=\"button\">\n      Reset Game\n    </Button>\n  </Toolbar>\n));\n\nexport default Header;\n","import { O, X, EMPTY } from '../../../store/initialState';\n\nexport const getTurn = (n: number): string => (n % 2 ? O : X);\n\n/** function to check if there are 3 in a row\n * @return value of winner and positions for winner */\nexport function calculateWinner(board: string[] | undefined[]): { winner?: string; winRow: [number?, number?, number?] } {\n  const lines: [number, number, number][] = [\n    // horizontal\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    // vertical\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    // diagonal\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  // check each win condition\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    // if all 3 match and aren't empty\n    if (board[a] !== EMPTY && board[a] === board[b] && board[a] === board[c]) {\n      // return winner and winning positions\n      return { winner: board[a], winRow: lines[i] };\n    }\n  }\n  return { winner: undefined, winRow: []};\n}\n\nexport default getTurn;\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport { getTurn } from './helpers';\nimport { DBHistoryEntry } from '../../../store/types';\n\ninterface HistoryProps {\n  history: DBHistoryEntry[];\n  jumpToStep: (move: number) => void;\n  step: number;\n}\n\nconst History: React.FC<HistoryProps> = (props: HistoryProps) => {\n  const [ascend, setAscend] = React.useState(true);\n  const { history, step, jumpToStep } = props;\n\n  /** function that generates text for the history tracker */\n  const getHistoryText = React.useCallback((round: DBHistoryEntry, move: number): React.ReactNode => {\n    const location = round.location || 0;\n    // generate description text\n    const description = !move\n      ? 'Game Start (Turn, Col, Row)'\n      : `Move #${move} (${getTurn(move - 1)}, `\n      + `${Math.floor(location / 3)}, ${location % 3})`;\n    // highlight current turn displayed on board\n    const color = step === move ? 'secondary' : 'primary';\n\n    return (\n      <Button\n        key={move}\n        color={color}\n        onClick={(): void => jumpToStep(move)}\n        role=\"button\"\n        style={{ display: 'block' }}\n      >\n        {description}\n      </Button>\n    );\n  }, [jumpToStep, step]);\n\n  // move history\n  const moves = history.map(getHistoryText);\n  // asc vs. desc\n  !ascend && moves.reverse();\n\n  return (\n    <>\n      <Button\n        onClick={(): void => { setAscend(!ascend); }}\n        style={{ marginTop: 20, marginBottom: 20 }}\n        variant=\"contained\"\n        role=\"button\"\n      >\n        {ascend ? 'Asc' : 'Desc'}\n      </Button>\n      {moves}\n    </>\n  );\n};\n\nexport default History;\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport { useTheme } from '@mui/material/styles';\n\ninterface CellProps {\n  onClick: React.MouseEventHandler;\n  value?: string;\n  winner: boolean;\n}\n\nconst Cell: React.FC<CellProps> = React.memo((props: CellProps) => {\n  const { value, winner, onClick } = props;\n  const { palette: { primary: { main }}} = useTheme();\n  // add attributes if cell is a winner\n  const attr: React.CSSProperties = winner ? { color: 'white', backgroundColor: main } : {};\n\n  return (\n    <Button onClick={onClick} style={attr} role=\"button\">\n      {value || <br />}\n    </Button>\n  );\n});\n\nexport default Cell;\n","import React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport { grey } from '@mui/material/colors';\nimport Cell from './Cell';\n\ninterface BoardProps {\n  board: string[] | undefined[];\n  onClick: (cell: number) => void;\n  winRow: [number?, number?, number?];\n}\n\nconst tableCellStyle: React.CSSProperties = {\n  padding: 0,\n  textAlign: 'center',\n  border: `1px solid ${grey[400]}`,\n};\n\nconst Board: React.FC<BoardProps> = (props: BoardProps) => {\n  const { board, onClick, winRow } = props;\n\n  const cells = React.useMemo(() => {\n    const newCells = [];\n\n    // create 3 rows\n    for (let i = 0; i < 3; i += 1) {\n      // create 3 cells in a row\n      const row = [];\n      for (let j = 0; j < 3; j += 1) {\n        const c = i * 3 + j;\n        // check if winning position\n        const winner = winRow.includes(c);\n        row.push(\n          <TableCell key={`${i},${j}`} style={tableCellStyle}>\n            <Cell onClick={(): void => onClick(c)} value={board[c]} winner={winner} />\n          </TableCell>,\n        );\n      }\n      const boardRow = (\n        <TableRow key={`row${i}`}>\n          {row}\n        </TableRow>\n      );\n      // separate into rows\n      newCells.push(boardRow);\n    }\n    return newCells;\n  }, [board, onClick, winRow]);\n\n  return (\n    <Table>\n      <TableBody>\n        {cells}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { playTurn, newGame } from '../../../store/modules/ticTacToe';\nimport Header from './Header';\nimport History from './History';\nimport Board from './Board';\nimport { getTurn, calculateWinner } from './helpers';\nimport { DBTicTacToe, DBRootState } from '../../../store/types';\nimport { X, O, EMPTY } from '../../../store/initialState';\n\nconst paperStyles: React.CSSProperties = { width: 343, display: 'block', margin: 'auto' };\n\n/* TicTacToe  ->  Header\n *           |->  Board  ->  Cell\n *           |->  History */\nconst TicTacToe: React.FC = () => {\n  const { turn, step, history } = useSelector((state: DBRootState) => ({ ...state.ticTacToe }));\n  const dispatch = useDispatch();\n\n  /** function that modifies board with appropriate turn\n   * @param location - location of board click (row * 3 + col) */\n  const handleClick = React.useCallback((location: number): void => {\n    const newHistory = history.slice(0, step + 1);\n    const current = newHistory[step];\n    const board = current.board.slice();\n\n    // game is over or cell is full\n    if (!calculateWinner(board).winner && board[location] === EMPTY) {\n      // place marker, then update turn\n      board[location] = turn;\n\n      dispatch(playTurn({\n        history: newHistory.concat([{ board, location }]),\n        step: newHistory.length,\n        turn: turn === X ? O : X,\n      }));\n    }\n  }, [dispatch, history, step, turn]);\n\n  /** function that resets game back to it's initial state */\n  const newTTTGame = React.useCallback((): void => {\n    dispatch(newGame());\n  }, [dispatch]);\n\n  /** function that modifies board to go back to a previous point in history\n   * @param step - desired point in history */\n  const jumpToStep = React.useCallback((stepNo: number): void => {\n    const newTurn: DBTicTacToe = { step: stepNo, turn: getTurn(stepNo), history };\n    // Double click will eliminate all other history if there is any\n    if (step === stepNo) {\n      newTurn.history = history.slice(0, step + 1);\n    }\n    // update board to previous turn, non-permanent, history exists still\n    dispatch(playTurn(newTurn));\n  }, [dispatch, history, step]);\n\n  const current = history[step];\n  const board = current.board.slice();\n  const { winner, winRow } = calculateWinner(board);\n\n  return (\n    <>\n      <Typography variant=\"h2\" gutterBottom>Tic-Tac-Toe</Typography>\n      <Paper elevation={2} style={paperStyles}>\n        <Header newGame={newTTTGame} turn={turn} winner={winner} />\n        <Board\n          board={board}\n          onClick={handleClick}\n          winRow={winRow}\n        />\n      </Paper>\n      <History history={history} jumpToStep={jumpToStep} step={step} />\n    </>\n  );\n};\n\nexport default TicTacToe;\n"],"sourceRoot":""}