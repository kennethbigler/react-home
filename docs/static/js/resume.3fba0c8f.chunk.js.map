{"version":3,"sources":["hooks/useToggle.ts","helpers/lazyWithPreload.ts","apis/noop.ts","hooks/useAnchorEl.ts","components/common/ButtonPopover.tsx","components/common/header/PlayerMenu.tsx","components/common/header/TopBar.tsx","components/common/header/Header.tsx","components/resume/Menu.tsx","components/resume/Routes.tsx"],"names":["useToggleState","defaultVal","React","useState","isToggled","setIsToggled","handleToggle","lazyWithPreload","ComponentPromise","lazy","useAnchorEl","anchorEl","setAnchorEl","setAnchor","e","currentTarget","clearAnchor","contentStyle","padding","ButtonPopover","props","children","buttonText","open","Boolean","Button","aria-haspopup","variant","component","onClick","Popover","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","style","cloneElement","namePadStyles","maxWidth","width","display","margin","PlayerMenu","players","useSelector","state","dispatch","useDispatch","isBot","useMemo","map","a","useCallback","isChecked","updateBot","handleBlur","updateName","target","value","handleKeyPress","key","Grid","container","spacing","item","xs","Typography","p","i","name","TextField","defaultValue","onBlur","onKeyPress","placeholder","Switch","checked","color","onChange","_e","isC","disabled","flexLeftStyles","alignItems","flexRightStyles","marginRight","spanTopStyles","left","right","top","TopBar","memo","theme","type","setChecked","toggleTheme","displayDarkTheme","displayLightTheme","toggleOpen","showPlayers","fontColor","iconColor","AppBar","Toolbar","disableGutters","className","IconButton","aria-label","cursor","defaultProps","Header","isOpen","setIsOpen","handleNav","palette","Drawer","position","onItemClick","loc","withTheme","Menu","menu","route","divider","index","Divider","MenuItem","noop","window","alt","src","paddingLeft","paddingRight","Summary","Work","Education","TravelMap","Resume","GitTools","Poker","MurderMystery","GraphQL","Cars","Routes","match","url","paths","reduce","acc","obj","path","push","exact","from","to","Suspense","fallback"],"mappings":"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","file":"static/js/resume.3fba0c8f.chunk.js","sourcesContent":["import React from 'react';\n\ntype ToggleStateHook = [ boolean, React.MouseEventHandler, Function ];\n\nconst useToggleState = (defaultVal = false): ToggleStateHook => {\n  const [isToggled, setIsToggled] = React.useState(defaultVal);\n\n  const handleToggle = (): void => { setIsToggled(!isToggled); };\n\n  return [isToggled, handleToggle, setIsToggled];\n};\n\nexport default useToggleState;\n","import React from 'react';\n\ntype Props = {};\ntype ReactComponent = React.ComponentType<Props>;\ntype ImportPromise = Promise<{ default: ReactComponent }>;\ntype LazyComponent = React.LazyExoticComponent<ReactComponent>;\n\nexport default function lazyWithPreload(ComponentPromise: ImportPromise): LazyComponent {\n  return React.lazy(() => ComponentPromise);\n}\n","export default (): void => {};\n","import React from 'react';\n\ninterface AnchorElHook {\n  anchorEl: null | HTMLElement;\n  setAnchor: React.MouseEventHandler;\n  clearAnchor: React.MouseEventHandler;\n}\n\nconst useAnchorEl = (): AnchorElHook => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const setAnchor = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(e.currentTarget);\n  };\n  const clearAnchor = (): void => {\n    setAnchorEl(null);\n  };\n  return { anchorEl, setAnchor, clearAnchor };\n};\n\nexport default useAnchorEl;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport useAnchorEl from '../../hooks/useAnchorEl';\n\ninterface ButtonPopoverProps {\n  children: React.ReactElement;\n  buttonText: string;\n}\n\nconst contentStyle: React.CSSProperties = { padding: 15 };\n\nconst ButtonPopover: React.FC<ButtonPopoverProps> = (props: ButtonPopoverProps) => {\n  const { anchorEl, setAnchor, clearAnchor } = useAnchorEl();\n  const { children, buttonText } = props;\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <Button\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        component=\"button\"\n        onClick={setAnchor}\n      >\n        {buttonText}\n      </Button>\n      <Popover\n        id=\"simple-popper\"\n        open={open}\n        anchorEl={anchorEl}\n        onClose={clearAnchor}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <div style={contentStyle}>\n          {React.cloneElement(children)}\n        </div>\n      </Popover>\n    </>\n  );\n};\n\nexport default ButtonPopover;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { updateName, updateBot } from '../../../store/modules/players';\nimport { DBRootState } from '../../../store/types';\n\nconst namePadStyles: React.CSSProperties = {\n  maxWidth: '420px',\n  width: '100%',\n  display: 'block',\n  margin: 'auto',\n};\n\nconst PlayerMenu: React.FC<{}> = () => {\n  const players = useSelector((state: DBRootState) => state.players);\n  const dispatch = useDispatch();\n\n  const isBot = React.useMemo(() => players.map((a) => a.isBot), [players]);\n\n  const handleToggle = React.useCallback(\n    (id: number, isChecked: boolean): void => {\n      dispatch(updateBot(id, isChecked));\n    },\n    [dispatch],\n  );\n\n  const handleBlur = React.useCallback(\n    (id: number) => (e: React.FocusEvent<HTMLInputElement>): void => {\n      dispatch(updateName(id, e.target.value || ''));\n    },\n    [dispatch],\n  );\n\n  const handleKeyPress = React.useCallback(\n    (id: number) => (e: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (e.key === 'Enter') {\n        dispatch(updateName(id, (e.target as HTMLInputElement).value || ''));\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <div style={namePadStyles}>\n      <Grid container spacing={1}>\n        <Grid item xs={9}>\n          <Typography variant=\"h5\">\n            Edit Player Names\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography variant=\"h5\">\n            Is Bot?\n          </Typography>\n        </Grid>\n      </Grid>\n      {players.map((p, i) => (p.id !== 0\n        ? (\n          <Grid key={`${p.name},${i}`} container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={p.name}\n                onBlur={handleBlur(p.id)}\n                onKeyPress={handleKeyPress(p.id)}\n                placeholder=\"Enter Player Name\"\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Switch\n                checked={isBot[i]}\n                color=\"primary\"\n                onChange={(_e, isC): void => handleToggle(p.id, isC)}\n              />\n            </Grid>\n          </Grid>\n        ) : (\n          <Grid key={`${p.name},${i}`} container spacing={1}>\n            <Grid item xs={9}>\n              <Typography variant=\"h5\">\n                {p.name}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}>\n              <Switch checked disabled />\n            </Grid>\n          </Grid>\n        )\n      ))}\n    </div>\n  );\n};\n\nexport default PlayerMenu;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Switch from '@material-ui/core/Switch';\nimport SimplePopover from '../ButtonPopover';\nimport PlayerMenu from './PlayerMenu';\nimport {\n  displayDarkTheme,\n  displayLightTheme,\n} from '../../../store/modules/theme';\nimport { DBRootState } from '../../../store/types';\n\ninterface TopBarProps {\n  fontColor: 'inherit' | 'initial' | 'error' | 'primary' | 'secondary' | 'textPrimary' | 'textSecondary' | undefined;\n  iconColor: 'inherit' | 'primary' | 'secondary' | 'default' | undefined;\n  showPlayers?: boolean;\n  toggleOpen: React.MouseEventHandler;\n}\n\nconst flexLeftStyles: React.CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n};\nconst flexRightStyles: React.CSSProperties = {\n  display: 'flex',\n  marginRight: 15,\n};\nconst spanTopStyles: React.CSSProperties = { left: 0, right: 0, top: 0 };\n\nconst TopBar: React.FC<TopBarProps> = React.memo((props: TopBarProps) => {\n  const theme = useSelector((state: DBRootState) => state.theme);\n  const dispatch = useDispatch();\n\n  const [checked, setChecked] = React.useState(theme.type !== 'dark');\n\n  const toggleTheme = React.useCallback(\n    (): void => {\n      checked\n        ? dispatch(displayDarkTheme())\n        : dispatch(displayLightTheme());\n      setChecked(!checked);\n    },\n    [checked, dispatch],\n  );\n\n  const {\n    toggleOpen, showPlayers, fontColor, iconColor,\n  } = props;\n\n  return (\n    <AppBar style={spanTopStyles}>\n      <Toolbar disableGutters>\n        <div className=\"flex-container\">\n          <div style={flexLeftStyles}>\n            <IconButton\n              aria-label=\"Menu\"\n              onClick={toggleOpen}\n              color={iconColor}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              onClick={toggleOpen}\n              style={{ cursor: 'pointer' }}\n              variant=\"h6\"\n              color={fontColor}\n            >\n              Menu\n            </Typography>\n          </div>\n          {showPlayers && (\n            <div style={flexRightStyles}>\n              <SimplePopover buttonText=\"Players\">\n                <PlayerMenu />\n              </SimplePopover>\n            </div>\n          )}\n          <div style={flexRightStyles}>\n            <Switch checked={checked} onChange={toggleTheme} />\n          </div>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n});\n\nTopBar.defaultProps = {\n  showPlayers: false,\n};\n\nexport default TopBar;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationClose from '@material-ui/icons/Close';\nimport { withTheme, Theme } from '@material-ui/core/styles';\nimport TopBar from './TopBar';\nimport useToggleState from '../../../hooks/useToggle';\n\ninterface NavProps {\n  onItemClick: (loc: string) => void;\n}\ninterface HeaderProps {\n  children: React.ReactElement<NavProps>;\n  handleNav: Function;\n  showPlayers?: boolean;\n  theme: Theme;\n}\n\nconst Header: React.FC<HeaderProps> = (props: HeaderProps) => {\n  const [isOpen, toggleOpen, setIsOpen] = useToggleState(false);\n  const {\n    children, handleNav, showPlayers,\n    theme: { palette: { type }},\n  } = props;\n\n  const handleNavigation = (loc: string): void => {\n    setIsOpen(false);\n    handleNav(loc);\n  };\n\n  const iconColor = type === 'light' ? 'inherit' : 'default';\n  const fontColor = type === 'light' ? 'inherit' : 'initial';\n\n  return (\n    <>\n      <TopBar toggleOpen={toggleOpen} showPlayers={showPlayers} fontColor={fontColor} iconColor={iconColor} />\n      <Drawer onClose={toggleOpen} open={isOpen}>\n        <AppBar position=\"sticky\">\n          <Toolbar disableGutters>\n            <IconButton\n              aria-label=\"Menu Close\"\n              onClick={toggleOpen}\n              color={iconColor}\n            >\n              <NavigationClose />\n            </IconButton>\n            <Typography variant=\"h6\" color={fontColor}>\n              Menu\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        {React.cloneElement(children, { onItemClick: handleNavigation })}\n      </Drawer>\n    </>\n  );\n};\n\nHeader.defaultProps = {\n  showPlayers: false,\n};\n\nexport default withTheme(Header);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport noop from '../../apis/noop';\n\ninterface MenuProps {\n  onItemClick?: Function;\n}\n\nconst Menu: React.FC<MenuProps> = React.memo((props: MenuProps) => {\n  const { onItemClick } = props;\n  // internal routes\n  const menu = [\n    { name: 'Summary', route: '' },\n    { name: 'Work', route: 'work' },\n    { name: 'Resume', route: 'resume' },\n    { name: 'Hackathons & Education', route: 'education' },\n    { divider: true },\n    { name: 'Git Tools', route: 'git-tools' },\n    { name: 'GraphQL Demo', route: 'graphql' },\n    { divider: true },\n    { name: 'Cars', route: 'cars' },\n    { name: 'Travel Map', route: 'travel' },\n    { name: 'Murder Mystery', route: 'murder' },\n    { name: 'Poker Night Scores', route: 'poker' },\n    { name: 'React Games', route: 'games' },\n  ].map((item, index) => (item.divider\n    ? (\n      <Divider key={index} />\n    ) : (\n      <MenuItem key={item.name} onClick={(): void => (onItemClick ? onItemClick(`/${item.route}`) : noop())}>\n        {item.name}\n      </MenuItem>\n    )\n  ));\n\n  // external links\n  const github = (): void => { window.open('https://github.com/kennethbigler/react-home'); };\n  const linkedIn = (): void => { window.open('https://www.linkedin.com/in/kennethbigler'); };\n  const stackOverflow = (): void => { window.open('https://stackoverflow.com/users/4830309/ken-bigler'); };\n\n  return (\n    <>\n      {menu}\n      <Divider />\n      <MenuItem onClick={github}>\n        GitHub\n      </MenuItem>\n      <MenuItem onClick={linkedIn}>\n        LinkedIn\n      </MenuItem>\n      <Divider />\n      <br />\n      <img\n        alt=\"profile for Ken Bigler at Stack Overflow, Q&A for professional and enthusiast programmers\"\n        id=\"stackOverflow\"\n        onClick={stackOverflow}\n        src=\"https://stackoverflow.com/users/flair/4830309.png?theme=dark\"\n        style={{\n          display: 'block',\n          margin: 'auto',\n          cursor: 'pointer',\n          width: 240,\n          paddingLeft: 16,\n          paddingRight: 16,\n        }}\n      />\n    </>\n  );\n});\n\nexport default Menu;\n","import React from 'react';\nimport {\n  Switch, Route, Redirect, match as Match,\n} from 'react-router-dom';\nimport lazyWithPreload from '../../helpers/lazyWithPreload';\nimport Header from '../common/header/Header';\nimport Menu from './Menu';\nimport LoadingSpinner from '../common/loading-spinner';\n\n// lazy load page components\nconst Summary = lazyWithPreload(import(/* webpackChunkName: \"r_summary\" */ './summary'));\nconst Work = lazyWithPreload(import(/* webpackChunkName: \"r_work\" */ './work'));\nconst Education = lazyWithPreload(import(/* webpackChunkName: \"r_education\" */ './education'));\nconst TravelMap = lazyWithPreload(import(/* webpackChunkName: \"r_travel\" */ './travel-map'));\nconst Resume = lazyWithPreload(import(/* webpackChunkName: \"r_resume\" */ './resume'));\nconst GitTools = lazyWithPreload(import(/* webpackChunkName: \"r_git\" */ './git-tools'));\nconst Poker = lazyWithPreload(import(/* webpackChunkName: \"r_poker\" */ './poker'));\nconst MurderMystery = lazyWithPreload(import(/* webpackChunkName: \"r_poker\" */ './murder-mystery'));\nconst GraphQL = lazyWithPreload(import(/* webpackChunkName: \"r_graphql\" */ './graphql'));\nconst Cars = lazyWithPreload(import(/* webpackChunkName: \"r_cars\" */ './cars'));\n\ninterface RoutesProps {\n  handleNav: Function;\n  match: Match;\n}\n\nconst Routes: React.FC<RoutesProps> = (props: RoutesProps) => {\n  const { match, handleNav } = props;\n  const { url } = match;\n\n  const paths = [\n    { name: 'work', component: Work },\n    { name: 'education', component: Education },\n    { name: 'travel', component: TravelMap },\n    { name: 'resume', component: Resume },\n    { name: 'git-tools', component: GitTools },\n    { name: 'poker', component: Poker },\n    { name: 'murder', component: MurderMystery },\n    { name: 'graphql', component: GraphQL },\n    { name: 'cars', component: Cars },\n  ].reduce((acc: React.ReactNodeArray, obj) => {\n    const { name, component } = obj;\n    const path = `${url}${name}`;\n    acc.push(<Route key={`${path}r`} exact {...{ path, component }} />);\n    acc.push(<Redirect key={`${path}d`} from={`${path}*`} to={path} />);\n    return acc;\n  },\n  []);\n\n  return (\n    <>\n      <Header handleNav={handleNav}>\n        <Menu />\n      </Header>\n      <React.Suspense fallback={<LoadingSpinner />}>\n        <Switch>\n          <Route component={Summary} exact path={`${url}`} />\n          {paths}\n          <Redirect from={`${url}*`} to={`${url}`} />\n          <Route component={Summary} />\n        </Switch>\n      </React.Suspense>\n    </>\n  );\n};\n\nexport default Routes;\n"],"sourceRoot":""}