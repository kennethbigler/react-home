{"version":3,"sources":["hooks/useToggle.ts","apis/noop.ts","helpers/lazyWithPreload.ts","hooks/useAnchorEl.ts","components/common/ButtonPopover.tsx","components/common/header/PlayerMenu.tsx","components/common/header/TopBar.tsx","components/common/header/Header.tsx","components/resume/Menu.tsx","components/resume/Routes.tsx"],"names":["useToggleState","defaultVal","React","useState","isToggled","setIsToggled","handleToggle","lazyWithPreload","ComponentPromise","lazy","useAnchorEl","anchorEl","setAnchorEl","setAnchor","e","currentTarget","clearAnchor","contentStyle","padding","ButtonPopover","props","children","buttonText","open","Boolean","Button","aria-haspopup","variant","component","onClick","Popover","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","style","cloneElement","namePadStyles","maxWidth","width","display","margin","connect","state","players","dispatch","playerActions","bindActionCreators","updateName","updateBot","isBot","useMemo","map","a","useCallback","isChecked","handleBlur","target","value","handleKeyPress","key","Grid","container","spacing","item","xs","Typography","p","i","name","TextField","defaultValue","onBlur","onKeyPress","placeholder","Switch","checked","color","onChange","_e","isC","disabled","flexLeftStyles","alignItems","flexRightStyles","marginRight","spanTopStyles","left","right","top","TopBar","memo","theme","themeActions","toggleOpen","showPlayers","fontColor","iconColor","type","setChecked","toggleTheme","displayDarkTheme","displayLightTheme","AppBar","Toolbar","disableGutters","className","IconButton","aria-label","cursor","defaultProps","Header","isOpen","setIsOpen","handleNav","palette","Drawer","position","onItemClick","loc","withTheme","Menu","menu","route","divider","index","Divider","MenuItem","noop","window","alt","src","paddingLeft","paddingRight","Summary","Work","Education","TravelMap","Resume","GitTools","Poker","MurderMystery","GraphQL","Cars","Routes","match","url","paths","reduce","acc","obj","path","push","exact","from","to","fallback"],"mappings":"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","file":"static/js/resume.35fd3c95.chunk.js","sourcesContent":["import React from 'react';\n\ntype ToggleStateHook = [ boolean, React.MouseEventHandler, Function ];\n\nconst useToggleState = (defaultVal = false): ToggleStateHook => {\n  const [isToggled, setIsToggled] = React.useState(defaultVal);\n\n  const handleToggle = (): void => { setIsToggled(!isToggled); };\n\n  return [isToggled, handleToggle, setIsToggled];\n};\n\nexport default useToggleState;\n","export default (): void => {};\n","import React from 'react';\n\ntype Props = {};\ntype ReactComponent = React.ComponentType<Props>;\ntype ImportPromise = Promise<{ default: ReactComponent }>;\ntype LazyComponent = React.LazyExoticComponent<ReactComponent>;\n\nexport default function lazyWithPreload(ComponentPromise: ImportPromise): LazyComponent {\n  return React.lazy(() => ComponentPromise);\n}\n","import React from 'react';\n\ninterface AnchorElHook {\n  anchorEl: null | HTMLElement;\n  setAnchor: React.MouseEventHandler;\n  clearAnchor: React.MouseEventHandler;\n}\n\nconst useAnchorEl = (): AnchorElHook => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const setAnchor = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(e.currentTarget);\n  };\n  const clearAnchor = (): void => {\n    setAnchorEl(null);\n  };\n  return { anchorEl, setAnchor, clearAnchor };\n};\n\nexport default useAnchorEl;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport useAnchorEl from '../../hooks/useAnchorEl';\n\ninterface ButtonPopoverProps {\n  children: React.ReactElement;\n  buttonText: string;\n}\n\nconst contentStyle: React.CSSProperties = { padding: 15 };\n\nconst ButtonPopover: React.FC<ButtonPopoverProps> = (props: ButtonPopoverProps) => {\n  const { anchorEl, setAnchor, clearAnchor } = useAnchorEl();\n  const { children, buttonText } = props;\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <Button\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        component=\"button\"\n        onClick={setAnchor}\n      >\n        {buttonText}\n      </Button>\n      <Popover\n        id=\"simple-popper\"\n        open={open}\n        anchorEl={anchorEl}\n        onClose={clearAnchor}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <div style={contentStyle}>\n          {React.cloneElement(children)}\n        </div>\n      </Popover>\n    </>\n  );\n};\n\nexport default ButtonPopover;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { updateName, updateBot } from '../../../store/modules/players';\nimport { DBRootState, DBPlayer } from '../../../store/types';\n\ninterface PlayerActions {\n  updateName: Function;\n  updateBot: Function;\n}\ninterface PlayerMenuProps {\n  playerActions: PlayerActions;\n  players: DBPlayer[];\n}\n\nconst namePadStyles: React.CSSProperties = {\n  maxWidth: '420px',\n  width: '100%',\n  display: 'block',\n  margin: 'auto',\n};\n\nconst PlayerMenu: React.FC<PlayerMenuProps> = (props: PlayerMenuProps) => {\n  const { players, playerActions } = props;\n\n  const isBot = React.useMemo(() => players.map((a) => a.isBot), [players]);\n\n  const handleToggle = React.useCallback(\n    (id: number, isChecked: boolean): void => {\n      playerActions.updateBot(id, isChecked);\n    },\n    [playerActions],\n  );\n\n  const handleBlur = React.useCallback(\n    (id: number) => (e: React.FocusEvent<HTMLInputElement>): void => {\n      playerActions.updateName(id, e.target.value || '');\n    },\n    [playerActions],\n  );\n\n  const handleKeyPress = React.useCallback(\n    (id: number) => (e: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (e.key === 'Enter') {\n        playerActions.updateName(id, (e.target as HTMLInputElement).value || '');\n      }\n    },\n    [playerActions],\n  );\n\n  return (\n    <div style={namePadStyles}>\n      <Grid container spacing={1}>\n        <Grid item xs={9}>\n          <Typography variant=\"h5\">\n            Edit Player Names\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography variant=\"h5\">\n            Is Bot?\n          </Typography>\n        </Grid>\n      </Grid>\n      {players.map((p, i) => (p.id !== 0\n        ? (\n          <Grid key={`${p.name},${i}`} container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={p.name}\n                onBlur={handleBlur(p.id)}\n                onKeyPress={handleKeyPress(p.id)}\n                placeholder=\"Enter Player Name\"\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Switch\n                checked={isBot[i]}\n                color=\"primary\"\n                onChange={(_e, isC): void => handleToggle(p.id, isC)}\n              />\n            </Grid>\n          </Grid>\n        ) : (\n          <Grid key={`${p.name},${i}`} container spacing={1}>\n            <Grid item xs={9}>\n              <Typography variant=\"h5\">\n                {p.name}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}>\n              <Switch checked disabled />\n            </Grid>\n          </Grid>\n        )\n      ))}\n    </div>\n  );\n};\n\n// react-redux export\nconst mapStateToProps = (state: DBRootState): { players: DBPlayer[] } => ({\n  players: state.players,\n});\nconst mapDispatchToProps = (dispatch: Dispatch): { playerActions: PlayerActions } => ({\n  playerActions: bindActionCreators({ updateName, updateBot }, dispatch),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlayerMenu);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Switch from '@material-ui/core/Switch';\nimport SimplePopover from '../ButtonPopover';\nimport PlayerMenu from './PlayerMenu';\nimport {\n  displayDarkTheme,\n  displayLightTheme,\n} from '../../../store/modules/theme';\nimport { DBUITheme, DBRootState } from '../../../store/types';\n\ninterface ThemeActions {\n  displayDarkTheme: Function;\n  displayLightTheme: Function;\n}\ninterface TopBarProps {\n  fontColor: 'inherit' | 'initial' | 'error' | 'primary' | 'secondary' | 'textPrimary' | 'textSecondary' | undefined;\n  iconColor: 'inherit' | 'primary' | 'secondary' | 'default' | undefined;\n  showPlayers?: boolean;\n  theme: DBUITheme;\n  themeActions: ThemeActions;\n  toggleOpen: React.MouseEventHandler;\n}\n\nconst flexLeftStyles: React.CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n};\nconst flexRightStyles: React.CSSProperties = {\n  display: 'flex',\n  marginRight: 15,\n};\nconst spanTopStyles: React.CSSProperties = { left: 0, right: 0, top: 0 };\n\nconst TopBar: React.FC<TopBarProps> = React.memo((props: TopBarProps) => {\n  const {\n    theme, themeActions, toggleOpen, showPlayers, fontColor, iconColor,\n  } = props;\n\n  const [checked, setChecked] = React.useState(theme.type !== 'dark');\n\n  const toggleTheme = React.useCallback(\n    (): void => {\n      checked\n        ? themeActions.displayDarkTheme()\n        : themeActions.displayLightTheme();\n      setChecked(!checked);\n    },\n    [checked, themeActions],\n  );\n\n  return (\n    <AppBar style={spanTopStyles}>\n      <Toolbar disableGutters>\n        <div className=\"flex-container\">\n          <div style={flexLeftStyles}>\n            <IconButton\n              aria-label=\"Menu\"\n              onClick={toggleOpen}\n              color={iconColor}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              onClick={toggleOpen}\n              style={{ cursor: 'pointer' }}\n              variant=\"h6\"\n              color={fontColor}\n            >\n              Menu\n            </Typography>\n          </div>\n          {showPlayers && (\n            <div style={flexRightStyles}>\n              <SimplePopover buttonText=\"Players\">\n                <PlayerMenu />\n              </SimplePopover>\n            </div>\n          )}\n          <div style={flexRightStyles}>\n            <Switch checked={checked} onChange={toggleTheme} />\n          </div>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n});\n\nTopBar.defaultProps = {\n  showPlayers: false,\n};\n\n// react-redux export\nconst mapStateToProps = (state: DBRootState): { theme: DBUITheme } => ({\n  theme: state.theme,\n});\nconst mapDispatchToProps = (dispatch: Dispatch): { themeActions: ThemeActions } => ({\n  themeActions: bindActionCreators(\n    { displayDarkTheme, displayLightTheme },\n    dispatch,\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationClose from '@material-ui/icons/Close';\nimport { withTheme, Theme } from '@material-ui/core/styles';\nimport TopBar from './TopBar';\nimport useToggleState from '../../../hooks/useToggle';\n\ninterface NavProps {\n  onItemClick: (loc: string) => void;\n}\ninterface HeaderProps {\n  children: React.ReactElement<NavProps>;\n  handleNav: Function;\n  showPlayers?: boolean;\n  theme: Theme;\n}\n\nconst Header: React.FC<HeaderProps> = (props: HeaderProps) => {\n  const [isOpen, toggleOpen, setIsOpen] = useToggleState(false);\n  const {\n    children, handleNav, showPlayers,\n    theme: { palette: { type }},\n  } = props;\n\n  const handleNavigation = (loc: string): void => {\n    setIsOpen(false);\n    handleNav(loc);\n  };\n\n  const iconColor = type === 'light' ? 'inherit' : 'default';\n  const fontColor = type === 'light' ? 'inherit' : 'initial';\n\n  return (\n    <>\n      <TopBar toggleOpen={toggleOpen} showPlayers={showPlayers} fontColor={fontColor} iconColor={iconColor} />\n      <Drawer onClose={toggleOpen} open={isOpen}>\n        <AppBar position=\"sticky\">\n          <Toolbar disableGutters>\n            <IconButton\n              aria-label=\"Menu Close\"\n              onClick={toggleOpen}\n              color={iconColor}\n            >\n              <NavigationClose />\n            </IconButton>\n            <Typography variant=\"h6\" color={fontColor}>\n              Menu\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        {React.cloneElement(children, { onItemClick: handleNavigation })}\n      </Drawer>\n    </>\n  );\n};\n\nHeader.defaultProps = {\n  showPlayers: false,\n};\n\nexport default withTheme(Header);\n","import React, { memo } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport noop from '../../apis/noop';\n\ninterface MenuProps {\n  onItemClick?: Function;\n}\n\nconst Menu: React.FC<MenuProps> = memo((props: MenuProps) => {\n  const { onItemClick } = props;\n  // internal routes\n  const menu = [\n    { name: 'Summary', route: '' },\n    { name: 'Work', route: 'work' },\n    { name: 'Resume', route: 'resume' },\n    { name: 'Hackathons & Education', route: 'education' },\n    { divider: true },\n    { name: 'Git Tools', route: 'git-tools' },\n    { name: 'GraphQL Demo', route: 'graphql' },\n    { divider: true },\n    { name: 'Cars', route: 'cars' },\n    { name: 'Travel Map', route: 'travel' },\n    { name: 'Murder Mystery', route: 'murder' },\n    { name: 'Poker Night Scores', route: 'poker' },\n    { name: 'React Games', route: 'games' },\n  ].map((item, index) => (item.divider\n    ? (\n      <Divider key={index} />\n    ) : (\n      <MenuItem key={item.name} onClick={(): void => (onItemClick ? onItemClick(`/${item.route}`) : noop())}>\n        {item.name}\n      </MenuItem>\n    )\n  ));\n\n  // external links\n  const github = (): void => { window.open('https://github.com/kennethbigler/react-home'); };\n  const linkedIn = (): void => { window.open('https://www.linkedin.com/in/kennethbigler'); };\n  const stackOverflow = (): void => { window.open('https://stackoverflow.com/users/4830309/ken-bigler'); };\n\n  return (\n    <>\n      {menu}\n      <Divider />\n      <MenuItem onClick={github}>\n        GitHub\n      </MenuItem>\n      <MenuItem onClick={linkedIn}>\n        LinkedIn\n      </MenuItem>\n      <Divider />\n      <br />\n      <img\n        alt=\"profile for Ken Bigler at Stack Overflow, Q&A for professional and enthusiast programmers\"\n        id=\"stackOverflow\"\n        onClick={stackOverflow}\n        src=\"https://stackoverflow.com/users/flair/4830309.png?theme=dark\"\n        style={{\n          display: 'block',\n          margin: 'auto',\n          cursor: 'pointer',\n          width: 240,\n          paddingLeft: 16,\n          paddingRight: 16,\n        }}\n      />\n    </>\n  );\n});\n\nexport default Menu;\n","import React, { Suspense } from 'react';\nimport {\n  Switch, Route, Redirect, match as Match,\n} from 'react-router-dom';\nimport lazyWithPreload from '../../helpers/lazyWithPreload';\nimport Header from '../common/header/Header';\nimport Menu from './Menu';\nimport LoadingSpinner from '../common/loading-spinner';\n\n// lazy load page components\nconst Summary = lazyWithPreload(import(/* webpackChunkName: \"r_summary\" */ './summary'));\nconst Work = lazyWithPreload(import(/* webpackChunkName: \"r_work\" */ './work'));\nconst Education = lazyWithPreload(import(/* webpackChunkName: \"r_education\" */ './education'));\nconst TravelMap = lazyWithPreload(import(/* webpackChunkName: \"r_travel\" */ './travel-map'));\nconst Resume = lazyWithPreload(import(/* webpackChunkName: \"r_resume\" */ './resume'));\nconst GitTools = lazyWithPreload(import(/* webpackChunkName: \"r_git\" */ './git-tools'));\nconst Poker = lazyWithPreload(import(/* webpackChunkName: \"r_poker\" */ './poker'));\nconst MurderMystery = lazyWithPreload(import(/* webpackChunkName: \"r_poker\" */ './murder-mystery'));\nconst GraphQL = lazyWithPreload(import(/* webpackChunkName: \"r_graphql\" */ './graphql'));\nconst Cars = lazyWithPreload(import(/* webpackChunkName: \"r_cars\" */ './cars'));\n\ninterface RoutesProps {\n  handleNav: Function;\n  match: Match;\n}\n\nconst Routes: React.FC<RoutesProps> = (props: RoutesProps) => {\n  const { match, handleNav } = props;\n  const { url } = match;\n\n  const paths = [\n    { name: 'work', component: Work },\n    { name: 'education', component: Education },\n    { name: 'travel', component: TravelMap },\n    { name: 'resume', component: Resume },\n    { name: 'git-tools', component: GitTools },\n    { name: 'poker', component: Poker },\n    { name: 'murder', component: MurderMystery },\n    { name: 'graphql', component: GraphQL },\n    { name: 'cars', component: Cars },\n  ].reduce((acc: React.ReactNodeArray, obj) => {\n    const { name, component } = obj;\n    const path = `${url}${name}`;\n    acc.push(<Route key={`${path}r`} exact {...{ path, component }} />);\n    acc.push(<Redirect key={`${path}d`} from={`${path}*`} to={path} />);\n    return acc;\n  },\n  []);\n\n  return (\n    <>\n      <Header handleNav={handleNav}>\n        <Menu />\n      </Header>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Switch>\n          <Route component={Summary} exact path={`${url}`} />\n          {paths}\n          <Redirect from={`${url}*`} to={`${url}`} />\n          <Route component={Summary} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default Routes;\n"],"sourceRoot":""}