{"version":3,"sources":["components/common/DarkTableCell.ts","constants/countries.ts","components/resume/travel-map/TravelTable.tsx","components/resume/travel-map/Popover.tsx","components/resume/travel-map/WorldMap.tsx","components/resume/travel-map/TravelMap.tsx","components/resume/travel-map/index.ts"],"names":["DarkTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","TableCell","countries","Austria","deepOrange","continent","flag","Bahamas","amber","Canada","blue","Denmark","deepPurple","Estonia","green","Finland","indigo","France","lightBlue","Germany","lightGreen","Greece","lime","Iceland","orange","Ireland","pink","Italy","purple","Mexico","brown","Netherlands","red","Norway","teal","Poland","yellow","Portugal","Russia","Spain","cyan","Sweden","Switzerland","Turkey","Gibraltar","Malta","Monaco","Vatican","NA","EU","forEach","country","name","push","marginStyles","marginTop","marginBottom","separatorStyles","borderRight","grey","cellStyles","padding","textAlign","whiteSpace","overflow","TravelMap","memo","len","Math","max","length","ceil","i","row","key","style","j","countryRow","TableRow","Typography","variant","Table","TableHead","colSpan","TableBody","Popover","props","x","y","hide","content","popoverStyle","position","left","top","display","borderRadius","STROKE","blueGrey","HOVER","VISITED_HOVER","FILL","PRESSED","WorldMap","useState","setX","setY","setContent","setHide","handleMove","geography","evt","get","clientX","clientY","window","pageYOffset","handleLeave","useWorldMap","screenWidth","document","body","clientWidth","width","height","projectionConfig","scale","rotation","geographies","projection","map","onMouseMove","onMouseLeave","default","fill","properties","NAME","stroke","strokeWidth","outline","hover","pressed","TravelTable"],"mappings":"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","file":"static/js/r_travel.2f4a155c.chunk.js","sourcesContent":["import { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\n\nconst DarkTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n}))(TableCell);\n\nexport default DarkTableCell;\n","import forEach from 'lodash/forEach';\nimport {\n  amber, blue, brown, cyan,\n  deepOrange, deepPurple, green, indigo,\n  lightBlue, lightGreen, lime, orange,\n  pink, purple, red, teal, yellow,\n} from '@material-ui/core/colors/';\n\ninterface Country {\n  color?: string;\n  continent: string;\n  flag: string;\n}\nexport interface Countries {\n  [name: string]: Country;\n}\n\nconst countries: Countries = {\n  Austria: { color: deepOrange[500], continent: 'EU', flag: 'ðŸ‡¦ðŸ‡¹' },\n  Bahamas: { color: amber[500], continent: 'NA', flag: 'ðŸ‡§ðŸ‡¸' },\n  Canada: { color: blue[500], continent: 'NA', flag: 'ðŸ‡¨ðŸ‡¦' },\n  Denmark: { color: deepPurple[500], continent: 'EU', flag: 'ðŸ‡©ðŸ‡°' },\n  Estonia: { color: green[500], continent: 'EU', flag: 'ðŸ‡ªðŸ‡ª' },\n  Finland: { color: indigo[500], continent: 'EU', flag: 'ðŸ‡«ðŸ‡®' },\n  France: { color: lightBlue[500], continent: 'EU', flag: 'ðŸ‡«ðŸ‡·' },\n  Germany: { color: lightGreen[500], continent: 'EU', flag: 'ðŸ‡©ðŸ‡ª' },\n  Greece: { color: lime[500], continent: 'EU', flag: 'ðŸ‡¬ðŸ‡·' },\n  Iceland: { color: orange[500], continent: 'EU', flag: 'ðŸ‡®ðŸ‡¸' },\n  Ireland: { color: pink[500], continent: 'EU', flag: 'ðŸ‡®ðŸ‡ª' },\n  Italy: { color: purple[500], continent: 'EU', flag: 'ðŸ‡®ðŸ‡¹' },\n  Mexico: { color: brown[500], continent: 'NA', flag: 'ðŸ‡²ðŸ‡½' },\n  Netherlands: { color: red[500], continent: 'EU', flag: 'ðŸ‡³ðŸ‡±' },\n  Norway: { color: teal[500], continent: 'EU', flag: 'ðŸ‡³ðŸ‡´' },\n  Poland: { color: yellow[500], continent: 'EU', flag: 'ðŸ‡µðŸ‡±' },\n  Portugal: { color: amber[800], continent: 'EU', flag: 'ðŸ‡µðŸ‡¹' },\n  Russia: { color: blue[800], continent: 'EU', flag: 'ðŸ‡·ðŸ‡º' },\n  Spain: { color: cyan[800], continent: 'EU', flag: 'ðŸ‡ªðŸ‡¸' },\n  Sweden: { color: deepOrange[800], continent: 'EU', flag: 'ðŸ‡¸ðŸ‡ª' },\n  Switzerland: { color: deepPurple[800], continent: 'EU', flag: 'ðŸ‡¨ðŸ‡­' },\n  Turkey: { color: green[800], continent: 'EU', flag: 'ðŸ‡¹ðŸ‡·' },\n  'United Kingdom': { color: indigo[800], continent: 'EU', flag: 'ðŸ‡¬ðŸ‡§' },\n  'United States of America': { color: cyan[500], continent: 'NA', flag: 'ðŸ‡ºðŸ‡¸' },\n  'British Virgin Islands': { continent: 'NA', flag: 'ðŸ‡»ðŸ‡¬' },\n  'Cayman Islands': { continent: 'NA', flag: 'ðŸ‡°ðŸ‡¾' },\n  'U.S. Virgin Islands': { continent: 'NA', flag: 'ðŸ‡»ðŸ‡®' },\n  Gibraltar: { continent: 'EU', flag: 'ðŸ‡¬ðŸ‡®' },\n  Malta: { continent: 'EU', flag: 'ðŸ‡²ðŸ‡¹' },\n  Monaco: { continent: 'EU', flag: 'ðŸ‡²ðŸ‡¨' },\n  Vatican: { continent: 'EU', flag: 'ðŸ‡»ðŸ‡¦' },\n};\n\nexport const NA: string[] = [];\nexport const EU: string[] = [];\n\nforEach(countries, (country, name): void => {\n  country.continent === 'NA' && NA.push(`${name} ${country.flag}`);\n  country.continent === 'EU' && EU.push(`${name} ${country.flag}`);\n});\n\nexport default countries;\n","import React, { memo } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography } from '@material-ui/core';\nimport grey from '@material-ui/core/colors/grey';\nimport DarkTableCell from '../../common/DarkTableCell';\nimport { NA, EU } from '../../../constants/countries';\n\nconst marginStyles: React.CSSProperties = { marginTop: 24, marginBottom: 16 };\nconst separatorStyles: React.CSSProperties = { borderRight: `1px solid ${grey[400]}` };\nconst cellStyles: React.CSSProperties = {\n  padding: 5,\n  textAlign: 'center',\n  whiteSpace: 'normal',\n  overflow: 'visible',\n};\n\nconst TravelMap: React.FC<{}> = memo(() => {\n  // ratio to display on table, 2:1 seemed to look best\n  const EURatio = 3;\n\n  // export array of <li> elements for display\n  const countries = [];\n  // iterate to the end of the longer list\n  const len = Math.max(NA.length, Math.ceil(EU.length / EURatio));\n  for (let i = 0; i < len; i += 1) {\n    const row = [];\n    // add NA Country\n    row.push(\n      <TableCell\n        key={`tmc${i}`}\n        style={{ ...cellStyles, ...separatorStyles }}\n      >\n        {NA[i]}\n      </TableCell>,\n    );\n    // add EU Countries\n    for (let j = 0; j < EURatio; j += 1) {\n      row.push(\n        <TableCell key={`tmc${i}${j}`} style={cellStyles}>\n          {EU[EURatio * i + j]}\n        </TableCell>,\n      );\n    }\n    // form the row\n    const countryRow = (\n      <TableRow key={`tmr${i}`}>\n        {row}\n      </TableRow>\n    );\n    countries.push(countryRow);\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\" style={marginStyles}>\n        {`I have been to ${NA.length + EU.length} countries:`}\n      </Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <DarkTableCell style={{ ...cellStyles, ...separatorStyles }}>\n              North America\n            </DarkTableCell>\n            <DarkTableCell colSpan={EURatio} style={cellStyles}>\n              Europe\n            </DarkTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {countries}\n        </TableBody>\n      </Table>\n    </>\n  );\n});\n\nexport default TravelMap;\n","import React, { memo } from 'react';\nimport grey from '@material-ui/core/colors/grey';\n\ninterface PopoverProps {\n  x: number;\n  y: number;\n  hide: boolean;\n  content: string;\n}\n\nconst Popover: React.FC<PopoverProps> = memo((props: PopoverProps) => {\n  const {\n    x, y, hide, content,\n  } = props;\n\n  const popoverStyle: React.CSSProperties = {\n    position: 'absolute',\n    left: x + 2,\n    top: y - 35,\n    display: hide ? 'none' : 'block',\n    backgroundColor: grey[800],\n    color: 'white',\n    padding: 5,\n    borderRadius: 2,\n  };\n\n  return (<div style={popoverStyle}>{content}</div>);\n});\n\nexport default Popover;\n","import React, { useState, memo } from 'react';\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n} from 'react-simple-maps';\nimport map from 'lodash/map';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport red from '@material-ui/core/colors/red';\nimport { GeoProjection } from 'd3-geo';\nimport get from 'lodash/get';\nimport Popover from './Popover';\nimport countries from '../../../constants/countries';\n\ninterface GeographyType {\n  properties: {\n    NAME: string;\n  };\n}\ninterface WorldMapHook {\n  x: number;\n  y: number;\n  content: string;\n  hide: boolean;\n  handleMove: (geography: object, evt: React.MouseEvent<SVGPathElement, MouseEvent>) => void;\n  handleLeave: () => void;\n}\n\nconst STROKE = blueGrey[900];\nconst HOVER = blueGrey[500];\nconst VISITED_HOVER = red[800];\nconst FILL = blueGrey[100];\nconst PRESSED = blueGrey[800];\nconst RATIO = 100 / 465.33;\n\nfunction useWorldMap(): WorldMapHook {\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [content, setContent] = useState('');\n  const [hide, setHide] = useState(true);\n\n  const handleMove = (geography: object, evt: React.MouseEvent<SVGPathElement, MouseEvent>): void => {\n    const name = get(geography, 'properties.NAME', '');\n    setX(evt.clientX);\n    setY(evt.clientY + window.pageYOffset);\n    setContent(`${name} ${countries[name] ? countries[name].flag : ''}`);\n    setHide(false);\n  };\n\n  const handleLeave = (): void => {\n    setHide(true);\n  };\n\n  return {\n    x,\n    y,\n    content,\n    hide,\n    handleMove,\n    handleLeave,\n  };\n}\n\nconst WorldMap = memo(() => {\n  const {\n    x, y, content, hide,\n    handleMove, handleLeave,\n  } = useWorldMap();\n\n  const screenWidth = document.body.clientWidth - 32;\n\n  return (\n    <>\n      <ComposableMap width={screenWidth} height={(screenWidth * 546) / 744} projectionConfig={{ scale: screenWidth * RATIO, rotation: [-10, 0, 0]}}>\n        <ZoomableGroup>\n          <Geographies geography=\"/world-110m.json\">\n            {(geographies: object[], projection: GeoProjection): React.ReactNodeArray => map(\n              geographies,\n              (geography: GeographyType, i) => (\n                <Geography\n                  key={i}\n                  geography={geography}\n                  projection={projection}\n                  onMouseMove={handleMove}\n                  onMouseLeave={handleLeave}\n                  style={{\n                    default: {\n                      fill: countries[geography.properties.NAME] ? countries[geography.properties.NAME].color : FILL,\n                      stroke: STROKE,\n                      strokeWidth: 0.75,\n                      outline: 'none',\n                    },\n                    hover: {\n                      fill: countries[geography.properties.NAME] ? VISITED_HOVER : HOVER,\n                      stroke: STROKE,\n                      strokeWidth: 0.75,\n                      outline: 'none',\n                    },\n                    pressed: {\n                      fill: PRESSED,\n                      stroke: STROKE,\n                      strokeWidth: 0.75,\n                      outline: 'none',\n                    },\n                  }}\n                />\n              ),\n            )}\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n      <Popover x={x} y={y} hide={hide} content={content} />\n    </>\n  );\n});\n\nexport default WorldMap;\n","import React, { memo } from 'react';\nimport { Typography } from '@material-ui/core';\nimport TravelTable from './TravelTable';\nimport WorldMap from './WorldMap';\n\n/* TravelMap  ->  WorldMap  ->  Popover\n *           |->  TravelTable */\nconst TravelMap: React.FC<{}> = memo(() => (\n  <>\n    <Typography variant=\"h2\">My Travel Map</Typography>\n    <WorldMap />\n    <TravelTable />\n  </>\n));\n\nexport default TravelMap;\n","// import TravelMap from './TravelMap';\nimport TravelMap from './TravelMap';\n\nexport default TravelMap;\n"],"sourceRoot":""}