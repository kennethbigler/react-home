{"version":3,"file":"static/js/g_are_you_the_one.84a7bf56.chunk.js","mappings":"6UAwGA,EAvFiB,SAACA,GAChB,IAAQC,EAAmCD,EAAnCC,YAAaC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SAG9B,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KACMC,EAAYH,EAAAA,OAA6B,MAczCI,EAAc,SAACC,GAEjBF,EAAUG,SACVH,EAAUG,QAAQC,SAASF,EAAMG,SAKnCN,GAAQ,EACT,EAED,OACE,iCACE,UAACO,EAAA,EAAD,CACEC,IAAKP,EACLQ,QAAQ,YACR,aAAW,eACXC,MAAOf,EAAc,IAAMC,EAAQe,OAAS,QAAU,UAJxD,WAME,SAACC,EAAA,EAAD,UAAShB,EAAQD,MACjB,SAACiB,EAAA,EAAD,CACEC,KAAK,QACL,gBAAed,EAAO,yBAAsBe,EAC5C,gBAAef,EAAO,YAASe,EAC/B,aAAW,iBACX,gBAAc,OACdC,QA9Ba,WACnBf,GAAQ,SAACgB,GAAD,OAAeA,CAAf,GACT,EAsBK,UAQE,SAACC,EAAA,EAAD,UAGJ,SAACC,EAAA,EAAD,CACEnB,KAAMA,EACNoB,SAAUlB,EAAUG,QACpBgB,UAAMN,EACNO,YAAU,EACVC,eAAa,EALf,SAOG,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,SAACC,EAAA,GAAD,kBACMF,GADN,IAEEG,MAAO,CACLC,gBACgB,WAAdH,EAAyB,aAAe,iBAJ9C,UAOE,SAACI,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAmBC,YAAa5B,EAAhC,UACE,SAAC6B,EAAA,EAAD,CAAUC,GAAG,oBAAoBC,eAAa,EAA9C,SACGrC,EAAQsC,KAAI,SAACC,EAAQC,GAAT,OACX,SAACC,EAAA,EAAD,CAEEC,SAAUF,IAAUzC,EACpBoB,QAAS,SAACZ,GAAD,OAjED,SAC1BA,EACAiC,GAEAvC,EAASuC,GACTpC,GAAQ,EACT,CA2DuCuC,CAAoBpC,EAAOiC,EAAtC,EAHX,SAKGD,GAJIA,EAFI,YAXtB,MA4BR,ECrFKK,EAAW,SAACC,GAAD,OAAoBC,MAAMD,IAAU,EAAIA,CAAxC,EA0DjB,EAxDiB,SAAC/C,GAA0B,IAAD,EAEvCE,EAMEF,EANFE,QACAC,EAKEH,EALFG,SACAF,EAIED,EAJFC,YACAgD,EAGEjD,EAHFiD,cACAC,EAEElD,EAFFkD,WACAC,EACEnD,EADFmD,YAIF,EAA0B/C,EAAAA,SACxB0C,EAAQ,UAACG,EAAchD,UAAf,aAAC,EAA4BmD,QADvC,eAAOA,EAAP,KAAcC,EAAd,KAmBA,OACE,iBAAKrB,MAAO,CAAEsB,QAAS,OAAQC,eAAgB,iBAA/C,WACE,SAAC,EAAD,CACEtD,YAAaA,EACbC,QAASA,EACTC,SAnBe,SAACuC,GAAmB,IAAD,EACtCW,EAASP,EAAQ,UAACG,EAAcP,UAAf,aAAC,EAAsBU,QACxCjD,EAASuC,EACV,IAkBIzC,EAAcC,EAAQe,OAAS,IAC9B,iCACE,SAACC,EAAA,EAAD,CAAQH,QAAQ,WAAWC,MAAM,YAAYK,QAlB9B,kBAAM6B,EAAWD,EAAchD,GAAauD,MAA5C,EAkBf,uBAGA,SAACC,EAAA,EAAD,CACEnB,GAAG,cACHoB,MAAM,QACN3C,QAAQ,WACR4C,KAAK,SACLZ,MAAOK,EACPQ,SAzBoB,SAC5BnD,GAEA4C,EAASQ,SAASpD,EAAMG,OAAOmC,MAAO,KAAO,GAC7CI,EAAYU,SAASpD,EAAMG,OAAOmC,MAAO,IAC1C,SA0BF,E,wHCpCD,EAtBiB,SAAC,GAAD,IACf1C,EADe,EACfA,KACAyD,EAFe,EAEfA,QACAC,EAHe,EAGfA,QACAC,EAJe,EAIfA,UACAC,EALe,EAKfA,SALe,OAOf,UAACC,EAAA,EAAD,CAAQC,QAASF,EAAU5D,KAAMA,EAAjC,WACE,SAAC+D,EAAA,EAAD,yBACA,UAACC,EAAA,EAAD,kBAAoBP,EAApB,wBACA,UAACQ,EAAA,EAAD,YACE,SAACpD,EAAA,EAAD,CAAQG,QAAS0C,EAAjB,oBACA,SAAC7C,EAAA,EAAD,CAAQG,QAAS2C,EAAWhD,MAAM,QAAlC,uBAGA,SAACE,EAAA,EAAD,CAAQG,QAAS4C,EAAUjD,MAAM,UAAjC,yBAfW,ECwIjB,EA5HsB,SAAChB,GACrB,IACEuE,EAWEvE,EAXFuE,MACAC,EAUExE,EAVFwE,KACAC,EASEzE,EATFyE,OACAC,EAQE1E,EARF0E,QACAC,EAOE3E,EAPF2E,QACAzE,EAMEF,EANFE,QACa0E,EAKX5E,EALFC,YACAgD,EAIEjD,EAJFiD,cACA4B,EAGE7E,EAHF6E,YACAC,EAEE9E,EAFF8E,cACAC,EACE/E,EADF+E,YAEIC,EAAO9E,EAAQe,SAAW2D,EAAK,EAC/BK,EAAiB/E,EAAQe,SAAW2D,EAAK,EAG/C,EAAwBxE,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,EAAAA,SAAe,EAAE,GAAI,IAA3C,eAAO8E,EAAP,KAAYC,EAAZ,KAsBMC,EAAe,WACnB9E,GAAQ,EACT,EAcD,OACE,UAAC+E,EAAA,EAAD,WACGZ,EAAOjC,KAAI,SAAC8C,EAAOC,GAAR,OACV,UAACC,EAAA,EAAD,CAEEC,GAAI,CAAE,mCAAoC,CAAEC,OAAQ,IAFtD,WAIE,SAACC,EAAA,EAAD,CAAWC,UAAU,KAAKC,MAAM,MAAhC,SACGP,IAEFf,EAAM/B,KAAI,SAACsD,EAAOC,GAAQ,IAAD,MAEpBhF,EAAoC,WACpCC,EAAsB,UAGtBgE,GAEGL,EAAQY,IAAOZ,EAAQY,GAAIQ,IAAQrB,EAAQa,KAAQQ,KACtDhF,EAAU,cAEH,UAAAkC,EAAc2B,UAAd,eAAmBpB,MAAM+B,MAAQQ,IAE1ChF,EAAU,aAGR4D,EAAQY,IAAOZ,EAAQY,GAAIQ,KAC7B/E,EAAQ,SAIN0D,EAAQa,KAAQQ,IAClB/E,EAAQ,WAGV,IAtEWgF,EAAgBC,EAAeC,EAsEpCC,EAAa3B,EAAKe,KAAL,UAAYf,EAAKe,GAAIQ,UAArB,iBAAY,EAAcK,cAA1B,aAAY,EAAsBnF,SAAW,EAOhE,OALIgE,GAAkBkB,EAAY,IAChCpF,EAAU,cAKV,SAAC4E,EAAA,EAAD,CAAuBF,GAAI,CAAEY,QAAS,EAAGC,UAAW,UAApD,UACE,SAACpF,EAAA,EAAD,CACEH,QAASA,EACTC,MAAOA,EACPK,SAlFK2E,EAkFgBpB,EAlFAqB,EAkFIV,EAlFWW,EAkFPH,EAlFyB,WAAO,IAAD,EAC1E,IAAId,EAAJ,CAGA,GAAID,EAGF,OAFAG,EAAO,CAACc,EAAOC,SACf5F,GAAQ,GAIV,IAAMiG,EAAM,UAAGtD,EAAc+C,UAAjB,aAAG,EAAuBxC,MAAMgD,QAAQN,IACpC,IAAZK,GAEFxB,EAAYiB,EAAQO,GAAS,GAG/BxB,EAAYiB,EAAQC,EAAOC,EAb1B,CAcF,GA8Da,SAKGjB,EAAiBkB,EAAH,UAAkBb,EAAM,GAAxB,YAA8BQ,EAAM,OANvCA,EAUnB,MAlDH,yBACyBR,GAFf,KAsDZ,SAAC,EAAD,CACEjF,KAAMA,EACNyD,QAAO,UAAKW,EAAOS,EAAI,IAAhB,cAAyBX,EAAMW,EAAI,KAC1CjB,SAAUmB,EACVrB,QAxEc,WAClB,cAAiBmB,EAAjB,GAAOK,EAAP,KAAWQ,EAAX,KACAlB,EAAYU,EAAIQ,GAChBX,GACD,EAqEKpB,UAnEgB,WACpB,cAAiBkB,EAAjB,GAAOK,EAAP,KAAWQ,EAAX,KACAjB,EAAcS,EAAIQ,GAClBX,GACD,MAmEF,E,YCvHD,EArBkB,SAAC,GAAD,IAAGb,EAAH,EAAGA,MAAUkC,GAAb,mBAChB,SAACC,EAAA,EAAD,CAAgBd,UAAW1D,EAAAA,EAA3B,UACE,UAACyE,EAAA,EAAD,CAAO,aAAW,mCAAlB,WACE,SAACC,EAAA,EAAD,WACE,UAACpB,EAAA,EAAD,YACE,SAACG,EAAA,EAAD,IACCpB,EAAM/B,KAAI,SAACqE,GAAD,OACT,SAAClB,EAAA,EAAD,CAEEF,GAAI,CAAEqB,YAAa,EAAGC,aAAc,EAAGT,UAAW,UAFpD,SAIGO,GAHIA,EAFE,UAUf,SAAC,GAAD,QAAetC,MAAOA,GAAWkC,QAhBrB,E,4CCuHlB,EAzGiB,SAACzG,GAChB,IACEuE,EAQEvE,EARFuE,MACAE,EAOEzE,EAPFyE,OACAC,EAME1E,EANF0E,QACAC,EAKE3E,EALF2E,QACA1B,EAIEjD,EAJFiD,cACAuB,EAGExE,EAHFwE,KACAwC,EAEEhH,EAFFgH,UACAC,EACEjH,EADFiH,oBAIF,EAA8B7G,EAAAA,UAAe,GAA7C,eAAO8G,EAAP,KAAgBC,EAAhB,KAOA,OACE,4BACE,UAACC,EAAA,EAAD,CAAOC,UAAU,MAAM9D,eAAe,gBAAtC,WACE,sCACA,SAAC+D,EAAA,EAAD,CACEC,SACE,SAACC,EAAA,EAAD,CAAQC,QAASP,EAAStD,SAVf,SAACnD,GACpB0G,EAAW1G,EAAMG,OAAO6G,QACzB,EAQ2DZ,KAAK,aAEzDnD,MAAM,yBAGV,SAAC0D,EAAA,EAAD,CAAOM,QAAS,EAAGL,UAAU,MAAMM,SAAS,OAA5C,SACG1E,EAAcT,KAAI,WAAmBoC,GAAQ,IAAxBpB,EAAuB,EAAvBA,MAAOJ,EAAgB,EAAhBA,MACrBwE,EAAWpE,EAAMhB,KAAI,SAACuD,EAAIR,GAE9B,GAAIA,EAAK,GAAKQ,EAAK,EACjB,OAAO,KAGT,IAAM8B,EAAWrD,EAAKe,GAAIQ,GAAIK,OAAOnF,OAAS,EAC1CD,EAA0B6G,EAAW,UAAY,UAErD,GAAKX,EAOCvC,EAAQY,GAAIQ,KACd/E,EAAQ,SAGN0D,EAAQa,KAAQQ,IAClB/E,EAAQ,gBAVV,GAAI2D,EAAQY,GAAIQ,IAAOrB,EAAQa,KAAQQ,EACrC,OAAO,KAaX,IAAMrC,EAAK,UAAMe,EAAOc,GAAb,YAAoBhB,EAAMwB,IAA1B,OACT8B,EAAQ,WAAOrD,EAAKe,GAAIQ,GAAIK,OAAOnF,QAAW,GADrC,cAELuD,EAAKe,GAAIQ,GAAI+B,KAFR,KAKX,OACE,SAACC,EAAA,EAAD,CAEErE,MAAOA,EACP1C,MAAOA,GAHT,cACc4D,EADd,aACqBW,EADrB,aAC4BQ,GAK/B,IAGD,OAAQ6B,EAASI,OAAM,SAACC,GAAD,OAAa,OAANA,CAAP,IASnB,MARF,UAACb,EAAA,EAAD,CAA8BM,QAAS,EAAvC,WACE,gBAAI1F,MAAO,CAAEsE,UAAW,UAAxB,qBAA6C1B,EAAK,KACjDgD,GACD,SAACG,EAAA,EAAD,CACErE,MAAOwD,EAAU9D,EAAQA,EAAQ4D,EAAUpC,GAC3C5D,MAAM,cALV,mBAAwB4D,GAS3B,MAEFqC,EAAoBhG,OAAS,IAAK,mBACnC,SAACmG,EAAA,EAAD,CAAOM,QAAS,EAAGL,UAAU,MAAMM,SAAS,OAA5C,SACGV,EAAoBzE,KAAI,WAAmB0F,GAAnB,IAAG1E,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,MAAV,OACvB,UAACgE,EAAA,EAAD,CAA+BM,QAAS,EAAxC,WACE,gBAAI1F,MAAO,CAAEsE,UAAW,UAAxB,wBAAgD4B,EAAM,KACrD1E,EAAMhB,KAAI,SAACuD,EAAIR,GAAL,OACT,SAACwC,EAAA,EAAD,CAEErE,MAAK,UAAKe,EAAOc,GAAZ,YAAmBhB,EAAMwB,GAAzB,YAAgCvB,EAAKe,GAAIQ,GAAIK,OAAOnF,OAApD,cAAgEuD,EAAKe,GAAIQ,GAAI+B,KAA7E,KACL9G,MAAM,WAHR,mBACmBuE,EADnB,aAC0BQ,GAFjB,KAOX,SAACgC,EAAA,EAAD,CAAMrE,MAAK,cAASN,GAASpC,MAAM,cATrC,mBAAwBkH,GADD,QAgBhC,EC7HYzD,EAAS,CACpB,SACA,WACA,MACA,SACA,SACA,MACA,OACA,UACA,UACA,SACA,WAGWF,EAAQ,CACnB,QACA,UACA,SACA,SACA,SACA,OACA,UACA,OACA,UACA,OACA,SAGWrE,EAAU,CACrB,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,cACA,gBCDF,GAfyBiI,EAAAA,EAAAA,IAAK,CAC5BC,IAAK,mBACLC,QACGC,KAAKC,MACJC,aAAaC,QAAQ,yBAA2B,SAVL,CAC/C/D,QAASD,EAAOjC,KAAI,kBAAO,CAAP,IACpBmC,QAASF,EAAOjC,KAAI,kBAAM+B,EAAM/B,KAAI,kBAAM,CAAN,GAAhB,IACpBS,cAAe,IASfyF,QAAS,CACP,aACEC,EADa,EAAZA,QACK,SAACC,GACLJ,aAAaK,QAAQ,uBAAwBP,KAAKQ,UAAUF,GAC7D,GACF,KC8IL,EA9JgB,SACdG,EACArE,EACAC,EACA1B,GAGA,IAAMuB,EAAqB,GACrBwC,EAAsB,GACtBgC,EAAmB,GAGzB/F,EAAcgG,SAAQ,WAAYrE,GAAQ,IAAjBpB,EAAgB,EAAhBA,MACvBwD,EAAUpC,GAAM,EAChBoE,EAAOpE,GAAMmE,EAEbvF,EAAMyF,SAAQ,SAAClD,EAAIR,IAEbA,EAAK,GAAKQ,EAAK,GAAKpB,EAAQY,GAAIQ,MAClCiD,EAAOpE,IAAO,GAGZF,EAAQa,KAAQQ,IAClBiB,EAAUpC,IAAO,EACjBoE,EAAOpE,IAAO,IAGfJ,EAAKe,KAAQf,EAAKe,GAAM,KACxBf,EAAKe,GAAIQ,KAAQvB,EAAKe,GAAIQ,GAAM,CAAE+B,KAAM,EAAGoB,WAAY,EAAG9C,OAAQ,KAEnE5B,EAAKe,GAAIQ,GAAIK,OAAO+C,KAAKvE,EAC1B,GACF,IAGD,IAAMwE,EAAiB,CAAC,EAGxBnG,EAAcgG,SAAQ,WAAmBrE,GAAQ,IAAxBpB,EAAuB,EAAvBA,MAAOJ,EAAgB,EAAhBA,MAC9BI,EAAMyF,SAAQ,SAAClD,EAAIR,GAEjB,IAAM8D,EAAU7E,EAAKe,GAAIQ,GAEzB,IAAIpB,EAAQY,GAAIQ,GAIhB,GAAIrB,EAAQa,KAAQQ,EAApB,CAKA,IAAM+B,EAAOkB,EAAOpE,GACW,KAAzBxB,EAAQ4D,EAAUpC,IAAcoE,EAAOpE,GACzC,EAkBJ,GAhB2B,IAAvByE,EAAQH,WACVG,EAAQvB,KAAOwB,KAAKC,MAAMzB,GAChBA,GAASuB,EAAQvB,KAK3BuB,EAAQvB,KAAOwB,KAAKC,OACjBF,EAAQvB,KAAOuB,EAAQH,WAAapB,IAASuB,EAAQH,WAAa,IAJrEG,EAAQvB,KAAO,EAQjBuB,EAAQH,YAAc,IAIlBG,EAAQjD,OAAOnF,OAAS,GAA5B,CAQA,IAJA,IAAMuI,EAAO,CACXH,EAAQjD,OAAOqD,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAIC,UAAxB,GAAoC,KAGnDC,EAAIjF,EAAK,EAAGiF,EAAIR,EAAQjD,OAAOnF,OAAQ4I,GAAK,EACnDL,EAAKL,KAAL,UAAaE,EAAQjD,OAAOxB,IAA5B,OAAkCyE,EAAQjD,OAAOyD,KAGnDL,EAAKP,SAAQ,SAACb,IAEXgB,EAAKhB,KAASgB,EAAKhB,GAAO,CAAE0B,QAAS,GAAI1G,MAAAA,IAE1C,IAAI2G,GAAS,EACbX,EAAKhB,GAAK0B,QAAQb,SAAQ,YAAiB,IAAD,eAAde,EAAc,KAATC,EAAS,KACxCF,EAASA,GAAUC,IAAQzE,GAAM0E,IAAQlE,CAC1C,IACDgE,GAAUX,EAAKhB,GAAK0B,QAAQX,KAAK,CAAC5D,EAAIQ,IACtCqD,EAAKhB,GAAKhF,MAAQkG,KAAKY,IAAI9G,EAAQ4D,EAAUpC,GAAKwE,EAAKhB,GAAKhF,MAC7D,GApBA,CAxBA,MAFCiG,EAAQvB,KAAO,GA+ClB,GACF,IAGD,IAAMb,EAAsC,GAoD5C,OAjDAkD,OAAOX,KAAKJ,GAAMH,SAAQ,SAACb,GACzB,GAEEgB,EAAKhB,GAAK0B,QAAQ7I,OAAS,GAE3BmI,EAAKhB,GAAK0B,QAAQ7I,OAASmI,EAAKhB,GAAKhF,MACrC,CACA,IAAMgH,EAAsB,GAE5BhB,EAAKhB,GAAK0B,QAAQb,SAAQ,YAAe,IAAD,eAAZ1D,EAAY,KAARQ,EAAQ,KACtCqE,EAAU7E,GAAMQ,CACjB,IAED,IAAI8B,GAAW,EACfZ,EAAoBgC,SAAQ,WAAmBoB,GAG7C,IAHqD,IAAxB7G,EAAuB,EAAvBA,MAAOJ,EAAgB,EAAhBA,MAChCkH,GAAiB,EACjBC,GAAiB,EACZV,EAAI,EAAGA,EAAIrG,EAAMvC,OAAQ4I,GAAK,EACjCO,EAAUP,KAAOrG,EAAMqG,KACrBO,EAAUP,IACZS,GAAiB,EACjBC,GAAiB,GAGjBD,GAAiB,GAIvBzC,EAEEA,GAEAyC,GAECC,GAAkBnB,EAAKhB,GAAKhF,OAASA,EAEpCkH,IACFrD,EAAoBoD,GAAIjH,MAAQkG,KAAKY,IAAI9G,EAAOgG,EAAKhB,GAAKhF,OAE7D,KAEAyE,GACCZ,EAAoBkC,KAAK,CACvB3F,MAAO4G,EACPhH,MAAOgG,EAAKhB,GAAKhF,OAEtB,CACF,IAEM,CACLoB,KAAAA,EACAwC,UAAAA,EACAC,oBAAAA,EAEH,ECtBD,EAhJqB,WACnB,OACEuD,EAAAA,EAAAA,IAAeC,GADjB,sBAAS/F,EAAT,EAASA,QAASC,EAAlB,EAAkBA,QAAS1B,EAA3B,EAA2BA,cAAiByH,EAA5C,KAIA,EAAsCtK,EAAAA,SAAe,GAArD,eAAOH,EAAP,KAAoB0K,EAApB,KACA,EAAiDC,EAC/CnG,EAAOxD,OACPyD,EACAC,EACA1B,GAJMuB,EAAR,EAAQA,KAAMwC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,oBAmGzB,OACE,iCACE,8CACA,SAAC,EAAD,CACE9G,SA/Fe,SAACyC,GACpB+H,EAAe/H,EAChB,EA8FK1C,QAASA,EACTD,YAAaA,EACbgD,cAAeA,EACfC,WA3EiB,SAACM,GAEtB,IAAMqH,EAAelG,EAAQnC,KAAI,SAACsI,GAAD,cAA8BA,EAA9B,IAEjCtH,EAAMyF,SAAQ,SAAClD,EAAIR,GACbb,EAAQa,KAAQQ,GAAOpB,EAAQY,GAAIQ,MAEpC8E,EAAatF,KAAQsF,EAAatF,GAAM,IAEzCsF,EAAatF,GAAIQ,IAAM,EAE1B,IAED2E,EAAS,CAAEhG,QAAAA,EAASC,QAASkG,EAAc5H,cAAAA,GAC5C,EA8DKE,YAhGoB,SAACC,GACzB,IAAM2H,EAAmB9H,EAAchD,IAAf,UAEfgD,EAAchD,IADnB,CAAEuD,MAAO,GAAIJ,MAAO,GAExB2H,EAAgB3H,MAAQA,EACxB,IAAM4H,GAAgB,OAAO/H,GAC7B+H,EAAiB/K,GAAe8K,EAChCL,EAAS,CAAEhG,QAAAA,EAASC,QAAAA,EAAS1B,cAAe+H,GAC7C,KA0FG,mBACA,SAAC,EAAD,CACEzG,MAAOA,EACPC,KAAMA,EACNC,OAAQA,EACRC,QAASA,EACTC,QAASA,EACTzE,QAASA,EACTD,YAAaA,EACbgD,cAAeA,EACf4B,YA9DoB,SAACU,EAAYQ,GACrC,IAAMkF,GAAU,OAAOvG,GACjBmG,EAAelG,EAAQnC,KAAI,SAACsI,GAAD,cAA8BA,EAA9B,KAEhCD,EAAatF,KAAQsF,EAAatF,GAAM,IAEzC0F,EAAW1F,GAAMQ,EAEjB,IAAK,IAAI8D,EAAI,EAAGA,EAAItF,EAAMtD,OAAQ4I,GAAK,EACrCgB,EAAatF,GAAIsE,GAAKA,IAAM9D,EAG9B,IAAK,IAAI8D,EAAI,EAAGA,EAAIpF,EAAOxD,OAAQ4I,GAAK,GACrCgB,EAAahB,KAAOgB,EAAahB,GAAK,IACvCgB,EAAahB,GAAG9D,GAAM8D,IAAMtE,EAK9B,IADA,IAAMyF,GAAgB,OAAO/H,GACpB2B,EAAK,EAAGA,EAAK1E,EAAQe,OAAS,EAAG2D,GAAM,EAC9C,IACG3B,EAAc2B,IACf3B,EAAc2B,GAAIpB,MAAM+B,GAAM,QACEnE,IAAhC6B,EAAc2B,GAAIpB,MAAM+B,GACxB,CACA,IAAMwF,EAAmBC,EAAiBpG,IAAlB,kBAEf3B,EAAc2B,IAFC,IAEIpB,OAAM,OAAKP,EAAc2B,GAAIpB,SADrD,CAAEA,MAAO,GAAIJ,MAAO,GAExB2H,EAAgBvH,MAAM+B,GAAMQ,EAC5BiF,EAAiBpG,GAAMmG,CACxB,CAIHL,EAAS,CACPhG,QAASuG,EACTtG,QAASkG,EACT5H,cAAe+H,GAElB,EAwBKlG,cAnGsB,SAACS,EAAYQ,GACvC,IAAMkF,EAAatG,EAAQnC,KAAI,SAACsI,GAAD,cAA8BA,EAA9B,KAE9BG,EAAW1F,KAAQ0F,EAAW1F,GAAM,IAErC0F,EAAW1F,GAAIQ,IAAOkF,EAAW1F,GAAIQ,GAErC2E,EAAS,CAAEhG,QAAAA,EAASC,QAASsG,EAAYhI,cAAAA,GAC1C,EA4FK8B,YA1EoB,SAACH,EAAYW,EAAYQ,GACjD,IAAMgF,EAAmB9H,EAAc2B,IAAf,kBAEf3B,EAAc2B,IAFC,IAEIpB,OAAM,OAAKP,EAAc2B,GAAIpB,SADrD,CAAEA,MAAO,GAAIJ,MAAO,GAExB2H,EAAgBvH,MAAM+B,GAAMQ,EAC5B,IAAMiF,GAAgB,OAAO/H,GAC7B+H,EAAiB/K,GAAe8K,EAChCL,EAAS,CAAEhG,QAAAA,EAASC,QAAAA,EAAS1B,cAAe+H,GAC7C,KAoEG,SAAC,EAAD,CACE/D,oBAAqBA,EACrB1C,MAAOA,EACPC,KAAMA,EACNC,OAAQA,EACRC,QAASA,EACTC,QAASA,EACT1B,cAAeA,EACf+D,UAAWA,MAIlB,C","sources":["components/games/are-you-the-one/controls/Dropdown.tsx","components/games/are-you-the-one/controls/Controls.tsx","components/games/are-you-the-one/table/TBDialog.tsx","components/games/are-you-the-one/table/TableBody.tsx","components/games/are-you-the-one/table/Table.tsx","components/games/are-you-the-one/analysis/Analysis.tsx","constants/ayto.ts","recoil/are-you-the-one-atom.ts","components/games/are-you-the-one/analysis/useHist.ts","components/games/are-you-the-one/AreYouTheOne.tsx"],"sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\n\ninterface DropdownProps {\n  onSelect: (index: number) => void;\n  options: string[];\n  roundNumber: number;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { roundNumber, options, onSelect } = props;\n\n  // hooks/state\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number\n  ) => {\n    onSelect(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        ref={anchorRef}\n        variant=\"contained\"\n        aria-label=\"split button\"\n        color={roundNumber + 2 === options.length ? \"error\" : \"primary\"}\n      >\n        <Button>{options[roundNumber]}</Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select matchup\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\" autoFocusItem>\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === roundNumber}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\nimport Dropdown from \"./Dropdown\";\n\ninterface ControlsProps {\n  onSelect: (index: number) => void;\n  options: string[];\n  roundNumber: number;\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  updateScore: (score: number) => void;\n  onBlackout: (pairs: number[]) => void;\n}\n\n// eslint-disable-next-line no-restricted-globals\nconst getScore = (value: number) => (isNaN(value) ? -1 : value);\n\nconst Controls = (props: ControlsProps) => {\n  const {\n    options,\n    onSelect,\n    roundNumber,\n    roundPairings,\n    onBlackout,\n    updateScore,\n  } = props;\n\n  // hooks/state\n  const [score, setScore] = React.useState(\n    getScore(roundPairings[roundNumber]?.score)\n  );\n\n  // handlers\n  const handleSelect = (index: number) => {\n    setScore(getScore(roundPairings[index]?.score));\n    onSelect(index);\n  };\n\n  const handleBlackout = () => onBlackout(roundPairings[roundNumber].pairs);\n\n  const handleTextFieldChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setScore(parseInt(event.target.value, 10) || 0);\n    updateScore(parseInt(event.target.value, 10));\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <Dropdown\n        roundNumber={roundNumber}\n        options={options}\n        onSelect={handleSelect}\n      />\n      {roundNumber < options.length - 2 && (\n        <>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleBlackout}>\n            Blackout\n          </Button>\n          <TextField\n            id=\"score-input\"\n            label=\"Score\"\n            variant=\"outlined\"\n            type=\"number\"\n            value={score}\n            onChange={handleTextFieldChange}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\n\nexport interface TBDialogProps {\n  open: boolean;\n  content: string;\n  onMatch: () => void;\n  onNoMatch: () => void;\n  onCancel: () => void;\n}\n\nconst TBDialog = ({\n  open,\n  content,\n  onMatch,\n  onNoMatch,\n  onCancel,\n}: TBDialogProps) => (\n  <Dialog onClose={onCancel} open={open}>\n    <DialogTitle>TB Result</DialogTitle>\n    <DialogContent>Are {content} a perfect match?</DialogContent>\n    <DialogActions>\n      <Button onClick={onMatch}>Match</Button>\n      <Button onClick={onNoMatch} color=\"error\">\n        No Match\n      </Button>\n      <Button onClick={onCancel} color=\"warning\">\n        Cancel\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default TBDialog;\n","import React from \"react\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\nimport { ColorOptions } from \"../types\";\nimport TBDialog from \"./TBDialog\";\nimport { AYTOHist } from \"../analysis/useHist\";\n\nexport interface AYTOTableProps {\n  gents: string[];\n  hist: AYTOHist[][];\n  ladies: string[];\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  options: string[];\n  roundNumber: number;\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  updateMatch: (li: number, gi: number) => void;\n  updateNoMatch: (li: number, gi: number) => void;\n  updatePairs: (ri: number, li: number, gi: number) => void;\n}\n\nconst AYTOTableBody = (props: AYTOTableProps) => {\n  const {\n    gents,\n    hist,\n    ladies,\n    matches,\n    noMatch,\n    options,\n    roundNumber: ri,\n    roundPairings,\n    updateMatch,\n    updateNoMatch,\n    updatePairs,\n  } = props;\n  const isTB = options.length === ri + 2;\n  const isConsolidated = options.length === ri + 1;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [tbi, setTBI] = React.useState([-1, -1]);\n\n  // Handlers\n  const handleClick = (roundi: number, ladyi: number, genti: number) => () => {\n    if (isConsolidated) {\n      return;\n    }\n    if (isTB) {\n      setTBI([ladyi, genti]);\n      setOpen(true);\n      return;\n    }\n    // Regular Round, verify gent isn't already taken\n    const tempLi = roundPairings[roundi]?.pairs.indexOf(genti);\n    if (tempLi !== -1) {\n      // deselect gent from old lady\n      updatePairs(roundi, tempLi, -1);\n    }\n    // assign to new lady\n    updatePairs(roundi, ladyi, genti);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleMatch = () => {\n    const [li, gi] = tbi;\n    updateMatch(li, gi);\n    handleCancel();\n  };\n\n  const handleNoMatch = () => {\n    const [li, gi] = tbi;\n    updateNoMatch(li, gi);\n    handleCancel();\n  };\n\n  return (\n    <TableBody>\n      {ladies.map((lName, li) => (\n        <TableRow\n          key={`ayto-table-row-${lName}`}\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n        >\n          <TableCell component=\"th\" scope=\"row\">\n            {lName}\n          </TableCell>\n          {gents.map((gName, gi) => {\n            // variables\n            let variant: \"outlined\" | \"contained\" = \"outlined\";\n            let color: ColorOptions = \"primary\";\n\n            // logic\n            if (isTB) {\n              // if has data about match or no match\n              if ((noMatch[li] && noMatch[li][gi]) || matches[li] === gi) {\n                variant = \"contained\";\n              }\n            } else if (roundPairings[ri]?.pairs[li] === gi) {\n              // if paired this round\n              variant = \"contained\";\n            }\n\n            if (noMatch[li] && noMatch[li][gi]) {\n              color = \"error\";\n            }\n\n            // if match\n            if (matches[li] === gi) {\n              color = \"success\";\n            }\n\n            const histValue = (hist[li] && hist[li][gi]?.rounds?.length) || 0;\n            // if consolidated\n            if (isConsolidated && histValue > 0) {\n              variant = \"contained\";\n            }\n\n            // render\n            return (\n              <TableCell key={gName} sx={{ padding: 0, textAlign: \"center\" }}>\n                <Button\n                  variant={variant}\n                  color={color}\n                  onClick={handleClick(ri, li, gi)}\n                >\n                  {isConsolidated ? histValue : `${lName[0]}-${gName[0]}`}\n                </Button>\n              </TableCell>\n            );\n          })}\n        </TableRow>\n      ))}\n      <TBDialog\n        open={open}\n        content={`${ladies[tbi[0]]} & ${gents[tbi[1]]}`}\n        onCancel={handleCancel}\n        onMatch={handleMatch}\n        onNoMatch={handleNoMatch}\n      />\n    </TableBody>\n  );\n};\n\nexport default AYTOTableBody;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport AYTOTableBody, { AYTOTableProps } from \"./TableBody\";\n\nconst AYTOTable = ({ gents, ...other }: AYTOTableProps) => (\n  <TableContainer component={Paper}>\n    <Table aria-label=\"are you the one data entry table\">\n      <TableHead>\n        <TableRow>\n          <TableCell />\n          {gents.map((name) => (\n            <TableCell\n              key={name}\n              sx={{ paddingLeft: 0, paddingRight: 0, textAlign: \"center\" }}\n            >\n              {name}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <AYTOTableBody gents={gents} {...other} />\n    </Table>\n  </TableContainer>\n);\n\nexport default AYTOTable;\n","import React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Chip from \"@mui/material/Chip\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\nimport { ChipColorOptions } from \"../types\";\nimport { AYTOHist } from \"./useHist\";\n\nexport interface AnalysisProps {\n  calculatedEquations: RoundPairing[];\n  gents: string[];\n  hist: AYTOHist[][];\n  ladies: string[];\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  tempScore: number[];\n}\n\nconst Analysis = (props: AnalysisProps) => {\n  const {\n    gents,\n    ladies,\n    matches,\n    noMatch,\n    roundPairings,\n    hist,\n    tempScore,\n    calculatedEquations,\n  } = props;\n\n  // state\n  const [showAll, setShowAll] = React.useState(false);\n\n  // handlers\n  const handleSwitch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setShowAll(event.target.checked);\n  };\n\n  return (\n    <div>\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        <h1>Analysis</h1>\n        <FormControlLabel\n          control={\n            <Switch checked={showAll} onChange={handleSwitch} name=\"show-all\" />\n          }\n          label=\"Show All Couples\"\n        />\n      </Stack>\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {roundPairings.map(({ pairs, score }, ri) => {\n          const equation = pairs.map((gi, li) => {\n            // if cleared pairing\n            if (li < 0 || gi < 0) {\n              return null;\n            }\n\n            const isRepeat = hist[li][gi].rounds.length > 1;\n            let color: ChipColorOptions = isRepeat ? \"primary\" : \"default\";\n\n            if (!showAll) {\n              // hide matches and noMatches\n              if (noMatch[li][gi] || matches[li] === gi) {\n                return null;\n              }\n            } else {\n              // no match chip\n              if (noMatch[li][gi]) {\n                color = \"error\";\n              }\n              // match chip\n              if (matches[li] === gi) {\n                color = \"success\";\n              }\n            }\n\n            const label = `${ladies[li]}-${gents[gi]}${\n              isRepeat ? ` ${hist[li][gi].rounds.length}` : \"\"\n            } - ${hist[li][gi].odds}%`;\n\n            // create equation chips\n            return (\n              <Chip\n                key={`eq-r${ri}-l${li}-g${gi}`}\n                label={label}\n                color={color}\n              />\n            );\n          });\n\n          // return each equation stack\n          return !equation.every((e) => e === null) ? (\n            <Stack key={`equation-${ri}`} spacing={1}>\n              <h2 style={{ textAlign: \"center\" }}>Matchup {ri + 1}</h2>\n              {equation}\n              <Chip\n                label={showAll ? score : score - tempScore[ri]}\n                color=\"warning\"\n              />\n            </Stack>\n          ) : null;\n        })}\n      </Stack>\n      {calculatedEquations.length > 0 && <hr />}\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {calculatedEquations.map(({ pairs, score }, cei) => (\n          <Stack key={`equation-${cei}`} spacing={1}>\n            <h2 style={{ textAlign: \"center\" }}>Calculated {cei + 1}</h2>\n            {pairs.map((gi, li) => (\n              <Chip\n                key={`eq-calc-l${li}-g${gi}`}\n                label={`${ladies[li]}-${gents[gi]} ${hist[li][gi].rounds.length} - ${hist[li][gi].odds}%`}\n                color=\"primary\"\n              />\n            ))}\n            <Chip label={`max ${score}`} color=\"warning\" />\n          </Stack>\n        ))}\n      </Stack>\n    </div>\n  );\n};\n\nexport default Analysis;\n","// are-you-the-one\nexport const ladies = [\n  \"Alicia\",\n  \"Carolina\",\n  \"Cas\",\n  \"Gianna\",\n  \"Hannah\",\n  \"Kam\",\n  \"Kari\",\n  \"Kathryn\",\n  \"Shannon\",\n  \"Taylor\",\n  \"Tyranny\",\n];\n\nexport const gents = [\n  \"Andre\",\n  \"Derrick\",\n  \"Edward\",\n  \"Hayden\",\n  \"Jaylan\",\n  \"Joey\",\n  \"Michael\",\n  \"Mike\",\n  \"Osvaldo\",\n  \"Ozzy\",\n  \"Tyler\",\n];\n\nexport const options = [\n  \"Matchup 1\",\n  \"Matchup 2\",\n  \"Matchup 3\",\n  \"Matchup 4\",\n  \"Matchup 5\",\n  \"Matchup 6\",\n  \"Matchup 7\",\n  \"Matchup 8\",\n  \"Matchup 9\",\n  \"Matchup 10\",\n  \"Truth Booth\",\n  \"Consolidated\",\n];\n","import { atom } from \"recoil\";\nimport { ladies, gents } from \"../constants/ayto\";\n\nexport interface RoundPairing {\n  /** [lady-i: gent-i] */\n  pairs: number[];\n  /** score of the round */\n  score: number;\n}\n\nexport interface AYTOState {\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n}\n\nexport const newAreYouTheOne = (): AYTOState => ({\n  matches: ladies.map(() => -1),\n  noMatch: ladies.map(() => gents.map(() => false)),\n  roundPairings: [],\n});\n\nconst areYouTheOneAtom = atom({\n  key: \"areYouTheOneAtom\",\n  default:\n    (JSON.parse(\n      localStorage.getItem(\"are-you-the-one-atom\") || \"null\"\n    ) as AYTOState) || newAreYouTheOne(),\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"are-you-the-one-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\nexport default areYouTheOneAtom;\n","import { RoundPairing } from \"../../../../recoil/are-you-the-one-atom\";\n\nexport interface AYTOHist {\n  odds: number;\n  oddsWeight: number;\n  rounds: number[];\n}\n\nexport interface AYTODictObj {\n  couples: [number, number][];\n  score: number;\n}\n\nexport interface AYTODict {\n  [key: string]: AYTODictObj;\n}\n\n/** [lady-i: (gent-i | -1), -1, -1, ...] */\n/** [lady-i: [gent-i: bool]] */\n/** [round-i: RoundPairing] */\nconst useHist = (\n  len: number,\n  matches: number[],\n  noMatch: boolean[][],\n  roundPairings: RoundPairing[]\n) => {\n  // state\n  const hist: AYTOHist[][] = [];\n  const tempScore: number[] = [];\n  const totals: number[] = [];\n\n  // create histogram\n  roundPairings.forEach(({ pairs }, ri) => {\n    tempScore[ri] = 0;\n    totals[ri] = len;\n\n    pairs.forEach((gi, li) => {\n      // noMatch increases odds of the rest\n      if (li < 0 || gi < 0 || noMatch[li][gi]) {\n        totals[ri] -= 1;\n      }\n      // remove matches\n      if (matches[li] === gi) {\n        tempScore[ri] += 1;\n        totals[ri] -= 1;\n      }\n      // verify data obj\n      !hist[li] && (hist[li] = []);\n      !hist[li][gi] && (hist[li][gi] = { odds: 0, oddsWeight: 0, rounds: [] });\n      // histogram\n      hist[li][gi].rounds.push(ri);\n    });\n  });\n\n  // temp state\n  const dict: AYTODict = {};\n\n  // with histogram made, time to get some stats\n  roundPairings.forEach(({ pairs, score }, ri) => {\n    pairs.forEach((gi, li) => {\n      // ----------     odds     ---------- //\n      const histObj = hist[li][gi];\n      // 0% odds for no match\n      if (noMatch[li][gi]) {\n        return;\n      }\n      // 100% odds for match\n      if (matches[li] === gi) {\n        histObj.odds = 100;\n        return;\n      }\n      // calculate odds for the round\n      const odds = totals[ri]\n        ? ((score - tempScore[ri]) * 100) / totals[ri]\n        : 0;\n      // assign first odds\n      if (histObj.oddsWeight === 0) {\n        histObj.odds = Math.floor(odds);\n      } else if (!odds || !histObj.odds) {\n        // if odds for either are 0\n        histObj.odds = 0;\n      } else {\n        // rolling average\n        histObj.odds = Math.floor(\n          (histObj.odds * histObj.oddsWeight + odds) / (histObj.oddsWeight + 1)\n        );\n      }\n      // update odds weight\n      histObj.oddsWeight += 1;\n\n      // ----------     equations     ---------- //\n      // only care about repeats\n      if (histObj.rounds.length < 2) {\n        return;\n      }\n      // create key from round combination (length)\n      const keys = [\n        histObj.rounds.reduce((acc, val) => acc + val.toString(), \"\"),\n      ];\n      // add every pair of 2 rounds as keys\n      for (let i = ri + 1; i < histObj.rounds.length; i += 1) {\n        keys.push(`${histObj.rounds[ri]}${histObj.rounds[i]}`);\n      }\n      // NOTE: length (l) and 2 are covered, anything in-between is not directly considered (still covered in 2s)\n      keys.forEach((key) => {\n        // put that in the dictionary\n        !dict[key] && (dict[key] = { couples: [], score });\n        // calculate equations\n        let canAdd = true;\n        dict[key].couples.forEach(([tli, tgi]) => {\n          canAdd = canAdd && tli !== li && tgi !== gi;\n        });\n        canAdd && dict[key].couples.push([li, gi]);\n        dict[key].score = Math.min(score - tempScore[ri], dict[key].score);\n      });\n    });\n  });\n\n  // more state\n  const calculatedEquations: RoundPairing[] = [];\n\n  // convert qualifying couples to more equations\n  Object.keys(dict).forEach((key) => {\n    if (\n      // only care about repeat couples\n      dict[key].couples.length > 1 &&\n      // where there are more couples than score available\n      dict[key].couples.length > dict[key].score\n    ) {\n      const tempPairs: number[] = [];\n      // convert to RP\n      dict[key].couples.forEach(([li, gi]) => {\n        tempPairs[li] = gi;\n      });\n      // validate new equation doesn't already exist\n      let isRepeat = false;\n      calculatedEquations.forEach(({ pairs, score }, ci) => {\n        let hasExactRepeat = true;\n        let hasRoughRepeat = true;\n        for (let i = 0; i < pairs.length; i += 1) {\n          if (tempPairs[i] !== pairs[i]) {\n            if (tempPairs[i]) {\n              hasExactRepeat = false;\n              hasRoughRepeat = false;\n            } else {\n              // new equation has fewer couples, may still be a match but is missing some keys\n              hasExactRepeat = false;\n            }\n          }\n        }\n        isRepeat =\n          // compare against itself\n          isRepeat ||\n          // exclude if exact repeat\n          hasExactRepeat ||\n          // exclude if rough repeat with higher or equal score\n          (hasRoughRepeat && dict[key].score >= score);\n        // if exact repeat, pick the lower of the 2 scores\n        if (hasExactRepeat) {\n          calculatedEquations[ci].score = Math.min(score, dict[key].score);\n        }\n      });\n      // Add RP to equations\n      !isRepeat &&\n        calculatedEquations.push({\n          pairs: tempPairs,\n          score: dict[key].score,\n        });\n    }\n  });\n\n  return {\n    hist,\n    tempScore,\n    calculatedEquations,\n  };\n};\n\nexport default useHist;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport Controls from \"./controls/Controls\";\nimport Table from \"./table/Table\";\nimport Analysis from \"./analysis/Analysis\";\nimport { ladies, gents, options } from \"../../../constants/ayto\";\nimport aYTOAtom from \"../../../recoil/are-you-the-one-atom\";\nimport useHist from \"./analysis/useHist\";\n\n/** TODO: replace Dropdown with MUI Dropdown when available */\nconst AreYouTheOne = () => {\n  const [{ matches, noMatch, roundPairings }, setState] =\n    useRecoilState(aYTOAtom);\n\n  // state\n  const [roundNumber, setRoundNumber] = React.useState(0);\n  const { hist, tempScore, calculatedEquations } = useHist(\n    ladies.length,\n    matches,\n    noMatch,\n    roundPairings\n  );\n\n  // handlers\n  const handleSelect = (selected: number) => {\n    setRoundNumber(selected);\n  };\n\n  const handleUpdateScore = (score: number) => {\n    const newRoundPairing = !roundPairings[roundNumber]\n      ? { pairs: [], score: 0 }\n      : { ...roundPairings[roundNumber] };\n    newRoundPairing.score = score;\n    const newRoundPairings = [...roundPairings];\n    newRoundPairings[roundNumber] = newRoundPairing;\n    setState({ matches, noMatch, roundPairings: newRoundPairings });\n  };\n\n  const handleUpdateNoMatch = (li: number, gi: number) => {\n    const newMatches = noMatch.map((gentArray: boolean[]) => [...gentArray]);\n    // if array for lady doesn't exist yet, create skeleton one\n    !newMatches[li] && (newMatches[li] = []);\n    // assign no match\n    newMatches[li][gi] = !newMatches[li][gi];\n    // update state\n    setState({ matches, noMatch: newMatches, roundPairings });\n  };\n\n  const handleBlackout = (pairs: number[]) => {\n    // create immutable copy for storage\n    const newNoMatches = noMatch.map((gentArray: boolean[]) => [...gentArray]);\n    // no match for all pairs\n    pairs.forEach((gi, li) => {\n      if (matches[li] !== gi && !noMatch[li][gi]) {\n        // if array for lady doesn't exist yet, create skeleton one\n        !newNoMatches[li] && (newNoMatches[li] = []);\n        // assign no match\n        newNoMatches[li][gi] = true;\n      }\n    });\n    // update state\n    setState({ matches, noMatch: newNoMatches, roundPairings });\n  };\n\n  const handleUpdatePairs = (ri: number, li: number, gi: number) => {\n    const newRoundPairing = !roundPairings[ri]\n      ? { pairs: [], score: 0 }\n      : { ...roundPairings[ri], pairs: [...roundPairings[ri].pairs] };\n    newRoundPairing.pairs[li] = gi;\n    const newRoundPairings = [...roundPairings];\n    newRoundPairings[roundNumber] = newRoundPairing;\n    setState({ matches, noMatch, roundPairings: newRoundPairings });\n  };\n\n  const handleUpdateMatch = (li: number, gi: number) => {\n    const newMatches = [...matches];\n    const newNoMatches = noMatch.map((gentArray: boolean[]) => [...gentArray]);\n    // if array for lady doesn't exist yet, create skeleton one\n    !newNoMatches[li] && (newNoMatches[li] = []);\n    // assign new match\n    newMatches[li] = gi;\n    // make all gent options no matches\n    for (let i = 0; i < gents.length; i += 1) {\n      newNoMatches[li][i] = i !== gi;\n    }\n    // make all ladies options no matches\n    for (let i = 0; i < ladies.length; i += 1) {\n      !newNoMatches[i] && (newNoMatches[i] = []);\n      newNoMatches[i][gi] = i !== li;\n    }\n\n    // update round pairings\n    const newRoundPairings = [...roundPairings];\n    for (let ri = 0; ri < options.length - 2; ri += 1) {\n      if (\n        !roundPairings[ri] ||\n        roundPairings[ri].pairs[li] < 0 ||\n        roundPairings[ri].pairs[li] === undefined\n      ) {\n        const newRoundPairing = !newRoundPairings[ri]\n          ? { pairs: [], score: 0 }\n          : { ...roundPairings[ri], pairs: [...roundPairings[ri].pairs] };\n        newRoundPairing.pairs[li] = gi;\n        newRoundPairings[ri] = newRoundPairing;\n      }\n    }\n\n    // update state\n    setState({\n      matches: newMatches,\n      noMatch: newNoMatches,\n      roundPairings: newRoundPairings,\n    });\n  };\n\n  return (\n    <>\n      <h1>Are You The One?</h1>\n      <Controls\n        onSelect={handleSelect}\n        options={options}\n        roundNumber={roundNumber}\n        roundPairings={roundPairings}\n        onBlackout={handleBlackout}\n        updateScore={handleUpdateScore}\n      />\n      <br />\n      <Table\n        gents={gents}\n        hist={hist}\n        ladies={ladies}\n        matches={matches}\n        noMatch={noMatch}\n        options={options}\n        roundNumber={roundNumber}\n        roundPairings={roundPairings}\n        updateMatch={handleUpdateMatch}\n        updateNoMatch={handleUpdateNoMatch}\n        updatePairs={handleUpdatePairs}\n      />\n      <Analysis\n        calculatedEquations={calculatedEquations}\n        gents={gents}\n        hist={hist}\n        ladies={ladies}\n        matches={matches}\n        noMatch={noMatch}\n        roundPairings={roundPairings}\n        tempScore={tempScore}\n      />\n    </>\n  );\n};\n\nexport default AreYouTheOne;\n"],"names":["props","roundNumber","options","onSelect","React","open","setOpen","anchorRef","handleClose","event","current","contains","target","ButtonGroup","ref","variant","color","length","Button","size","undefined","onClick","prevOpen","ArrowDropDown","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","map","option","index","MenuItem","selected","handleMenuItemClick","getScore","value","isNaN","roundPairings","onBlackout","updateScore","score","setScore","display","justifyContent","pairs","TextField","label","type","onChange","parseInt","content","onMatch","onNoMatch","onCancel","Dialog","onClose","DialogTitle","DialogContent","DialogActions","gents","hist","ladies","matches","noMatch","ri","updateMatch","updateNoMatch","updatePairs","isTB","isConsolidated","tbi","setTBI","handleCancel","TableBody","lName","li","TableRow","sx","border","TableCell","component","scope","gName","gi","roundi","ladyi","genti","histValue","rounds","padding","textAlign","tempLi","indexOf","other","TableContainer","Table","TableHead","name","paddingLeft","paddingRight","tempScore","calculatedEquations","showAll","setShowAll","Stack","direction","FormControlLabel","control","Switch","checked","spacing","flexWrap","equation","isRepeat","odds","Chip","every","e","cei","atom","key","default","JSON","parse","localStorage","getItem","effects","onSet","state","setItem","stringify","len","totals","forEach","oddsWeight","push","dict","histObj","Math","floor","keys","reduce","acc","val","toString","i","couples","canAdd","tli","tgi","min","Object","tempPairs","ci","hasExactRepeat","hasRoughRepeat","useRecoilState","aYTOAtom","setState","setRoundNumber","useHist","newNoMatches","gentArray","newRoundPairing","newRoundPairings","newMatches"],"sourceRoot":""}