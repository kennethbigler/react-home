{"version":3,"sources":["store/modules/dota2.js","store/modules/yahtzee.js","apis/Deck.js","store/index.js","components/Routes.jsx","WithTheme.jsx","WithStore.jsx","store/configureStore.js","registerServiceWorker.js","index.js","store/initialState.js","store/modules/players.js","store/immutableHelpers.js","store/modules/git.js","store/modules/theme.js","store/modules/turn.js"],"names":["__webpack_require__","d","__webpack_exports__","addLineup","removeLineup","updateLineup","resetLineup","reducer","_immutableHelpers__WEBPACK_IMPORTED_MODULE_0__","_initialState__WEBPACK_IMPORTED_MODULE_1__","ADD","REMOVE","UPDATE_LINEUP","RESET_LINEUP","type","lineup","newDota2Lineup","set","order","state","arguments","length","undefined","initialState","dota2","action","insertItem","removeItemInArray","updateArrayInArray","addScore","score","yahtzee","lodash_assign__WEBPACK_IMPORTED_MODULE_0__","lodash_assign__WEBPACK_IMPORTED_MODULE_0___default","n","lodash_map__WEBPACK_IMPORTED_MODULE_1__","lodash_map__WEBPACK_IMPORTED_MODULE_1___default","NEW_DECK","name","weight","suit","getImmutableArray","arr","map","val","assign","deck","setDeck","newDeck","shuffle","shuffledDeck","i","j","Math","floor","random","k","temp","deal","num","console","error","cards","push","pop","rankSort","a","b","suitSort","ta","tb","rootReducer","combineReducers","git","players","theme","turn","ResumeRoutes","lazy","Promise","all","e","then","bind","GameRoutes","Routes","handleNav","loc","_this$props","_this","props","location","history","pathname","resume","react_default","createElement","Object","games","style","padding","paddingTop","react","fallback","CircularProgress","react_router","path","render","this","Component","withRouter","connect","setTheme","createMuiTheme","typography","useNextVariants","palette","primary","secondary","MuiThemeProvider","CssBaseline","react_router_dom","components_Routes","store","createStore","serializedState","localStorage","getItem","savedState","JSON","parse","forEach","item","key","loadState","subscribe","throttle","stringify","setItem","err","saveState","getState","WithStore","es","src_WithTheme","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","src_WithStore","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","newPlayer","_material_ui_core_colors_indigo__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_colors_indigo__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_colors_deepOrange__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_colors_deepOrange__WEBPACK_IMPORTED_MODULE_2___default","id","isBot","money","bet","hands","radiant","number","selection","dire","player","hand","storyID","branchMessage","branchPrefix","casePreference","commitPrefix","indigo","deepOrange","RESET","UPDATE_NAME","UPDATE_BOT","UPDATE_BET","PAY_PLAYER","SPLIT_HAND","DRAW_CARD","SWAP_CARD","NEW_HAND","updateName","updateBot","updateBet","payout","splitHand","hNum","weigh","hand1","hand2","Deck","newHands","splice","drawCard","_Users_yr216vh_GitHub_training_react_home_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","_ref","soft","swapCards","cardsToDiscard","_Deck$deal","_Deck$deal2","_Users_yr216vh_GitHub_training_react_home_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","sort","updatedHand","newHand","_ref2","resetStatus","updateObjectInArray","_action$player","find","updatedPlayer","removeItem","array","newArr","slice","ins","_Users_yr216vh_GitHub_training_react_home_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","idx","reject","_Users_yr216vh_GitHub_training_react_home_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","setKey","setBranchMessage","setBranchPrefix","setCasePreference","setCommitPrefix","SET_KEY","SET_BRANCH_MESSAGE","SET_BRANCH_PREFIX","SET_CASE_PREFERENCE","SET_COMMIT_PREFIX","isSet","displayDarkTheme","displayLightTheme","_material_ui_core_colors_blueGrey__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_colors_blueGrey__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_colors_indigo__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_colors_indigo__WEBPACK_IMPORTED_MODULE_3___default","_initialState__WEBPACK_IMPORTED_MODULE_4__","DARK_THEME","LIGHT_THEME","blueGrey","incrPlayerTurn","incrHandTurn","resetTurn","INCR_PLAYER","INCR_HAND"],"mappings":"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","file":"static/js/main.bc8da825.chunk.js","sourcesContent":["// functions\nimport { insertItem, updateArrayInArray, removeItemInArray } from '../immutableHelpers';\n// initialState\nimport initialState, { newDota2Lineup } from '../initialState';\n\n// --------------------     Actions     -------------------- //\nconst ADD = 'casino/dota2/ADD_LINEUP';\nconst REMOVE = 'casino/dota2/REMOVE_LINEUP';\nconst UPDATE_LINEUP = 'casino/dota2/UPDATE_LINEUP';\nconst RESET_LINEUP = 'casino/dota2/RESET_LINEUP';\n\n// -------------------- Action Creators     -------------------- //\n/**\n * function to add a lineup to the state\n * @return {Object}\n */\nexport function addLineup() {\n  return { type: ADD, lineup: newDota2Lineup() };\n}\n\n/**\n * function to remove a lineup in the state\n * @return {Object}\n */\nexport function removeLineup(set) {\n  return { type: REMOVE, set };\n}\n\n/**\n * function to update a lineup in the state\n * @return {Object}\n */\nexport function updateLineup(order, set) {\n  return { type: UPDATE_LINEUP, order, set };\n}\n\n/**\n * function to reset a lineup in the state\n * @return {Object}\n */\nexport function resetLineup(set) {\n  return { type: RESET_LINEUP, order: newDota2Lineup(), set };\n}\n\n// --------------------     Reducer     -------------------- //\nexport default function reducer(state = initialState.dota2, action) {\n  switch (action.type) {\n    case ADD:\n      return insertItem(state, action.lineup);\n    case REMOVE:\n      return removeItemInArray(state, action.set);\n    case UPDATE_LINEUP:\n    case RESET_LINEUP:\n      return updateArrayInArray(state, action.order, action.set);\n    default:\n      return state;\n  }\n}\n","// functions\nimport { insertItem } from '../immutableHelpers';\n// initialState\nimport initialState from '../initialState';\n\n// --------------------     Actions     -------------------- //\nconst ADD = 'casino/yahtzee/SCORE';\n\n// -------------------- Action Creators     -------------------- //\n/**\n * function to add a score to the state\n * @param {number} score - latest yahtzee score\n * @return {Object}\n */\nexport function addScore(score) {\n  return { type: ADD, score };\n}\n\n// --------------------     Reducer     -------------------- //\nexport default function reducer(state = initialState.yahtzee, action) {\n  switch (action.type) {\n    case ADD:\n      return insertItem(state, { score: action.score });\n    default:\n      return state;\n  }\n}\n","import assign from 'lodash/assign';\nimport map from 'lodash/map';\n\n// used to reset the cards\nconst NEW_DECK = [\n  { name: '2', weight: 2, suit: '♣' },\n  { name: '3', weight: 3, suit: '♣' },\n  { name: '4', weight: 4, suit: '♣' },\n  { name: '5', weight: 5, suit: '♣' },\n  { name: '6', weight: 6, suit: '♣' },\n  { name: '7', weight: 7, suit: '♣' },\n  { name: '8', weight: 8, suit: '♣' },\n  { name: '9', weight: 9, suit: '♣' },\n  { name: '10', weight: 10, suit: '♣' },\n  { name: 'J', weight: 11, suit: '♣' },\n  { name: 'Q', weight: 12, suit: '♣' },\n  { name: 'K', weight: 13, suit: '♣' },\n  { name: 'A', weight: 14, suit: '♣' },\n  { name: '2', weight: 2, suit: '♦' },\n  { name: '3', weight: 3, suit: '♦' },\n  { name: '4', weight: 4, suit: '♦' },\n  { name: '5', weight: 5, suit: '♦' },\n  { name: '6', weight: 6, suit: '♦' },\n  { name: '7', weight: 7, suit: '♦' },\n  { name: '8', weight: 8, suit: '♦' },\n  { name: '9', weight: 9, suit: '♦' },\n  { name: '10', weight: 10, suit: '♦' },\n  { name: 'J', weight: 11, suit: '♦' },\n  { name: 'Q', weight: 12, suit: '♦' },\n  { name: 'K', weight: 13, suit: '♦' },\n  { name: 'A', weight: 14, suit: '♦' },\n  { name: '2', weight: 2, suit: '♥' },\n  { name: '3', weight: 3, suit: '♥' },\n  { name: '4', weight: 4, suit: '♥' },\n  { name: '5', weight: 5, suit: '♥' },\n  { name: '6', weight: 6, suit: '♥' },\n  { name: '7', weight: 7, suit: '♥' },\n  { name: '8', weight: 8, suit: '♥' },\n  { name: '9', weight: 9, suit: '♥' },\n  { name: '10', weight: 10, suit: '♥' },\n  { name: 'J', weight: 11, suit: '♥' },\n  { name: 'Q', weight: 12, suit: '♥' },\n  { name: 'K', weight: 13, suit: '♥' },\n  { name: 'A', weight: 14, suit: '♥' },\n  { name: '2', weight: 2, suit: '♠' },\n  { name: '3', weight: 3, suit: '♠' },\n  { name: '4', weight: 4, suit: '♠' },\n  { name: '5', weight: 5, suit: '♠' },\n  { name: '6', weight: 6, suit: '♠' },\n  { name: '7', weight: 7, suit: '♠' },\n  { name: '8', weight: 8, suit: '♠' },\n  { name: '9', weight: 9, suit: '♠' },\n  { name: '10', weight: 10, suit: '♠' },\n  { name: 'J', weight: 11, suit: '♠' },\n  { name: 'Q', weight: 12, suit: '♠' },\n  { name: 'K', weight: 13, suit: '♠' },\n  { name: 'A', weight: 14, suit: '♠' },\n];\n\n// immutably get a copy an array O(N)\nfunction getImmutableArray(arr) {\n  return map(arr, val => assign({}, val));\n}\n\n// immutably get a copy of new deck O(N)\nfunction getNewDeck() {\n  return getImmutableArray(NEW_DECK);\n}\n\n// deck used\nlet deck = [];\n\n// get immutable copy of deck O(N)\nfunction getDeck() {\n  return getImmutableArray(deck);\n}\n\n// immutably update deck O(N)\nfunction setDeck(newDeck) {\n  deck = getImmutableArray(newDeck);\n}\n\n// randomize order of the cards O(N + M)\nfunction shuffle() {\n  // get a new deck\n  const shuffledDeck = getNewDeck();\n  // number of shuffles\n  const n = 100;\n  // shuffle the cards\n  for (let i = 0; i < n; i += 1) {\n    const j = Math.floor(Math.random() * 52);\n    const k = Math.floor(Math.random() * 52);\n    // swap\n    const temp = shuffledDeck[j];\n    shuffledDeck[j] = shuffledDeck[k];\n    shuffledDeck[k] = temp;\n  }\n  // update deck state\n  setDeck(shuffledDeck);\n}\n\n// return an array of a specified length O(2N)\nfunction deal(num = 0) {\n  // verify we have enough cards\n  if (num > deck.length) {\n    /* eslint-disable no-console */\n    console.error('Not Enough Cards Left');\n    /* eslint-enable no-console */\n    return null;\n  }\n  // create array to return\n  const newDeck = getDeck();\n  const cards = [];\n  // get the cards\n  for (let i = 0; i < num; i += 1) {\n    cards.push(newDeck.pop());\n  }\n  // update deck state\n  setDeck(newDeck);\n  // return the card(s)\n  return cards;\n}\n\n// sort functions by weight\nconst rankSort = (a, b) => a.weight - b.weight;\n\n// sort cards by suit\nconst suitSort = (a, b) => {\n  let ta;\n  let tb;\n  switch (a.suit) {\n    case '♣':\n      ta = 20;\n      break;\n    case '♦':\n      ta = 40;\n      break;\n    case '♥':\n      ta = 60;\n      break;\n    case '♠':\n      ta = 80;\n      break;\n    default:\n      ta = 0;\n  }\n  switch (b.suit) {\n    case '♣':\n      tb = 20;\n      break;\n    case '♦':\n      tb = 40;\n      break;\n    case '♥':\n      tb = 60;\n      break;\n    case '♠':\n      tb = 80;\n      break;\n    default:\n      tb = 0;\n  }\n  return ta + a.weight - (tb + b.weight);\n};\n\nexport default {\n  shuffle,\n  deal,\n  rankSort,\n  suitSort,\n};\n","import { combineReducers } from 'redux';\nimport dota2 from './modules/dota2';\nimport git from './modules/git';\nimport players from './modules/players';\nimport theme from './modules/theme';\nimport turn from './modules/turn';\nimport yahtzee from './modules/yahtzee';\n\nconst rootReducer = combineReducers({\n  dota2, git, players, theme, turn, yahtzee,\n});\n\nexport default rootReducer;\n","import React, { Component, Suspense, lazy } from 'react';\nimport types from 'prop-types';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// Parents: WithTheme\n\n// lazy load sub routers\nconst ResumeRoutes = lazy(() => import('./resume/Routes'));\nconst GameRoutes = lazy(() => import('./games/Routes'));\n\nclass Routes extends Component {\n  static propTypes = {\n    // types = [array, bool, func, number, object, string, symbol].isRequired\n    history: types.shape({\n      push: types.func.isRequired,\n    }).isRequired,\n    location: types.shape({ pathname: types.string.isRequired }).isRequired,\n  };\n\n  handleNav = (loc) => {\n    const { location, history } = this.props;\n    if (loc !== location.pathname) {\n      history.push(loc);\n    }\n  };\n\n  resume = props => <ResumeRoutes handleNav={this.handleNav} {...props} />;\n\n  games = props => <GameRoutes handleNav={this.handleNav} {...props} />;\n\n  render() {\n    return (\n      <main style={{ padding: '1em', paddingTop: '5em' }}>\n        <Suspense fallback={<CircularProgress />}>\n          <Switch>\n            <Route path=\"/games\" render={this.games} />\n            <Route render={this.resume} />\n          </Switch>\n        </Suspense>\n      </main>\n    );\n  }\n}\n\nexport default withRouter(Routes);\n","import React from 'react';\nimport types from 'prop-types';\nimport { connect } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Routes from './components/Routes';\n\n/** App class that wraps higher level components of the application */\nconst WithTheme = (props) => {\n  const { theme } = props;\n  const setTheme = createMuiTheme({\n    typography: {\n      useNextVariants: true,\n    },\n    palette: {\n      type: theme.type,\n      primary: theme.primary,\n      secondary: theme.secondary,\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={setTheme}>\n      <CssBaseline />\n      <HashRouter>\n        <Routes />\n      </HashRouter>\n    </MuiThemeProvider>\n  );\n};\n\nWithTheme.propTypes = {\n  theme: types.shape({\n    type: types.string.isRequired,\n    primary: types.shape({}).isRequired,\n    secondary: types.shape({}).isRequired,\n  }),\n};\n\n// react-redux export\nconst mapStateToProps = state => ({\n  theme: state.theme,\n});\n\nexport default connect(mapStateToProps)(WithTheme);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport throttle from 'lodash/throttle';\nimport { configureStore, saveState } from './store/configureStore';\nimport WithTheme from './WithTheme';\n\n// set state to previous or new state, and add watcher to save\nconst store = configureStore();\nstore.subscribe(throttle(() => saveState(store.getState()), 1000));\n\n/** App class that wraps higher level components of the application */\nconst WithStore = () => (\n  <Provider store={store}>\n    <WithTheme />\n  </Provider>\n);\n\nexport default WithStore;\n","import { createStore } from 'redux';\nimport forEach from 'lodash/forEach';\nimport rootReducer from '.';\nimport initialState from './initialState';\n\n/**\n * funtion to read 'state' value from local storage and return it, or default state\n * @return {Object[]} - last saved application state\n */\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (!serializedState) {\n      return initialState;\n    }\n\n    const savedState = JSON.parse(serializedState);\n    // validate that we have all keys\n    forEach(initialState, (item, key) => {\n      if (!savedState[key]) {\n        savedState[key] = item;\n      }\n    });\n\n    return savedState;\n  } catch (e) {\n    return initialState;\n  }\n};\n\n/**\n * funtion to save 'state' value to local storage\n * @param {Object[]} state - current application state\n */\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    // ignore the error and skip the save\n  }\n};\n\nexport const configureStore = () => createStore(rootReducer, loadState());\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './WithStore';\nimport registerServiceWorker from './registerServiceWorker';\n\n/* eslint-disable react/jsx-filename-extension */\nReactDOM.render(<App />, document.getElementById('root'));\n/* eslint-enable react/jsx-filename-extension */\nregisterServiceWorker();\n","import assign from 'lodash/assign';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\n\nexport const newPlayer = (id, name = 'Bot', isBot = true) => ({\n  id,\n  name,\n  isBot,\n  status: '',\n  money: 100,\n  bet: 5,\n  hands: [],\n});\n\nexport const newDota2Lineup = () => [...[\n  assign({}, { name: 'Ban 1', radiant: assign({}, { number: 1, selection: null }), dire: assign({}, { number: 2, selection: null }) }),\n  assign({}, { name: 'Ban 2', radiant: assign({}, { number: 3, selection: null }), dire: assign({}, { number: 4, selection: null }) }),\n  assign({}, { name: 'Ban 3', radiant: assign({}, { number: 5, selection: null }), dire: assign({}, { number: 6, selection: null }) }),\n  assign({}, { name: 'Pick 1', radiant: assign({}, { number: 7, selection: null }), dire: assign({}, { number: 8, selection: null }) }),\n  assign({}, { name: 'Pick 2', radiant: assign({}, { number: 10, selection: null }), dire: assign({}, { number: 9, selection: null }) }),\n  assign({}, { name: 'Ban 4', radiant: assign({}, { number: 11, selection: null }), dire: assign({}, { number: 12, selection: null }) }),\n  assign({}, { name: 'Ban 5', radiant: assign({}, { number: 13, selection: null }), dire: assign({}, { number: 14, selection: null }) }),\n  assign({}, { name: 'Pick 3', radiant: assign({}, { number: 16, selection: null }), dire: assign({}, { number: 15, selection: null }) }),\n  assign({}, { name: 'Pick 4', radiant: assign({}, { number: 18, selection: null }), dire: assign({}, { number: 17, selection: null }) }),\n  assign({}, { name: 'Ban 6', radiant: assign({}, { number: 20, selection: null }), dire: assign({}, { number: 19, selection: null }) }),\n  assign({}, { name: 'Pick 5', radiant: assign({}, { number: 21, selection: null }), dire: assign({}, { number: 22, selection: null }) }),\n]];\n\nexport default {\n  players: [\n    newPlayer(1, 'Ken', false),\n    newPlayer(2),\n    newPlayer(3),\n    newPlayer(4),\n    newPlayer(5),\n    newPlayer(6),\n    newPlayer(0, 'Dealer', true),\n  ],\n  yahtzee: [],\n  turn: { player: 0, hand: 0 },\n  git: {\n    storyID: '',\n    branchMessage: '',\n    branchPrefix: 'features',\n    casePreference: 'snake_case',\n    commitPrefix: true,\n  },\n  dota2: [newDota2Lineup()],\n  theme: {\n    primary: indigo,\n    secondary: deepOrange,\n    type: 'dark',\n  },\n};\n","// functions\nimport assign from 'lodash/assign';\nimport forEach from 'lodash/forEach';\nimport find from 'lodash/find';\nimport Deck from '../../apis/Deck';\nimport {\n  removeItem,\n  updateArrayInArray,\n  updateObjectInArray,\n  insertItem,\n} from '../immutableHelpers';\n\n// initialState\nimport initialState, { newPlayer } from '../initialState';\n\n// --------------------     Actions     -------------------- //\n\nconst ADD = 'casino/player/ADD';\nconst REMOVE = 'casino/player/REMOVE';\nconst RESET = 'casino/player/RESET';\nconst UPDATE_NAME = 'casino/player/UPDATE_NAME';\nconst UPDATE_BOT = 'casino/player/UPDATE_BOT';\nconst UPDATE_BET = 'casino/player/UPDATE_BET';\nconst PAY_PLAYER = 'casino/player/PAY_PLAYER';\nconst SPLIT_HAND = 'casino/player/SPLIT_HAND';\nconst DRAW_CARD = 'casino/player/DRAW_CARD';\nconst SWAP_CARD = 'casino/player/SWAP_CARD';\nconst NEW_HAND = 'casino/player/NEW_HAND';\n\n// -------------------- Action Creators     -------------------- //\n\n/**\n * function to add a player to the state\n * @param {Object[]} players - to get unique id\n * @param {string} name - name of player is only var\n * @return {Object}\n */\nexport function addPlayer(players, name) {\n  const player = newPlayer(players.length, name);\n  return { type: ADD, player };\n}\n\n/**\n * function to remove player from player array\n * @param {number} id - id of player to remove\n * @return {Object}\n */\nexport function removePlayer(id) {\n  return { type: REMOVE, id };\n}\n\n/**\n * function to update a player's name\n * @param {number} id - id of player\n * @param {string} name - new name of player\n * @return {Object}\n */\nexport function updateName(id, name) {\n  return { type: UPDATE_NAME, player: { id, name } };\n}\n\n/**\n * function to update a player's bot status\n * @param {number} id - id of player\n * @param {boolean} isBot - is the player a bot\n * @return {Object}\n */\nexport function updateBot(id, isBot = true) {\n  return { type: UPDATE_BOT, player: { id, isBot } };\n}\n\n/**\n * function to update a player's bet\n * @param {number} id - id of player\n * @param {number} bet - current bet\n * @return {Object}\n */\nexport function updateBet(id = 0, bet = 5) {\n  return { type: UPDATE_BET, player: { id, bet } };\n}\n\n/**\n * function to pay the winners and take money from the losers\n * @param {number} id - id of player\n * @param {string} status - win or lose\n * @param {number} money - net money gained or lost\n * @return {Object}\n */\nexport function payout(id, status, money) {\n  return { type: PAY_PLAYER, player: { id, status, money } };\n}\n\n/**\n * function to split players cards into 2 hands\n * @param {Object[]} hands - pass in player's hands to be mutated with new card\n * @param {number} id - tells us which player to update\n * @param {number} hNum - optional, if multiple hands\n * @param {function} weigh - optional, get weight of hand for game\n * @return {Object}\n */\nexport function splitHand(hands, id, hNum, weigh = null) {\n  const hand = hands[hNum];\n  // split the hands into 2\n  const hand1 = { cards: [hand.cards[0]] };\n  const hand2 = { cards: [hand.cards[1]] };\n  // add 1 card each\n  hand1.cards.push(Deck.deal(1)[0]);\n  hand2.cards.push(Deck.deal(1)[0]);\n  // update the weights\n  assign(hand1, weigh(hand1.cards));\n  assign(hand2, weigh(hand2.cards));\n  // update global hands\n  const newHands = updateArrayInArray(hands, hand2, hNum);\n  newHands.splice(hNum, 0, hand1);\n  return { type: SPLIT_HAND, player: { id, hands: newHands } };\n}\n\n/**\n * function to have a player draw a card\n * @param {Object[]} hands - pass in player's hands to be mutated with new card\n * @param {number} id - tells us which player to update\n * @param {number} hNum - optional, if multiple hands\n * @param {number} num - optional, number of cards, default 1\n * @param {function} weigh - optional, get weight of hand for game\n * @return {Object}\n */\nexport function drawCard(hands, id, hNum = 0, num = 1, weigh = null) {\n  const cards = [...hands[hNum].cards, ...Deck.deal(num)];\n  const { weight, soft } = weigh ? weigh(cards) : { weight: 0 };\n  const newHands = updateArrayInArray(hands, { cards, weight, soft }, hNum);\n  return { type: DRAW_CARD, player: { id, hands: newHands } };\n}\n\n/**\n * iterate through array, removing each index number from hand\n * then add new cards to the hand\n * @param {Object[]} hands - pass in player's hands to be mutated with new card\n * @param {number} id - tells us which player to update\n * @param {array} cardsToDiscard - array of index numbers\n * @return {Object}\n */\nexport function swapCards(hands, id, cardsToDiscard) {\n  const cards = [...hands[0].cards];\n  forEach(cardsToDiscard, (i) => {\n    [cards[i]] = Deck.deal(1);\n  });\n  cards.sort(Deck.rankSort);\n  const updatedHand = updateArrayInArray(hands, { cards }, 0);\n  return { type: SWAP_CARD, player: { id, hands: updatedHand } };\n}\n\n/**\n * function to have a player draw a card\n * @param {number} id - optional, what player should get a new hand, default 0\n * @param {number} num - optional, number of cards, default 1\n * @param {function} weigh - optional, get weight of hand for game\n * @return {Object}\n */\nexport function newHand(id = 0, num = 1, weigh = null) {\n  const cards = Deck.deal(num).sort(Deck.rankSort);\n  const { weight, soft } = weigh ? weigh(cards) : { weight: 0 };\n  return { type: NEW_HAND, player: { id, hands: [{ cards, weight, soft }] } };\n}\n\n/**\n * function to reset player status\n * @param {number} id - optional, what player should get a new hand, default 0\n * @return {Object}\n */\nexport function resetStatus(id = 0) {\n  return {\n    type: RESET,\n    player: {\n      id,\n      status: '',\n      hands: [],\n      bet: 5,\n    },\n  };\n}\n\n// --------------------     Reducer     -------------------- //\n\nexport default function reducer(state = initialState.players, action) {\n  switch (action.type) {\n    case RESET:\n    case UPDATE_NAME:\n    case UPDATE_BOT:\n    case UPDATE_BET:\n    case SPLIT_HAND:\n    case DRAW_CARD:\n    case SWAP_CARD:\n    case NEW_HAND:\n      return updateObjectInArray(state, action.player, 'id');\n    case PAY_PLAYER: {\n      const { id, status, money } = action.player;\n      const player = find(state, ['id', id]);\n\n      const updatedPlayer = assign({}, player, {\n        money: (player.money += money),\n        status,\n      });\n\n      return updateObjectInArray(state, updatedPlayer, 'id');\n    }\n    case ADD:\n      return insertItem(state, action.player);\n    case REMOVE:\n      return removeItem(state, action.id);\n    default:\n      return state;\n  }\n}\n","import map from 'lodash/map';\nimport reject from 'lodash/reject';\n\n// Immutable helper functions\nexport function insertItem(array, item) {\n  const newArr = array.slice();\n  newArr.push(item);\n  return newArr;\n}\n\nexport function updateObjectInArray(array, ins, key) {\n  return map(\n    array,\n    item => (item[key] !== ins[key] ? item : { ...item, ...ins }),\n  );\n}\n\nexport function updateArrayInArray(array, ins, idx) {\n  return map(array, (player, i) => (i !== idx ? player : ins));\n}\n\nexport function removeItem(array, id) {\n  return reject(array, ['id', id]);\n}\n\nexport function removeItemInArray(array, idx) {\n  return [...array.slice(0, idx), ...array.slice(idx + 1)];\n}\n","// functions\nimport assign from 'lodash/assign';\n\n// initialState\nimport initialState from '../initialState';\n\n// Actions\nconst SET_KEY = 'resume/git/SET_KEY';\nconst SET_BRANCH_MESSAGE = 'resume/git/SET_BRANCH_MESSAGE';\nconst SET_BRANCH_PREFIX = 'resume/git/SET_BRANCH_PREFIX';\nconst SET_CASE_PREFERENCE = 'resume/git/SET_CASE_PREFERENCE';\nconst SET_COMMIT_PREFIX = 'resume/git/SET_COMMIT_PREFIX';\n\n// Action Creators\nexport function setKey(storyID = '') {\n  return { type: SET_KEY, storyID };\n}\nexport function setBranchMessage(branchMessage = '') {\n  return { type: SET_BRANCH_MESSAGE, branchMessage };\n}\nexport function setBranchPrefix(branchPrefix = '') {\n  return { type: SET_BRANCH_PREFIX, branchPrefix };\n}\nexport function setCasePreference(casePreference = '') {\n  return { type: SET_CASE_PREFERENCE, casePreference };\n}\nexport function setCommitPrefix(isSet = true) {\n  return { type: SET_COMMIT_PREFIX, commitPrefix: isSet };\n}\n\n// Reducer\nexport default function reducer(state = initialState.git, action) {\n  switch (action.type) {\n    case SET_KEY:\n      return assign({}, state, { storyID: action.storyID });\n    case SET_BRANCH_PREFIX:\n      return assign({}, state, { branchPrefix: action.branchPrefix });\n    case SET_BRANCH_MESSAGE:\n      return assign({}, state, { branchMessage: action.branchMessage });\n    case SET_CASE_PREFERENCE:\n      return assign({}, state, {\n        casePreference: action.casePreference,\n      });\n    case SET_COMMIT_PREFIX:\n      return assign({}, state, { commitPrefix: action.commitPrefix });\n    default:\n      return state;\n  }\n}\n","// functions\nimport assign from 'lodash/assign';\n// colors\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport indigo from '@material-ui/core/colors/indigo';\n\n// initialState\nimport initialState from '../initialState';\n\n// Actions\nconst DARK_THEME = 'resume/theme/DARK_THEME';\nconst LIGHT_THEME = 'resume/theme/LIGHT_THEME';\n\n// Action Creators\nexport function displayDarkTheme() {\n  return { type: DARK_THEME };\n}\nexport function displayLightTheme() {\n  return { type: LIGHT_THEME };\n}\n\n// Reducer\nexport default function reducer(state = initialState.theme, action) {\n  switch (action.type) {\n    case DARK_THEME:\n      return assign({}, state, { type: 'dark', primary: indigo, secondary: deepOrange });\n    case LIGHT_THEME:\n      return assign({}, state, { type: 'light', primary: blueGrey, secondary: deepOrange });\n    default:\n      return state;\n  }\n}\n","// functions\nimport assign from 'lodash/assign';\n\n// initialState\nimport initialState from '../initialState';\n\n// Actions\nconst INCR_PLAYER = 'casino/turn/INCR';\nconst INCR_HAND = 'casino/turn/INCR_HAND';\nconst RESET = 'casino/turn/RESET';\n\n// Action Creators\nexport function incrPlayerTurn() {\n  return { type: INCR_PLAYER };\n}\nexport function incrHandTurn() {\n  return { type: INCR_HAND };\n}\nexport function resetTurn() {\n  return { type: RESET };\n}\n\n// Reducer\nexport default function reducer(state = initialState.turn, action) {\n  switch (action.type) {\n    case INCR_PLAYER:\n      return assign({}, state, { player: state.player + 1, hand: 0 });\n    case INCR_HAND:\n      return assign({}, state, { hand: state.hand + 1 });\n    case RESET:\n      return assign({}, state, { player: 0, hand: 0 });\n    default:\n      return state;\n  }\n}\n"],"sourceRoot":""}