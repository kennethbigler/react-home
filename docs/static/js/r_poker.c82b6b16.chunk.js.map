{"version":3,"sources":["components/resume/poker/PokerGraph.tsx","components/resume/poker/PokerTable.tsx","components/resume/poker/helpers.ts","constants/poker.ts","components/resume/poker/PennyPokerNight.tsx","components/resume/poker/GigNowPokerNight.tsx","components/resume/poker/PokerNightTabs.tsx","components/resume/poker/index.ts","constants/murder.ts","components/resume/murder-mystery/LabelTableCell.tsx","components/resume/murder-mystery/MurderMysteryPanel.tsx","components/resume/murder-mystery/MurderMystery.tsx","components/resume/murder-mystery/index.ts"],"names":["PokerNight","props","parsedScores","colors","domain","ticks","width","height","data","map","color","key","type","dataKey","stroke","connectNulls","interval","orientation","tickLine","itemSorter","a","value","cellStyles","paddingRight","whiteSpace","rowStyles","borderTop","PokerTable","totals","tableRows","chunk","sortBy","val","Table","TableHead","TableRow","TableCell","colSpan","row","i","TableBody","style","obj","parseData","scores","week","reduce","acc","hasIn","pennyPokerScores","name","Ken","Lauren","Aaron","Winston","Jordan","Landon","Lily","Keishi","Andy","Mike","Tom","Meeks","Sam","Gus","Ashley","Geoff","Ming","Zach","Scott","pennyPokerColors","amber","blue","blueGrey","brown","cyan","deepOrange","deepPurple","green","indigo","lightBlue","lightGreen","lime","orange","pink","purple","red","teal","yellow","grey","Emily","gigNowPokerScores","Sabik","Avi","Seb","Jonathan","Brady","Carlos","Matt","Dhruven","Dharam","Kaustubh","Patrick","gigNowPokerColors","zeroOutPreviousWeek","unshift","thisWeek","lastWeek","forOwn","_value","length","PennyPokerNight","memo","PokerGraph","PokerNightTabs","useState","tab","setTab","AppBar","position","marginBottom","marginTop","Tabs","onChange","event","Tab","label","GigNowPokerNight","Gender","Importance","CASINO","VICTIM","EMPLOYEE","MOTIVE","REGULAR","NEW_VISIT","SINGLE","MARRIED","owner","role","importance","I1","gender","NEUTRAL","reporter","gunNut","MALE","escort","FEMALE","gladiator","coach","bouncer","I2","follow","dancer","director","I3","lawyer","diver","cop","prof","diner","ufo","crusader","librarian","author","poker","assign","description","hint","clue","withStyles","root","maxWidth","containerStyles","display","justifyContent","itemStyles","MurderMysteryPanel","expanded","expandedKey","handleChange","ExpansionPanel","ExpansionPanelSummary","expandIcon","Typography","ExpansionPanelDetails","LabelTableCell","nl2br","MurderMystery","setExpanded","panel","_event","exp","variant","gutterBottom","profiles","profile"],"mappings":"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","file":"static/js/r_poker.c82b6b16.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  ResponsiveContainer, LineChart, Line, XAxis, YAxis, Tooltip, AxisDomain,\n} from 'recharts';\nimport map from 'lodash/map';\nimport { PokerScoreEntry, PokerColorEntry } from '../../../constants/poker';\n\ninterface PokerNightProps {\n  parsedScores: PokerScoreEntry[];\n  colors: PokerColorEntry;\n  domain: [AxisDomain, AxisDomain];\n  ticks?: number[];\n}\n\nconst PokerNight: React.FC<PokerNightProps> = (props: PokerNightProps) => {\n  const {\n    parsedScores, colors, domain, ticks,\n  } = props;\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={650}>\n      <LineChart data={parsedScores}>\n        {map(colors, (color, key) => (\n          <Line\n            type=\"monotone\"\n            dataKey={key}\n            key={key}\n            stroke={color}\n            connectNulls\n          />\n        ))}\n        <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n        <YAxis\n          domain={domain}\n          width={40}\n          orientation=\"right\"\n          tickLine={false}\n          ticks={ticks && ticks}\n        />\n        <Tooltip itemSorter={(a): number => -a.value} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default PokerNight;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport map from 'lodash/map';\nimport chunk from 'lodash/chunk';\nimport sortBy from 'lodash/sortBy';\nimport { PokerScoreEntry } from '../../../constants/poker';\n\ninterface PokerTableProps {\n  totals: PokerScoreEntry;\n}\n\nconst cellStyles: React.CSSProperties = {\n  paddingRight: 5,\n  whiteSpace: 'nowrap',\n};\nconst rowStyles: React.CSSProperties = {\n  borderTop: '2px solid',\n};\n\nconst PokerTable: React.FC<PokerTableProps> = (props: PokerTableProps) => {\n  const { totals } = props;\n  const tableRows = chunk(\n    sortBy(\n      map(totals, (val, key) => ({ key, val })),\n      ['val'],\n    ),\n    4,\n  );\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell colSpan={3}>Totals</TableCell>\n        </TableRow>\n      </TableHead>\n      {map(tableRows, (row, i) => (\n        <TableBody key={i} style={rowStyles}>\n          <TableRow>\n            {map(row, (obj) => (\n              <TableCell key={obj.key} style={cellStyles}>{obj.key}</TableCell>\n            ))}\n          </TableRow>\n          <TableRow>\n            {map(row, (obj) => (\n              <TableCell key={obj.key} style={cellStyles}>{obj.val}</TableCell>\n            ))}\n          </TableRow>\n        </TableBody>\n      ))}\n    </Table>\n  );\n};\n\nexport default PokerTable;\n","import reduce from 'lodash/reduce';\nimport hasIn from 'lodash/hasIn';\nimport map from 'lodash/map';\nimport { PokerScoreEntry } from '../../../constants/poker';\n\n/** Helper function that takes an array and changes scores to be\n * the sums for a player, rather than just the single night\n *\n * @param {Array} scores - array of objects containing a night's results\n * @returns {Object} totals for all of the players\n */\nconst parseData = (scores: PokerScoreEntry[]): { totals: PokerScoreEntry; parsedScores: PokerScoreEntry[] } => {\n  const totals: PokerScoreEntry = {};\n\n  // iterate over all the scores\n  const parsedScores = map(scores, (week) => {\n    // iterate over the players in a week\n    const parsedWeek = reduce(week, (acc: PokerScoreEntry, val, key) => {\n      if (hasIn(totals, key) && key !== 'name') {\n        // update total with value (if total exists)\n        totals[key] += val;\n        acc[key] = totals[key];\n      } else if (key !== 'name') {\n        // add value to totals obj (totals did not exist)\n        totals[key] = val;\n        acc[key] = totals[key];\n      } else {\n        // key == name\n        acc[key] = val;\n      }\n      return acc;\n    }, {});\n    return parsedWeek;\n  });\n\n  return { parsedScores, totals };\n};\n\nexport default parseData;\n","import {\n  amber, blue, blueGrey, brown,\n  cyan, deepOrange, deepPurple, green,\n  grey, indigo, lightBlue, lightGreen,\n  lime, orange, pink, purple, red,\n  teal, yellow,\n} from '@material-ui/core/colors/';\nimport forOwn from 'lodash/forOwn';\n\nexport interface PokerScoreEntry {\n  [name: string]: number;\n}\nexport interface PokerColorEntry {\n  [name: string]: string;\n}\n\nexport const pennyPokerScores: PokerScoreEntry[] = [\n  {\n    name: 1,\n    Ken: 5,\n    Lauren: -83,\n    Aaron: -45,\n    Winston: -17,\n    Jordan: -25,\n    Landon: -27,\n    Lily: 3,\n    Keishi: 209,\n    Andy: -22,\n  }, {\n    name: 2,\n    Ken: -42,\n    Aaron: -1,\n    Jordan: 94,\n    Lily: -131,\n    Andy: -140,\n    Mike: 220,\n  }, {\n    name: 3,\n    Ken: -100,\n    Jordan: -24,\n    Lily: -45,\n    Tom: 39,\n    Meeks: 147,\n  }, {\n    name: 4,\n    Ken: 62,\n    Aaron: -33,\n    Jordan: 35,\n    Lily: 179,\n    Keishi: 15,\n    Mike: 220,\n    Tom: -100,\n    Sam: 17,\n    Gus: -14,\n    Ashley: -14,\n    Geoff: -100,\n    Ming: -100,\n  }, {\n    name: 5,\n    Ken: 218,\n    Lauren: -90,\n    Aaron: 60,\n    Jordan: 82,\n    Lily: -70,\n    Tom: -200,\n  }, {\n    name: 6,\n    Ken: -33,\n    Jordan: 46,\n    Lily: -98,\n    Keishi: -32,\n    Andy: 27,\n    Mike: 90,\n  }, {\n    name: 7,\n    Ken: 187,\n    Aaron: 14,\n    Jordan: -46,\n    Tom: -55,\n    Gus: -100,\n  }, {\n    name: 8,\n    Ken: 127,\n    Aaron: -40,\n    Jordan: 119,\n    Gus: 16,\n    Zach: -122,\n    Scott: -100,\n  }, {\n    name: 9,\n    Ken: 11,\n    Jordan: 17,\n    Andy: 30,\n    Gus: -58,\n  }, {\n    name: 10,\n    Ken: -23,\n    Lauren: 58,\n    Jordan: -20,\n    Landon: -100,\n    Lily: -100,\n    Andy: 240,\n    Tom: 9,\n  }, {\n    name: 11,\n    Ken: 42,\n    Aaron: -55,\n    Jordan: 0,\n    Tom: 38,\n    Gus: -25,\n  }, {\n    name: 12,\n    Ken: 57,\n    Aaron: 34,\n    Tom: 9,\n    Gus: -100,\n  },\n];\n\nexport const pennyPokerColors: PokerColorEntry = {\n  Ken: amber[500],\n  Lauren: blue[500],\n  Aaron: blueGrey[500],\n  Winston: brown[500],\n  Jordan: cyan[500],\n  Landon: deepOrange[500],\n  Lily: deepPurple[500],\n  Keishi: green[500],\n  Andy: indigo[500],\n  Mike: lightBlue[500],\n  Tom: lightGreen[500],\n  Meeks: lime[500],\n  Sam: orange[500],\n  Gus: pink[500],\n  Ashley: purple[500],\n  Geoff: red[500],\n  Ming: teal[500],\n  Zach: yellow[500],\n  Scott: grey[500],\n  Emily: grey[900],\n};\n\nexport const gigNowPokerScores: PokerScoreEntry[] = [\n  {\n    name: 1,\n    Ken: 32.25,\n    Sabik: 35.25,\n    Avi: 15.50,\n    Seb: -23,\n    Jonathan: -20,\n    Mike: -20,\n    Brady: -20,\n  }, {\n    name: 2,\n    Jonathan: -20,\n    Seb: -40,\n    Sabik: -20,\n    Mike: 90,\n    Brady: -20,\n    'Michael A': 70,\n    Carlos: -20,\n    Matt: -20,\n    Dhruven: -20,\n  }, {\n    name: 3,\n    Jonathan: 71,\n    Dharam: 40,\n    Seb: 32,\n    Dhruven: 17,\n    Kaustubh: 0,\n    Brady: 0,\n    Matt: -20,\n    Ken: -40,\n    Patrick: -40,\n    Mike: -60,\n  },\n];\n\nexport const gigNowPokerColors: PokerColorEntry = {\n  Ken: amber[500],\n  Jonathan: blue[500],\n  Seb: blueGrey[500],\n  Sabik: brown[500],\n  Avi: cyan[500],\n  Mike: deepOrange[500],\n  Brady: deepPurple[500],\n  'Michael A': green[500],\n  Carlos: indigo[500],\n  Matt: lightBlue[500],\n  Dhruven: lightGreen[500],\n  Dharam: lime[500],\n  Kaustubh: orange[500],\n  Patrick: pink[500],\n};\n\n/** A function that creates an initial score entry of 0\n * for all participants, the week before they joined.\n */\nfunction zeroOutPreviousWeek(scores: PokerScoreEntry[]): void {\n  scores.unshift({});\n\n  for (let i = 1; i < scores.length; i += 1) {\n    const thisWeek = scores[i];\n    const lastWeek = scores[i - 1];\n\n    forOwn(thisWeek, (_value, key) => {\n      if (!lastWeek[key]) {\n        lastWeek[key] = 0;\n      }\n    });\n  }\n}\n\nzeroOutPreviousWeek(pennyPokerScores);\nzeroOutPreviousWeek(gigNowPokerScores);\n","import React, { memo } from 'react';\nimport PokerGraph from './PokerGraph';\nimport PokerTable from './PokerTable';\nimport parseData from './helpers';\nimport { pennyPokerScores, pennyPokerColors } from '../../../constants/poker';\n\nconst PennyPokerNight: React.FC<{}> = memo(() => {\n  const { parsedScores, totals } = parseData(pennyPokerScores);\n\n  return (\n    <>\n      <PokerGraph\n        parsedScores={parsedScores}\n        colors={pennyPokerColors}\n        domain={[-400, 600]}\n        ticks={[-400, -200, 0, 200, 400, 600]}\n      />\n      <PokerTable totals={totals} />\n    </>\n  );\n});\n\nexport default PennyPokerNight;\n","import React, { memo } from 'react';\nimport PokerGraph from './PokerGraph';\nimport PokerTable from './PokerTable';\nimport parseData from './helpers';\nimport { gigNowPokerScores, gigNowPokerColors } from '../../../constants/poker';\n\nconst PokerNight: React.FC<{}> = memo(() => {\n  const { parsedScores, totals } = parseData(gigNowPokerScores);\n\n  return (\n    <>\n      <PokerGraph\n        parsedScores={parsedScores}\n        colors={gigNowPokerColors}\n        domain={[-100, 100]}\n      />\n      <PokerTable totals={totals} />\n    </>\n  );\n});\n\nexport default PokerNight;\n","import React, { useState, memo } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PennyPokerNight from './PennyPokerNight';\nimport GigNowPokerNight from './GigNowPokerNight';\n\n/* PokerNightTabs  ->  PennyPokerNight   |->  PokerGraph\n *                |->  GigNowPokerNight  |->  PokerTable */\nconst PokerNightTabs: React.FC<{}> = memo(() => {\n  const [tab, setTab] = useState(0);\n\n  const handleChange = (event: any, val: number): void => {\n    setTab(val);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\" style={{ marginBottom: 20, marginTop: 10 }}>\n        <Tabs value={tab} onChange={handleChange}>\n          <Tab label=\"Penny Poker\" />\n          <Tab label=\"GigNow Poker\" />\n        </Tabs>\n      </AppBar>\n      {tab === 0 && <PennyPokerNight />}\n      {tab === 1 && <GigNowPokerNight />}\n    </>\n  );\n});\n\nexport default PokerNightTabs;\n","import PokerNightTabs from './PokerNightTabs';\n\nexport default PokerNightTabs;\n","import assign from 'lodash/assign';\n\n// --------------------     Types     -------------------- //\nenum Gender {\n  MALE = 'M',\n  FEMALE = 'F',\n  NEUTRAL = 'M/F',\n}\nenum Importance {\n  I1 = 'Required',\n  I2 = 'Recommended',\n  I3 = 'Optional',\n}\ninterface MurderRole {\n  role: string;\n  gender: Gender;\n  importance: Importance;\n  description: string;\n  hint: string;\n  clue: string;\n}\n\n// --------------------     Globals     -------------------- //\nexport const CASINO = 'The Cinema Magic Hotel and Casino';\nconst VICTIM = 'Elvis';\nconst EMPLOYEE = `As an employee, you are at ${CASINO} regularly.`;\nconst MOTIVE = `You have motive to murder ${VICTIM}.`;\nconst REGULAR = `You are at ${CASINO} regularly.`;\nconst NEW_VISIT = `You have never been to ${CASINO} before.`;\nconst SINGLE = 'You are not married.';\nconst MARRIED = 'You are married.';\n\n// --------------------     Profiles V1     -------------------- //\nlet owner = {\n  role: 'The Casino Owner',\n  importance: Importance.I1,\n  gender: Gender.NEUTRAL,\n};\nlet reporter = {\n  role: 'The Reporter',\n  importance: Importance.I1,\n  gender: Gender.NEUTRAL,\n};\nlet gunNut = {\n  role: 'The Gun Nut',\n  importance: Importance.I1,\n  gender: Gender.MALE,\n};\nlet escort = {\n  role: 'The Escort',\n  importance: Importance.I1,\n  gender: Gender.FEMALE,\n};\nlet gladiator = {\n  role: 'The Recently Fired Gladiator Actor',\n  importance: Importance.I1,\n  gender: Gender.MALE,\n};\nlet coach = {\n  role: 'The Singing Coach',\n  importance: Importance.I1,\n  gender: Gender.MALE,\n};\nlet bouncer = {\n  role: 'The Bouncer',\n  importance: Importance.I2,\n  gender: Gender.NEUTRAL,\n};\nlet follow = {\n  role: 'The Second Act',\n  importance: Importance.I2,\n  gender: Gender.NEUTRAL,\n};\nlet dancer = {\n  role: 'The Dancer',\n  importance: Importance.I2,\n  gender: Gender.FEMALE,\n};\nlet director = {\n  role: 'The Depressed Director',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\nlet lawyer = {\n  role: 'The Lawyer',\n  importance: Importance.I3,\n  gender: Gender.MALE,\n};\nlet diver = {\n  role: 'The Scuba Diver',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\nlet cop = {\n  role: 'The Retired Cop',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\nlet prof = {\n  role: 'The Professor',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\nlet diner = {\n  role: 'The Owner of Diner',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\nlet ufo = {\n  role: 'The UFO Conspiracy Nut',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\nlet crusader = {\n  role: 'The Caped Crusader',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\nlet librarian = {\n  role: 'The Librarian',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\nlet author = {\n  role: 'The Nearly Famous Author',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\nlet poker = {\n  role: 'The Professional Poker Player',\n  importance: Importance.I3,\n  gender: Gender.NEUTRAL,\n};\n\n// --------------------     Profiles V2     -------------------- //\nowner = assign(owner, {\n  description: `You are the owner of ${CASINO}, and you are running the murder mystery to make sure everything runs smoothly.`,\n  hint:\n    `\"${reporter.role} Clue\" implies a married guest has motive to murder ${VICTIM}.\\n`\n    + 'Most people will assume his relationship is with a women.\\n\\n'\n    + `\"${gunNut.role} Clue\" implies any regular could have the gun.\\n\\n`\n    + `\"${escort.role} Clue\" is meant to imply ${VICTIM} is gay.`,\n  clue:\n    '1. Act as the lead detective if no one steps up. Simply ask: \"What clues do we have and who can that rule out?\"\\n'\n    + `2. Breaking news, \"${gunNut.role}'s\" lost gun from the casino bar last week is the murder weapon!\\n`\n    + `3. Is the character a regular at ${CASINO}?\\n`\n    + '4. Is the character married?',\n});\n\nreporter = assign(reporter, {\n  description:\n    'You are a resident bad boy/girl and have earned quite a reputation for your ability to try any underhanded trick you can think of to get the latest scoop.\\n'\n    + 'Of course, your methods aren’t always legal…but that only matters if you get caught, right?',\n  hint: `${NEW_VISIT}\\n${SINGLE}`,\n  clue: `You have been following ${VICTIM} for a story and found out that ${VICTIM} was in a relationship with someone who was married.`,\n});\n\ngunNut = assign(gunNut, {\n  description:\n    'You own several guns.\\n'\n    + `You and your wife are a die-hard ${VICTIM} fans and you believe this ${VICTIM} impersonator is terrible since you have seen him before.\\n`\n    + 'You have been to several of his other shows and heckle him on and off stage.',\n  hint: `You are NOT the murderer.\\nYou have a gun with you.\\n${REGULAR}\\n${MARRIED}`,\n  clue: 'You lost your gun at the casino bar last week.',\n});\n\nescort = assign(escort, {\n  description:\n    `You attend to a good number of ${CASINO}'s most esteemed guests.\\n`\n    + 'You pride yourself on your class and would never associate with a hussie from the street.',\n  hint: `${REGULAR}\\n${SINGLE}`,\n  clue:\n    `${VICTIM} once paid you to accompany him to a wedding.\\n`\n    + 'You tried to seduce him afterwards but he was not interested.',\n});\n\ngladiator = assign(gladiator, {\n  description:\n    `You and ${VICTIM} used to be best friends.\\n`\n    + `You were previously employed by ${CASINO} to entertain the gamblers.`,\n  hint:\n    `You have a knife / sword.\\n${MOTIVE}\\n`\n    + 'You might have gotten married once while drunk, you can\\'t remember.',\n  clue:\n    `${VICTIM} ratted you out to the owner for drinking on the job.\\n`\n    + `One night in a drunken stupor you told \"${dancer.role}\" that you were going to stab ${VICTIM} in the back, like Brutus stabbed Caesar.`,\n});\n\ncoach = assign(coach, {\n  description:\n    'You are the Murderer!\\n'\n    + 'You do not have to tell people the following secrets, but you CANNOT contradict them:\\n'\n    + `1. You were in a sexual relationship with ${VICTIM}.\\n`\n    + `2. You promised ${VICTIM} you would leave your wife for him but never intended to.\\n`\n    + `3. ${VICTIM} learns you will never leave your wife and threatens to expose your love affair.\\n`\n    + `4. You took \"${gunNut.role}'s\" gun (he forgot it at the casino bar one night) and shoot ${VICTIM}.\\n`\n    + '5. You sneak away into the crowd and join the confusion.',\n  hint:\n    `You are the murderer.\\n${REGULAR}\\n`\n    + `You have a gun.\\n${MOTIVE}\\n${MARRIED}\\n`\n    + 'Other people will have clues that may identify you.',\n  clue:\n    'You must tell others:\\n'\n    + `You are a singing coach who has been coaching ${VICTIM} with his voice.\\n`\n    + `You give him private lessons and are frequently at ${CASINO} to critique and watch him.\\n`\n    + 'You are married to your wife (she is not at the casino tonight).\\n'\n    + 'You can pretend you have no clue to share.',\n});\n\nbouncer = assign(bouncer, {\n  description:\n    'You take care of a good majority of the owner`s dirty work.\\n'\n    + 'Although loyal, you are not very bright but very friendly.\\n'\n    + `\"${prof.role}\" is a regular at ${CASINO} and you are friends with him/her.`,\n  hint: `${EMPLOYEE}\\n${SINGLE}`,\n  clue:\n    `You know \"${diver.role}\" and \"${cop.role}\" are carrying guns because you patted them down as they entered.\\n`\n    + `You were talking to \"${prof.role}\" when you heard the gunshots. He/She is not the murderer.`,\n});\n\nfollow = assign(follow, {\n  description:\n    'Sugar-sweet, full of yourself, and never seen without a purse-full of pills to get through the night.',\n  hint: `${EMPLOYEE}\\n${SINGLE}`,\n  clue: `You wanted to hang out with ${VICTIM} later tonight for late night drinks but he told you he was busy because he \"had to tell someone something.\"`,\n});\n\ndancer = assign(dancer, {\n  description:\n    'You have been a dancer since you were three years old.\\n'\n    + `Your a showgirl for ${CASINO}.\\n`\n    + 'You dream of being an opening act because you long for broadway.\\n'\n    + 'You carry pictures of yourself from plays and pageants (you do not actually need pictures, this is just for backstory).\\n'\n    + 'You are full of yourself, and will always lets anyone know when you enter or leave a room, and sometimes throw in a little dance step for good measure.',\n  hint: `${EMPLOYEE}\\n${SINGLE}`,\n  clue: `\"${gladiator.role}\" was drunk and told you that he was going to murder ${VICTIM} by stabbing him in the back, like Brutus stabbed Caesar.`,\n});\n\ndirector = assign(director, {\n  description:\n    'You are so depressed, and say that way to inspire art.\\n'\n    + `You direct all the shows at ${CASINO} and go so far as to call each one a \"picture,\" as if you were really creating a movie with each one.\\n`\n    + 'You have a habit of dragging down the party with your depressed whining and tend to overreact when people comment.\\n'\n    + '\"It feeds me,\" you say to peoples\\' comments, and walk away in a huff.',\n  hint: `${EMPLOYEE}\\n${MOTIVE}\\n${MARRIED}`,\n  clue: `${VICTIM} constantly ridiculed you and your art.`,\n});\n\nlawyer = assign(lawyer, {\n  description:\n    'You are an up-and-coming lawyer and you are on a trip to Las Vegas.\\n'\n    + 'You are slick, suave, and never go anywhere without a fresh shave, an expensive haircut and a shiny new pair of shoes.\\n'\n    + 'You have the reputation for being one of the finest lawyers in all of the Bay Area.',\n  hint: `You do not frequent ${CASINO}.\\n${MOTIVE}\\n${MARRIED}`,\n  clue:\n    `You hired ${VICTIM} for a corporate gig, and ${VICTIM} showed up drunk.\\n`\n    + 'You looked like a fool in front of the senior partners.\\n'\n    + `You did not know ${VICTIM} was a performer at this casino until you saw his face on posters!`,\n});\n\ndiver = assign(diver, {\n  description:\n    'You are a hitman.\\n'\n    + 'Your cover is a scuba diver.\\n'\n    + `You were NOT hired to murder ${VICTIM} or anyone else at ${CASINO}.\\n`\n    + 'You are simply here to gamble and have a relaxing weekend.',\n  hint: `You have a gun with you.\\nYou have an alibi.\\n${SINGLE}`,\n  clue:\n    `You were talking with \"${owner.role}\" during the shooting, this is your alibi for not shooting ${VICTIM}.\\n`\n    + 'You can reveal you are an assassin in any way you would like, but you should reveal this at some point.',\n});\n\ncop = assign(cop, {\n  description: 'You worked as a cop in New York for 30 years.',\n  hint: `${REGULAR}\\nYou always carry your glock (police issued pistol).\\n${MARRIED}`,\n  clue:\n    'You are retired and have lots of money because of your pension and an injury insurance payout from when you were shot in the arm on duty.\\n'\n    + `You cannot think of any motive you would have to murder ${VICTIM}.`,\n});\n\nprof = assign(prof, {\n  description:\n    'You are a professor at a local college.\\n'\n    + 'You are trying your luck at card counting.',\n  hint: `You are at ${CASINO} quite regularly and have made friends with \"${bouncer.role}.\"\\n${MARRIED}`,\n  clue:\n    `You were talking with \"${bouncer.role}\" when the gun went off.\\n`\n    + `\"${bouncer.role}\" is not the murderer and you have an alibi.`,\n});\n\ndiner = assign(diner, {\n  description:\n    `You have tried to hire ${VICTIM} to play at your 70s diner for over a year now.\\n`\n    + 'You came down to the casino to persuade him to play at your diner.',\n  hint: `${NEW_VISIT}\\n${MARRIED}`,\n  clue: `You came on the same Las Vegas flight as \"${lawyer.role}\" meaning neither of you were at the casino bar a week ago.`,\n});\n\nufo = assign(ufo, {\n  description:\n    'You are convinced Aliens exist.\\n'\n    + `You think aliens are responsible for the murder of ${VICTIM}.`,\n  hint:\n    `You frequent ${CASINO} to warn fellow humans of the impending invasion\\n`\n    + 'You would never get married, with your luck they would turn out to be an alien.',\n  clue: 'It was probably aliens. We cannot rule them out.',\n});\n\ncrusader = assign(crusader, {\n  description:\n    'By day, you are a very socially awkward individual, however you have an alter ego as a caped crusader crime fighter.\\n'\n    + 'You can play this any way you wish (:',\n  hint: `${NEW_VISIT}\\n${MARRIED}`,\n  clue:\n    `You found \"${reporter.role}'s\" methods to be somewhat shady, so you were following him/her during the time of the murder.\\n`\n    + `You know it was not \"${reporter.role}.\"`,\n});\n\nlibrarian = assign(librarian, {\n  description:\n    'You local librarian and historian who has a flare for the eccentric.\\n'\n    + 'You live with your 15 cats, love true crime, and decided to go to Vegas to learn about the history of the Mafia',\n  hint: SINGLE,\n  clue: `You saw ${follow.role} a week ago acting at the Mafia Museum at the time ${gunNut.role}'s gun went missing`,\n});\n\nauthor = assign(author, {\n  description:\n    'You are a nearly famous author. You were 3 away from hitting the top 500 best selling books.\\n'\n    + 'You let everyone know HOW GREAT of an author you are.',\n  hint: `${REGULAR}\\n${MOTIVE}\\n${MARRIED}`,\n  clue: 'Elvis, being well read, gave your book a very terrible review.',\n});\n\npoker = assign(poker, {\n  description:\n    'You play poker for a living.\\n'\n    + 'In fact, you have no greater love then to gamble, and you make bets on EVERYTHING you do.',\n  hint: `${REGULAR}\\n${SINGLE}`,\n  clue: `${cop.role} was questioning you about your illegal gambling when the gunshot went off so you know it was neither of you.`,\n});\n\n// --------------------     Exports     -------------------- //\nexport default [\n  owner,\n  reporter,\n  gunNut,\n  escort,\n  gladiator,\n  coach,\n  bouncer,\n  follow,\n  dancer,\n  director,\n  lawyer,\n  diver,\n  cop,\n  prof,\n  diner,\n  ufo,\n  crusader,\n  librarian,\n  author,\n  poker,\n] as MurderRole[];\n","import TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport default withStyles({\n  root: { maxWidth: 100 },\n})(TableCell);\n","import React, { memo } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport nl2br from 'react-newline-to-break';\nimport { Typography } from '@material-ui/core';\nimport LabelTableCell from './LabelTableCell';\n\ninterface MurderMysteryPanelProps {\n  expanded?: string;\n  expandedKey: string;\n  handleChange: Function;\n  role: string;\n  importance: string;\n  gender: string;\n  description: string;\n  hint: string;\n  clue: string;\n}\n\nconst containerStyles: React.CSSProperties = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '95%',\n};\nconst itemStyles: React.CSSProperties = { display: 'flex' };\n\nconst MurderMysteryPanel: React.FC<MurderMysteryPanelProps> = memo((props: MurderMysteryPanelProps) => {\n  const {\n    expanded, expandedKey, handleChange, role,\n    importance, gender, description, hint, clue,\n  } = props;\n\n  return (\n    <ExpansionPanel expanded={expanded === expandedKey} onChange={handleChange(expandedKey)}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <div style={containerStyles}>\n          <Typography style={itemStyles}>{role}</Typography>\n          <Typography style={itemStyles}>{importance}</Typography>\n        </div>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <LabelTableCell>Gender</LabelTableCell>\n              <TableCell>{gender}</TableCell>\n            </TableRow>\n            <TableRow>\n              <LabelTableCell>Description</LabelTableCell>\n              <TableCell>{nl2br(description)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <LabelTableCell>Hint</LabelTableCell>\n              <TableCell>{nl2br(hint)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <LabelTableCell>Clue</LabelTableCell>\n              <TableCell>{nl2br(clue)}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n});\n\nexport default MurderMysteryPanel;\n","import React, { useState, memo } from 'react';\nimport map from 'lodash/map';\nimport { Typography } from '@material-ui/core';\nimport profiles, { CASINO } from '../../../constants/murder';\nimport MurderMysteryPanel from './MurderMysteryPanel';\n\nconst MurderMystery: React.FC<{}> = memo(() => {\n  const [expanded, setExpanded] = useState('');\n\n  const handleChange = (panel: string) => (_event: React.MouseEvent, exp?: string): void => {\n    setExpanded(exp ? panel : '');\n  };\n\n  return (\n    <>\n      <Typography variant=\"h2\" gutterBottom>{`Murder at ${CASINO}`}</Typography>\n      {map(profiles, (profile, i) => {\n        const {\n          role, importance, gender, description, hint, clue,\n        } = profile;\n\n        return (\n          <MurderMysteryPanel {...{\n            key: i,\n            expanded,\n            role,\n            importance,\n            gender,\n            description,\n            hint,\n            clue,\n            expandedKey: `${i}`,\n            handleChange,\n          }}\n          />\n        );\n      })}\n    </>\n  );\n});\n\nexport default MurderMystery;\n","import MurderMystery from './MurderMystery';\n\nexport default MurderMystery;\n"],"sourceRoot":""}