{"version":3,"sources":["../node_modules/lodash/isArray.js","../node_modules/lodash/toString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_baseToString.js","hooks/useOpenState.ts","components/common/info-popover/InfoPopup.tsx","../node_modules/lodash/maxBy.js","apis/Dice.ts","components/games/yahtzee/score-table/Header.tsx","components/games/yahtzee/score-table/TopScores.tsx","components/games/yahtzee/score-table/TopTable.tsx","components/games/yahtzee/types.ts","components/games/yahtzee/score-table/scoreTableHelper.ts","components/games/yahtzee/score-table/BottomScores.tsx","components/games/yahtzee/score-table/BottomTable.tsx","components/games/yahtzee/score-table/ScoreTable.tsx","components/games/yahtzee/ScoreGraph.tsx","components/games/yahtzee/Header.tsx","components/games/yahtzee/TableHeader.tsx","components/games/yahtzee/Yahtzee.tsx"],"names":["isArray","Array","module","exports","baseToString","require","value","array","iteratee","index","length","result","Symbol","arrayMap","isSymbol","symbolProto","prototype","undefined","symbolToString","toString","call","useOpenState","defaultVal","React","useState","isOpen","setIsOpen","InfoPopup","props","handleOpen","handleClose","buttonText","title","children","color","onClick","variant","onClose","open","maxWidth","fullWidth","baseExtremum","baseGt","baseIteratee","diceRoller","Math","floor","random","roll","Header","memo","TableHead","TableRow","TableCell","style","TopScores","topSum","finalTopSum","colSpan","TopTable","values","showScoreButtons","getScoreButton","top","getButtonInfo","useCallback","d","reduce","count","val","getTopTableButtons","score","showButton","sum","i","generateTopTable","map","name","ADD_DICE","hasXDice","n","hist","hasDice","Object","forEach","isStraight","BottomScores","bottomSum","has3","has2","isFullHouse","console","error","BottomTable","getBottomTableButtons","points","hasYahtzee","entries","acc","key","Number","canYahtzeeBonus","bottom","generateBottomTable","gameScore","hint","parsedPoints","getDiceValue","centerStyle","textAlign","ScoreTable","onTopScore","onBottomScore","wasTop","Button","Table","size","TableBody","ScoreGraph","main","useTheme","palette","secondary","dBScores","scores","useMemo","generateScoreGraph","mostRecent","topScore","maxBy","width","height","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","interval","orientation","tickLine","type","stroke","fillOpacity","fill","Typography","className","wrapperStyles","display","margin","TableHeader","saved","handleUnsave","handleSave","handleDiceRoll","getButtonText","topConstants","bottomConstants","Yahtzee","useSelector","state","yahtzee","topScores","bottomScores","hasScored","dispatch","useDispatch","finish","getYahtzeeVars","newYGame","addScore","newGame","nextRoll","DiceAPI","sort","updateRoll","push","splice","diceClick","rollNum","handleTopScore","updateTop","handleBottomScore","updateBottom"],"mappings":"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","file":"static/js/g_yahtzee.5c0de8bb.chunk.js","sourcesContent":["/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","import React from 'react';\n\ntype OpenStateHook = [\n  boolean,\n  () => void,\n  () => void,\n]\n\nconst useOpenState = (defaultVal = false): OpenStateHook => {\n  const [isOpen, setIsOpen] = React.useState(defaultVal);\n\n  const handleOpen = (): void => { setIsOpen(true); };\n  const handleClose = (): void => { setIsOpen(false); };\n\n  return [isOpen, handleOpen, handleClose];\n};\n\nexport default useOpenState;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport useOpenState from '../../../hooks/useOpenState';\n\ninterface InfoPopupProps {\n  /** popup content */\n  children: React.ReactNode | React.ReactNodeArray;\n  /** title content */\n  title: string | React.ReactElement;\n  /** button content */\n  buttonText?: string | React.ReactElement;\n}\n\nconst InfoPopup = (props: InfoPopupProps): React.ReactElement => {\n  const [isOpen, handleOpen, handleClose] = useOpenState();\n  const { buttonText, title, children } = props;\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={handleOpen as React.MouseEventHandler} variant=\"contained\">\n        {buttonText || title}\n      </Button>\n      <Dialog title=\"info-popup\" onClose={handleClose as React.MouseEventHandler} open={isOpen} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={handleClose as React.MouseEventHandler}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default InfoPopup;\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nmodule.exports = maxBy;\n","import { Dice } from '../store/types';\n\nexport const diceRoller = (): Dice => Math.floor(Math.random() * 6) + 1 as Dice;\n\nexport default {\n  // randomize order of the cards\n  roll(): Dice {\n    return diceRoller();\n  },\n};\n\n// Dice as a react hook, seems kind of like an anti-pattern\nexport function useDice(): () => number {\n  function rollDice(): number {\n    return diceRoller();\n  }\n\n  return rollDice;\n}\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\ninterface HeaderProps {\n  style: React.CSSProperties;\n}\n\nconst Header: React.FC<HeaderProps> = React.memo((props: HeaderProps) => (\n  <TableHead>\n    <TableRow>\n      <TableCell>Minimum Required for Bonus</TableCell>\n      <TableCell>How to Score</TableCell>\n      <TableCell style={props.style}>Game Score</TableCell>\n    </TableRow>\n  </TableHead>\n));\n\nexport default Header;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\ninterface TopScoresProps {\n  finalTopSum: number;\n  topSum: number;\n  style: React.CSSProperties;\n}\n\nconst TopScores: React.FC<TopScoresProps> = React.memo(({ topSum, finalTopSum, style }: TopScoresProps) => (\n  <>\n    <TableRow>\n      <TableCell colSpan={2}>Total == 63</TableCell>\n      <TableCell style={style}>{topSum}</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>Bonus if &gt;= 63</TableCell>\n      <TableCell>Score 35</TableCell>\n      <TableCell style={style}>{topSum >= 63 ? 35 : 0}</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell colSpan={2}>Upper Half Total</TableCell>\n      <TableCell style={style}>{finalTopSum}</TableCell>\n    </TableRow>\n    <TableRow />\n  </>\n));\n\nexport default TopScores;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TopGameScore } from '../types';\nimport { Dice } from '../../../../store/types';\nimport TopScores from './TopScores';\n\ninterface TopTableProps {\n  finalTopSum: number;\n  getScoreButton: (showButton: boolean, points: number, wasTop: boolean, i: number) => React.ReactNode;\n  showScoreButtons: boolean;\n  style: React.CSSProperties;\n  top: TopGameScore[];\n  topSum: number;\n  values: Dice[];\n}\n\nconst TopTable: React.FC<TopTableProps> = (props: TopTableProps) => {\n  const {\n    values, showScoreButtons, getScoreButton, top, style,\n  } = props;\n\n  const getButtonInfo = React.useCallback(\n    (d: number): [number, number] => values.reduce(\n      (count, val) => {\n        if (val === d) {\n          count[0] += 1;\n          count[1] += d;\n        }\n        return count;\n      },\n      [0, 0],\n    ),\n    [values],\n  );\n\n  const getTopTableButtons = React.useCallback(\n    (score: number, showButton: boolean, sum: number, i: number): React.ReactNode | null => {\n      if (score >= 0) {\n        return score;\n      }\n      return showScoreButtons ? getScoreButton(showButton, sum, true, i) : null;\n    },\n    [getScoreButton, showScoreButtons],\n  );\n\n  const generateTopTable = React.useCallback(\n    (): React.ReactNode => top.map(({ name, score }, i) => {\n      const d = i + 1;\n      const [count, sum] = getButtonInfo(i + 1);\n      const showButton = count >= 1;\n\n      return (\n        <TableRow key={name}>\n          <TableCell>{`${name}: ${d},${d},${d} = ${d * 3}`}</TableCell>\n          <TableCell>{`Add Only ${name}`}</TableCell>\n          <TableCell style={style}>{getTopTableButtons(score, showButton, sum, i)}</TableCell>\n        </TableRow>\n      );\n    }),\n    [getButtonInfo, getTopTableButtons, style, top],\n  );\n\n  const { topSum, finalTopSum } = props;\n\n  return (\n    <>\n      {generateTopTable()}\n      <TopScores topSum={topSum} finalTopSum={finalTopSum} style={style} />\n    </>\n  );\n};\n\nexport default TopTable;\n","export const ADD_DICE = 'Sum of Dice';\ntype AddDice = 'Sum of Dice';\n\nexport interface TopGameScore {\n  name: string;\n  score: number;\n}\nexport interface BottomGameScore {\n  name: string;\n  score: number;\n  hint: string;\n  points: number | AddDice;\n}\n\nexport default ADD_DICE;\n","import { TopGameScore } from '../types';\nimport { Dice } from '../../../../store/types';\n\ninterface DiceHistogram {\n  0?: number;\n  1: number;\n  2: number;\n  3: number;\n  4: number;\n  5: number;\n  6: number;\n}\n\nexport const getHistogram = () => (hist: DiceHistogram, val: Dice): DiceHistogram => {\n  if (!hist[val]) {\n    hist[val] = 1;\n  } else {\n    hist[val] += 1;\n  }\n  return hist;\n};\n\nexport const hasXDice = (values: Dice[], n: number): boolean => {\n  const hist = values.reduce(getHistogram(), {} as DiceHistogram);\n  let hasDice = false;\n  Object.values(hist).forEach((value) => {\n    if (value >= n) {\n      hasDice = true;\n    }\n  });\n  return hasDice;\n};\n\nexport const isFullHouse = (values: Dice[]): boolean => {\n  const hist = values.reduce(getHistogram(), {} as DiceHistogram);\n\n  let has3 = false;\n  let has2 = false;\n\n  Object.values(hist).forEach((value) => {\n    if (value >= 3) {\n      has3 = true;\n    } else if (value >= 2) {\n      has2 = true;\n    }\n  });\n\n  return has3 && has2;\n};\n\nexport const isStraight = (values: Dice[], length: number): boolean => {\n  const hist = values.reduce(getHistogram(), {} as DiceHistogram);\n\n  let count = 0;\n  const dice: Dice[] = [1, 2, 3, 4, 5, 6];\n  dice.forEach((i: Dice) => {\n    if (count < length) {\n      const value = hist[i];\n      if (!value) {\n        count = 0;\n      } else {\n        count += 1;\n      }\n    }\n  });\n  return count >= length;\n};\n\nexport const canYahtzeeBonus = (values: Dice[], top: TopGameScore[]): boolean => Object.entries(\n  values.reduce(getHistogram(), {} as DiceHistogram),\n).reduce(\n  (acc: boolean, [key, value]) => {\n    if (value === 5 && top[Number(key) - 1].score >= 0) {\n      return true;\n    }\n    return acc;\n  },\n  false,\n);\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\ninterface BottomScoresProps {\n  bottomSum: number;\n  finalTopSum: number;\n  style: React.CSSProperties;\n}\n\nconst BottomScores: React.FC<BottomScoresProps> = React.memo(({ finalTopSum, bottomSum, style }: BottomScoresProps) => (\n  <>\n    <TableRow>\n      <TableCell colSpan={2}>Lower Half Total</TableCell>\n      <TableCell style={style}>{bottomSum}</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell colSpan={2}>Upper Half Total</TableCell>\n      <TableCell style={style}>{finalTopSum}</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell colSpan={2}>Grand Total</TableCell>\n      <TableCell style={style}>{finalTopSum + bottomSum}</TableCell>\n    </TableRow>\n  </>\n));\n\nexport default BottomScores;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TopGameScore, BottomGameScore, ADD_DICE } from '../types';\nimport { Dice } from '../../../../store/types';\nimport {\n  hasXDice, isFullHouse, isStraight, canYahtzeeBonus,\n} from './scoreTableHelper';\nimport BottomScores from './BottomScores';\n\ninterface BottomTableProps {\n  bottom: BottomGameScore[];\n  bottomSum: number;\n  finalTopSum: number;\n  getScoreButton: (showButton: boolean, points: number, wasTop: boolean, i: number) => React.ReactNode;\n  showScoreButtons: boolean;\n  style: React.CSSProperties;\n  top: TopGameScore[];\n  values: Dice[];\n}\n\nconst getDiceValue = (values: Dice[]): number => values.reduce((sum: number, d) => sum + d, 0);\n\nconst showButton = (i: number, values: Dice[]): boolean => {\n  switch (i) {\n    case 0: // 3 of a kind\n      return hasXDice(values, 3);\n    case 1: // 4 of a kind\n      return hasXDice(values, 4);\n    case 2: // Full House\n      return isFullHouse(values);\n    case 3: // Sm. Straight\n      return isStraight(values, 4);\n    case 4: // Lg. Straight\n      return isStraight(values, 5);\n    case 5: // Yahtzee\n      return hasXDice(values, 5);\n    case 6: // Chance\n      return true;\n    default:\n      // eslint-disable-next-line no-console\n      console.error('Unexpected Value');\n      return false;\n  }\n};\n\nconst BottomTable: React.FC<BottomTableProps> = (props: BottomTableProps) => {\n  const {\n    values, showScoreButtons, getScoreButton, top,\n  } = props;\n  const getBottomTableButtons = React.useCallback((score: number, points: number, hasYahtzee: boolean, i: number): React.ReactNode | null => {\n    if (score >= 0) {\n      return score;\n    }\n    if (showScoreButtons) {\n      // Yahtzee Bonus\n      if (hasYahtzee) {\n        if (canYahtzeeBonus(values, top)) {\n          return getScoreButton(true, points + 100, false, i);\n        }\n      }\n      return getScoreButton(showButton(i, values), points, false, i);\n    }\n    return null;\n  }, [getScoreButton, showScoreButtons, top, values]);\n\n  const { bottom, style } = props;\n  const generateBottomTable = React.useCallback((): React.ReactNode => {\n    const hasYahtzee = bottom[5].score > 0;\n    return bottom.map((gameScore, i) => {\n      const {\n        name, hint, points, score,\n      } = gameScore;\n\n      const parsedPoints = (points === ADD_DICE) ? getDiceValue(values) : points;\n\n      return (\n        <TableRow key={name}>\n          <TableCell>{name}</TableCell>\n          <TableCell>{hint}</TableCell>\n          <TableCell style={style}>{getBottomTableButtons(score, parsedPoints, hasYahtzee, i)}</TableCell>\n        </TableRow>\n      );\n    });\n  }, [bottom, getBottomTableButtons, style, values]);\n\n  const { finalTopSum, bottomSum } = props;\n\n  return (\n    <>\n      {generateBottomTable()}\n      <BottomScores bottomSum={bottomSum} finalTopSum={finalTopSum} style={style} />\n    </>\n  );\n};\n\nexport default BottomTable;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport { TopGameScore, BottomGameScore } from '../types';\nimport { Dice } from '../../../../store/types';\nimport Header from './Header';\nimport TopTable from './TopTable';\nimport BottomTable from './BottomTable';\n\ninterface ScoreTableProps {\n  bottom: BottomGameScore[];\n  bottomSum: number;\n  finalTopSum: number;\n  onTopScore: (points: number, i: number) => void;\n  onBottomScore: (points: number, i: number) => void;\n  showScoreButtons: boolean;\n  top: TopGameScore[];\n  topSum: number;\n  values: Dice[];\n}\n\nconst centerStyle: React.CSSProperties = { textAlign: 'center' };\n\nconst ScoreTable: React.FC<ScoreTableProps> = (props: ScoreTableProps) => {\n  const {\n    bottom, bottomSum, finalTopSum, showScoreButtons,\n    top, topSum, values, onTopScore, onBottomScore,\n  } = props;\n\n  const getScoreButton = React.useCallback(\n    (showButton: boolean, points: number, wasTop: boolean, i: number): React.ReactNode => (\n      showButton ? (\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={wasTop\n            ? (): void => onTopScore(points, i)\n            : (): void => onBottomScore(points, i)}\n        >\n          {`Add ${points} Points`}\n        </Button>\n      ) : (\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={wasTop\n            ? (): void => onTopScore(0, i)\n            : (): void => onBottomScore(0, i)}\n        >\n          0\n        </Button>\n      )\n    ),\n    [onBottomScore, onTopScore],\n  );\n\n  return (\n    <Table size=\"small\">\n      <Header style={centerStyle} />\n      <TableBody>\n        <TopTable\n          finalTopSum={finalTopSum}\n          getScoreButton={getScoreButton}\n          showScoreButtons={showScoreButtons}\n          style={centerStyle}\n          top={top}\n          values={values}\n          topSum={topSum}\n        />\n        <BottomTable\n          finalTopSum={finalTopSum}\n          getScoreButton={getScoreButton}\n          showScoreButtons={showScoreButtons}\n          style={centerStyle}\n          top={top}\n          values={values}\n          bottom={bottom}\n          bottomSum={bottomSum}\n        />\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default ScoreTable;\n","import React from 'react';\nimport maxBy from 'lodash/maxBy';\nimport {\n  ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area,\n} from 'recharts';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport InfoPopup from '../../common/info-popover/InfoPopup';\n\ninterface ScoreGraphProps {\n  scores: number[];\n}\ninterface ScoreGraphEntry {\n  value: number;\n}\n\nconst generateScoreGraph = (scores: number[]): ScoreGraphEntry[] => (\n  scores.map((value) => ({ value }))\n);\n\nconst ScoreGraph: React.FC<ScoreGraphProps> = (props: ScoreGraphProps) => {\n  const { palette: { secondary: { main }}} = useTheme();\n  const { scores: dBScores } = props;\n\n  const scores = React.useMemo(() => generateScoreGraph(dBScores), [dBScores]);\n  const recent = scores[scores.length - 1] || { value: 0 };\n  const mostRecent = recent.value;\n  const top = maxBy(scores, 'value') || { value: 0 };\n  const topScore = top.value;\n\n  return (\n    <InfoPopup title=\"Yahtzee Score History\" buttonText=\"Score History\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <AreaChart data={scores}>\n          <defs>\n            <linearGradient id=\"mainColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"20%\" stopColor={main} stopOpacity={0.8} />\n              <stop offset=\"100%\" stopColor={main} stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" />\n          <YAxis width={40} orientation=\"right\" tickLine={false} />\n          <Tooltip />\n          <Area type=\"monotone\" dataKey=\"value\" stroke={main} fillOpacity={1} fill=\"url(#mainColor)\" />\n        </AreaChart>\n      </ResponsiveContainer>\n      <Typography variant=\"h4\">{`Most Recent: ${mostRecent}`}</Typography>\n      <Typography variant=\"h4\">{`Top Score: ${topScore}`}</Typography>\n    </InfoPopup>\n  );\n};\n\nexport default ScoreGraph;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport ScoreGraph from './ScoreGraph';\n\ninterface HeaderProps {\n  scores: number[];\n}\n\nconst Header: React.FC<HeaderProps> = ({ scores }: HeaderProps) => (\n  <div className=\"flex-container\">\n    <Typography variant=\"h2\">Yahtzee</Typography>\n    <ScoreGraph scores={scores} />\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Dice } from '../../../store/types';\n\ninterface TableHeaderProps {\n  roll: Dice;\n  values: Dice[];\n  saved: Dice[];\n  handleUnsave: (i: number) => void;\n  handleSave: (i: number) => void;\n  handleDiceRoll: React.MouseEventHandler;\n  getButtonText: (roll: Dice) => string;\n}\n\nconst wrapperStyles: React.CSSProperties = { display: 'block', margin: 'auto', width: 320 };\n\nconst TableHeader: React.FC<TableHeaderProps> = (props: TableHeaderProps) => {\n  const {\n    values, saved, roll, handleUnsave,\n    handleSave, handleDiceRoll, getButtonText,\n  } = props;\n\n  return (\n    <div className=\"flex-container\">\n      <Typography variant=\"h4\">{`Roll #${roll}/3`}</Typography>\n      <div style={wrapperStyles}>\n        {saved.map((val, i) => (\n          <Button color=\"secondary\" onClick={(): void => handleUnsave(i)} variant=\"outlined\" key={i}>\n            {val}\n          </Button>\n        ))}\n        {values.map((val, i) => (\n          <Button color=\"primary\" onClick={(): void => handleSave(i)} variant=\"outlined\" key={i}>\n            {val}\n          </Button>\n        ))}\n      </div>\n      <Button color=\"primary\" onClick={handleDiceRoll} variant=\"contained\">\n        {getButtonText(roll)}\n      </Button>\n    </div>\n  );\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport DiceAPI from '../../../apis/Dice';\nimport ScoreTable from './score-table/ScoreTable';\nimport { ADD_DICE, TopGameScore, BottomGameScore } from './types';\nimport Header from './Header';\nimport TableHeader from './TableHeader';\nimport { DBRootState, Dice } from '../../../store/types';\nimport {\n  addScore, diceClick, newGame, nextRoll,\n  updateTop, updateBottom, updateRoll,\n} from '../../../store/modules/yahtzee';\n\nconst topConstants = [\n  { name: 'Aces' },\n  { name: 'Twos' },\n  { name: 'Threes' },\n  { name: 'Fours' },\n  { name: 'Fives' },\n  { name: 'Sixes' },\n];\nconst bottomConstants = [\n  { name: '3 of a kind', hint: ADD_DICE, points: ADD_DICE },\n  { name: '4 of a kind', hint: ADD_DICE, points: ADD_DICE },\n  { name: 'Full House', hint: 'Score 25', points: 25 },\n  { name: 'Sm. Straight (4)', hint: 'Score 30', points: 30 },\n  { name: 'Lg. Straight (5)', hint: 'Score 40', points: 40 },\n  { name: 'Yahtzee', hint: 'Score 50', points: 50 },\n  { name: 'Chance', hint: ADD_DICE, points: ADD_DICE },\n];\n\ninterface YahtzeeVars {\n  topSum: number;\n  bottomSum: number;\n  finalTopSum: number;\n  finish: boolean;\n}\n\nconst getYahtzeeVars = (topScores: number[], bottomScores: number[]): YahtzeeVars => {\n  let count = 0;\n\n  const topSum = topScores.reduce((sum, score) => {\n    if (score >= 0) {\n      count += 1;\n      sum += score;\n    }\n    return sum;\n  }, 0);\n\n  const bottomSum = bottomScores.reduce((sum, score) => {\n    if (score >= 0) {\n      count += 1;\n      sum += score;\n    }\n    return sum;\n  }, 0);\n\n  let finalTopSum = topSum;\n  if (topSum >= 63) {\n    finalTopSum += 35;\n  }\n\n  const finish = count >= 13;\n\n  return {\n    topSum,\n    bottomSum,\n    finalTopSum,\n    finish,\n  };\n};\n\nconst Yahtzee: React.FC = () => {\n  const {\n    topScores, bottomScores, values, saved,\n    roll, showScoreButtons, scores, hasScored,\n  } = useSelector((state: DBRootState) => ({ ...state.yahtzee }));\n  const dispatch = useDispatch();\n\n  const {\n    topSum, bottomSum, finalTopSum, finish,\n  } = React.useMemo(() => getYahtzeeVars(topScores, bottomScores), [topScores, bottomScores]);\n\n  const newYGame = React.useCallback((): void => {\n    dispatch(addScore(finalTopSum + bottomSum));\n    dispatch(newGame());\n  }, [bottomSum, dispatch, finalTopSum]);\n\n  const handleDiceRoll = React.useCallback((): void => {\n    if (finish) {\n      newYGame();\n    }\n    if (roll >= 3) {\n      if (hasScored === true) {\n        dispatch(nextRoll());\n      }\n      return;\n    }\n\n    for (let i = 0; i < values.length; i += 1) {\n      values[i] = DiceAPI.roll() as Dice;\n    }\n    values.sort();\n    saved.sort();\n\n    if (roll === 2) {\n      dispatch(updateRoll(values, saved, roll + 1 as Dice, true));\n    } else {\n      dispatch(updateRoll(values, saved, roll + 1 as Dice));\n    }\n  }, [dispatch, finish, hasScored, newYGame, roll, saved, values]);\n\n  const handleSave = React.useCallback((i: number): void => {\n    if (values[i] === 0) {\n      return;\n    }\n    saved.push(values.splice(i, 1)[0]);\n    saved.sort();\n    dispatch(diceClick(values, saved));\n  }, [dispatch, saved, values]);\n\n  const handleUnsave = React.useCallback((i: number): void => {\n    values.push(saved.splice(i, 1)[0]);\n    values.sort();\n    dispatch(diceClick(values, saved));\n  }, [dispatch, saved, values]);\n\n  const getButtonText = React.useCallback((rollNum: Dice): string => {\n    if (finish) {\n      return 'New Game';\n    }\n\n    switch (rollNum) {\n      case 0:\n        return 'First Roll';\n      case 1:\n        return 'Second Roll';\n      case 2:\n        return 'Last Roll';\n      case 3:\n        return 'Next Turn';\n      default:\n        return 'Error';\n    }\n  }, [finish]);\n\n  const handleTopScore = React.useCallback((points: number, i: number): void => {\n    topScores[i] = points;\n    dispatch(updateTop(topScores));\n  }, [dispatch, topScores]);\n\n  const handleBottomScore = React.useCallback((points: number, i: number): void => {\n    bottomScores[i] = points;\n    dispatch(updateBottom(bottomScores));\n  }, [bottomScores, dispatch]);\n\n  const top = React.useMemo(\n    () => topScores.map((score, i) => ({ ...topConstants[i], score })) as TopGameScore[],\n    [topScores],\n  );\n  const bottom = React.useMemo(\n    () => bottomScores.map((score, i) => ({ ...bottomConstants[i], score })) as BottomGameScore[],\n    [bottomScores],\n  );\n\n  return (\n    <>\n      <Header scores={scores} />\n      <hr />\n      <TableHeader\n        values={values}\n        saved={saved}\n        roll={roll}\n        handleUnsave={handleUnsave}\n        handleSave={handleSave}\n        handleDiceRoll={handleDiceRoll}\n        getButtonText={getButtonText}\n      />\n      <hr />\n      <Typography variant=\"h4\">{`Total: ${finalTopSum + bottomSum}`}</Typography>\n      <ScoreTable\n        values={[...saved, ...values]}\n        bottom={bottom}\n        top={top}\n        onTopScore={handleTopScore}\n        onBottomScore={handleBottomScore}\n        showScoreButtons={showScoreButtons}\n        topSum={topSum}\n        finalTopSum={finalTopSum}\n        bottomSum={bottomSum}\n      />\n    </>\n  );\n};\n\nexport default Yahtzee;\n"],"sourceRoot":""}