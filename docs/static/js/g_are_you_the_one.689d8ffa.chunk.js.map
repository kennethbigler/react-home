{"version":3,"file":"static/js/g_are_you_the_one.689d8ffa.chunk.js","mappings":"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","sources":["components/games/are-you-the-one/controls/Dropdown.tsx","components/games/are-you-the-one/controls/Controls.tsx","components/games/are-you-the-one/table/TBDialog.tsx","components/games/are-you-the-one/table/TableBody.tsx","components/games/are-you-the-one/table/Table.tsx","components/games/are-you-the-one/analysis/useHist.ts","components/games/are-you-the-one/analysis/Analysis.tsx","components/games/are-you-the-one/AreYouTheOne.tsx"],"sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\n\ninterface DropdownProps {\n  onSelect: (index: number) => void;\n  options: string[];\n  roundNumber: number;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { roundNumber, options, onSelect } = props;\n\n  // hooks/state\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number\n  ) => {\n    onSelect(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        ref={anchorRef}\n        variant=\"contained\"\n        aria-label=\"split button\"\n        color={roundNumber + 2 === options.length ? \"error\" : \"primary\"}\n      >\n        <Button>{options[roundNumber]}</Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\" autoFocusItem>\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === roundNumber}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { RoundPairing } from \"../../../../store/types\";\nimport Dropdown from \"./Dropdown\";\n\ninterface ControlsProps {\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  onSelect: (index: number) => void;\n  options: string[];\n  roundNumber: number;\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  updateScore: (score: number) => void;\n  updateNoMatch: (li: number, gi: number) => void;\n}\n\n// eslint-disable-next-line no-restricted-globals\nconst getScore = (value: number) => (isNaN(value) ? -1 : value);\n\nconst Controls = (props: ControlsProps) => {\n  const {\n    matches,\n    noMatch,\n    options,\n    onSelect,\n    roundNumber,\n    roundPairings,\n    updateNoMatch,\n    updateScore,\n  } = props;\n\n  // hooks/state\n  const [score, setScore] = React.useState(\n    getScore(roundPairings[roundNumber]?.score)\n  );\n\n  // handlers\n  const handleSelect = (index: number) => {\n    setScore(getScore(roundPairings[index]?.score));\n    onSelect(index);\n  };\n\n  const handleBlackout = () => {\n    roundPairings[roundNumber].pairs.forEach((gi, li) => {\n      if (matches[li] !== gi && !noMatch[li][gi]) {\n        updateNoMatch(li, gi);\n      }\n    });\n  };\n\n  const handleTextFieldChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setScore(parseInt(event.target.value, 10) || 0);\n    updateScore(parseInt(event.target.value, 10));\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <Dropdown\n        roundNumber={roundNumber}\n        options={options}\n        onSelect={handleSelect}\n      />\n      {roundNumber < options.length - 2 && (\n        <>\n          <Button variant=\"outlined\" onClick={handleBlackout}>\n            Blackout\n          </Button>\n          <TextField\n            id=\"score-input\"\n            label=\"Score\"\n            variant=\"outlined\"\n            type=\"number\"\n            value={score}\n            onChange={handleTextFieldChange}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\n\nexport interface TBDialogProps {\n  open: boolean;\n  content: string;\n  onMatch: () => void;\n  onNoMatch: () => void;\n  onCancel: () => void;\n}\n\nconst TBDialog = ({\n  open,\n  content,\n  onMatch,\n  onNoMatch,\n  onCancel,\n}: TBDialogProps) => (\n  <Dialog onClose={onCancel} open={open}>\n    <DialogTitle>TB Result</DialogTitle>\n    <DialogContent>Are {content} a perfect match?</DialogContent>\n    <DialogActions>\n      <Button onClick={onMatch}>Match</Button>\n      <Button onClick={onNoMatch} color=\"error\">\n        No Match\n      </Button>\n      <Button onClick={onCancel} color=\"warning\">\n        Cancel\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default TBDialog;\n","import React from \"react\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport { RoundPairing } from \"../../../../store/types\";\nimport TBDialog from \"./TBDialog\";\n\nexport interface AYTOTableProps {\n  gents: string[];\n  ladies: string[];\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  options: string[];\n  roundNumber: number;\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n  updateMatch: (li: number, gi: number) => void;\n  updateNoMatch: (li: number, gi: number) => void;\n  updatePairs: (ri: number, li: number, gi: number) => void;\n}\n\nconst AYTOTableBody = (props: AYTOTableProps) => {\n  const {\n    gents,\n    ladies,\n    matches,\n    noMatch,\n    options,\n    roundNumber: ri,\n    roundPairings,\n    updateMatch,\n    updateNoMatch,\n    updatePairs,\n  } = props;\n  const isTB = options.length === ri + 2;\n  const isConsolidated = options.length === ri + 1;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [tbi, setTBI] = React.useState([-1, -1]);\n  const hist: number[][] = [];\n\n  // TODO: re-plumb to use useHist?\n  // create histogram\n  roundPairings.forEach((RP) => {\n    RP.pairs.forEach((gi, li) => {\n      !hist[li] && (hist[li] = []);\n      hist[li][gi] = !hist[li][gi] ? 1 : hist[li][gi] + 1;\n    });\n  });\n\n  // Handlers\n  const handleClick = (roundi: number, ladyi: number, genti: number) => () => {\n    if (isConsolidated) {\n      return;\n    }\n    if (isTB) {\n      setTBI([ladyi, genti]);\n      setOpen(true);\n      return;\n    }\n    // Regular Round, verify gent isn't already taken\n    const tempLi = roundPairings[roundi]?.pairs.indexOf(genti);\n    if (tempLi !== -1) {\n      // deselect gent from old lady\n      updatePairs(roundi, tempLi, -1);\n    }\n    // assign to new lady\n    updatePairs(roundi, ladyi, genti);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleMatch = () => {\n    const [li, gi] = tbi;\n    updateMatch(li, gi);\n    handleCancel();\n  };\n\n  const handleNoMatch = () => {\n    const [li, gi] = tbi;\n    updateNoMatch(li, gi);\n    handleCancel();\n  };\n\n  return (\n    <TableBody>\n      {ladies.map((lName, li) => (\n        <TableRow\n          key={`ayto-table-row-${lName}`}\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n        >\n          <TableCell component=\"th\" scope=\"row\">\n            {lName}\n          </TableCell>\n          {gents.map((gName, gi) => {\n            // variables\n            let variant: \"outlined\" | \"contained\" = \"outlined\";\n            let color: \"primary\" | \"error\" | \"success\" = \"primary\";\n            let disabled = false;\n\n            // logic\n            if (isTB) {\n              // if has data about match or no match\n              if ((noMatch[li] && noMatch[li][gi]) || matches[li] === gi) {\n                variant = \"contained\";\n              }\n            } else if (roundPairings[ri]?.pairs[li] === gi) {\n              // if paired this round\n              variant = \"contained\";\n            } else if (noMatch[li] && noMatch[li][gi]) {\n              // if no match and not paired\n              variant = \"contained\";\n              disabled = true;\n            }\n\n            if (noMatch[li] && noMatch[li][gi]) {\n              color = \"error\";\n            }\n\n            // if match\n            if (matches[li] === gi) {\n              color = \"success\";\n            }\n\n            const histValue = hist[li] ? hist[li][gi] || 0 : 0;\n            // if consolidated\n            if (isConsolidated && histValue > 0) {\n              variant = \"contained\";\n            }\n\n            // render\n            return (\n              <TableCell key={gName} sx={{ padding: 0, textAlign: \"center\" }}>\n                <Button\n                  variant={variant}\n                  color={color}\n                  onClick={handleClick(ri, li, gi)}\n                  disabled={disabled}\n                >\n                  {isConsolidated ? histValue : `${lName[0]}-${gName[0]}`}\n                </Button>\n              </TableCell>\n            );\n          })}\n        </TableRow>\n      ))}\n      <TBDialog\n        open={open}\n        content={`${ladies[tbi[0]]} & ${gents[tbi[1]]}`}\n        onCancel={handleCancel}\n        onMatch={handleMatch}\n        onNoMatch={handleNoMatch}\n      />\n    </TableBody>\n  );\n};\n\nexport default AYTOTableBody;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport AYTOTableBody, { AYTOTableProps } from \"./TableBody\";\n\nconst AYTOTable = ({ gents, ...other }: AYTOTableProps) => (\n  <TableContainer component={Paper}>\n    <Table aria-label=\"are you the one data entry table\">\n      <TableHead>\n        <TableRow>\n          <TableCell />\n          {gents.map((name) => (\n            <TableCell\n              key={name}\n              sx={{ paddingLeft: 0, paddingRight: 0, textAlign: \"center\" }}\n            >\n              {name}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <AYTOTableBody gents={gents} {...other} />\n    </Table>\n  </TableContainer>\n);\n\nexport default AYTOTable;\n","import { RoundPairing } from \"../../../../store/types\";\n\nexport interface AYTOHist {\n  odds: number;\n  oddsWeight: number;\n  rounds: number[];\n}\n\nexport interface AYTODictObj {\n  couples: [number, number][];\n  score: number;\n}\n\nexport interface AYTODict {\n  [key: string]: AYTODictObj;\n}\n\n/** [lady-i: (gent-i | -1), -1, -1, ...] */\n/** [lady-i: [gent-i: bool]] */\n/** [round-i: RoundPairing] */\nconst useHist = (\n  len: number,\n  matches: number[],\n  noMatch: boolean[][],\n  roundPairings: RoundPairing[]\n) => {\n  // state\n  const hist: AYTOHist[][] = [];\n  const tempScore: number[] = [];\n  const totals: number[] = [];\n\n  // create histogram\n  roundPairings.forEach(({ pairs }, ri) => {\n    tempScore[ri] = 0;\n    totals[ri] = len;\n\n    pairs.forEach((gi, li) => {\n      // noMatch increases odds of the rest\n      if (li < 0 || gi < 0 || noMatch[li][gi]) {\n        totals[ri] -= 1;\n      }\n      // remove matches\n      if (matches[li] === gi) {\n        tempScore[ri] += 1;\n        totals[ri] -= 1;\n      }\n      // verify data obj\n      !hist[li] && (hist[li] = []);\n      !hist[li][gi] && (hist[li][gi] = { odds: 0, oddsWeight: 0, rounds: [] });\n      // histogram\n      hist[li][gi].rounds.push(ri);\n    });\n  });\n\n  // temp state\n  const dict: AYTODict = {};\n\n  // with histogram made, time to get some stats\n  roundPairings.forEach(({ pairs, score }, ri) => {\n    pairs.forEach((gi, li) => {\n      // ----------     odds     ---------- //\n      const histObj = hist[li][gi];\n      // 0% odds for no match\n      if (noMatch[li][gi]) {\n        return;\n      }\n      // 100% odds for match\n      if (matches[li] === gi) {\n        histObj.odds = 100;\n        return;\n      }\n      // calculate odds for the round\n      const odds = totals[ri]\n        ? ((score - tempScore[ri]) * 100) / totals[ri]\n        : 0;\n      // rolling average\n      histObj.odds = Math.floor(\n        (histObj.odds * histObj.oddsWeight + odds) / (histObj.oddsWeight + 1)\n      );\n\n      // ----------     equations     ---------- //\n      // only care about repeats\n      if (histObj.rounds.length < 2) {\n        return;\n      }\n      // create key from round combination (length)\n      const keys = [\n        histObj.rounds.reduce((acc, val) => acc + val.toString(), \"\"),\n      ];\n      // add every pair of 2 rounds as keys\n      for (let i = ri + 1; i < histObj.rounds.length; i += 1) {\n        keys.push(`${histObj.rounds[ri]}${histObj.rounds[i]}`);\n      }\n      // NOTE: length (l) and 2 are covered, anything in-between is not directly considered (still covered in 2s)\n      keys.forEach((key) => {\n        // put that in the dictionary\n        !dict[key] && (dict[key] = { couples: [], score });\n        // calculate equations\n        let canAdd = true;\n        dict[key].couples.forEach(([tli, tgi]) => {\n          canAdd = canAdd && tli !== li && tgi !== gi;\n        });\n        canAdd && dict[key].couples.push([li, gi]);\n        dict[key].score = Math.min(score - tempScore[ri], dict[key].score);\n      });\n    });\n  });\n\n  // more state\n  const calculatedEquations: RoundPairing[] = [];\n\n  // convert qualifying couples to more equations\n  Object.keys(dict).forEach((key) => {\n    if (\n      // only care about repeat couples\n      dict[key].couples.length > 1 &&\n      // where there are more couples than score available\n      dict[key].couples.length > dict[key].score\n    ) {\n      const tempPairs: number[] = [];\n      // convert to RP\n      dict[key].couples.forEach(([li, gi]) => {\n        tempPairs[li] = gi;\n      });\n      // validate new equation doesn't already exist\n      let isRepeat = false;\n      calculatedEquations.forEach(({ pairs, score }, ci) => {\n        let hasExactRepeat = true;\n        let hasRoughRepeat = true;\n        for (let i = 0; i < pairs.length; i += 1) {\n          if (tempPairs[i] !== pairs[i]) {\n            if (tempPairs[i]) {\n              hasExactRepeat = false;\n              hasRoughRepeat = false;\n            } else {\n              // new equation has fewer couples, may still be a match but is missing some keys\n              hasExactRepeat = false;\n            }\n          }\n        }\n        isRepeat =\n          // compare against itself\n          isRepeat ||\n          // exclude if exact repeat\n          hasExactRepeat ||\n          // exclude if rough repeat with higher or equal score\n          (hasRoughRepeat && dict[key].score >= score);\n        // if exact repeat, pick the lower of the 2 scores\n        if (hasExactRepeat) {\n          calculatedEquations[ci].score = Math.min(score, dict[key].score);\n        }\n      });\n      // Add RP to equations\n      !isRepeat &&\n        calculatedEquations.push({\n          pairs: tempPairs,\n          score: dict[key].score,\n        });\n    }\n  });\n\n  return {\n    hist,\n    tempScore,\n    calculatedEquations,\n  };\n};\n\nexport default useHist;\n","import React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Chip from \"@mui/material/Chip\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport { RoundPairing } from \"../../../../store/types\";\nimport useHist from \"./useHist\";\n\ninterface AnalysisProps {\n  gents: string[];\n  ladies: string[];\n  /** [lady-i: (gent-i | -1), -1, -1, ...] */\n  matches: number[];\n  /** [lady-i: [gent-i: bool]] */\n  noMatch: boolean[][];\n  /** [round-i: RoundPairing] */\n  roundPairings: RoundPairing[];\n}\n\nconst Analysis = (props: AnalysisProps) => {\n  const { gents, ladies, matches, noMatch, roundPairings } = props;\n\n  // state\n  const [showAll, setShowAll] = React.useState(false);\n  const { hist, tempScore, calculatedEquations } = useHist(\n    ladies.length,\n    matches,\n    noMatch,\n    roundPairings\n  );\n\n  // handlers\n  const handleSwitch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setShowAll(event.target.checked);\n  };\n\n  return (\n    <div>\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        <h1>Analysis</h1>\n        <FormControlLabel\n          control={\n            <Switch checked={showAll} onChange={handleSwitch} name=\"show-all\" />\n          }\n          label=\"Show All Couples\"\n        />\n      </Stack>\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {roundPairings.map(({ pairs, score }, ri) => {\n          const equation = pairs.map((gi, li) => {\n            // if cleared pairing\n            if (li < 0 || gi < 0) {\n              return null;\n            }\n\n            const isRepeat = hist[li][gi].rounds.length > 1;\n            // TODO: make color options type\n            let color: \"primary\" | \"default\" | \"error\" | \"success\" = isRepeat\n              ? \"primary\"\n              : \"default\";\n\n            if (!showAll) {\n              // hide matches and noMatches\n              if (noMatch[li][gi] || matches[li] === gi) {\n                return null;\n              }\n            } else {\n              // no match chip\n              if (noMatch[li][gi]) {\n                color = \"error\";\n              }\n              // match chip\n              if (matches[li] === gi) {\n                color = \"success\";\n              }\n            }\n\n            const label = `${ladies[li]}-${gents[gi]}${\n              isRepeat ? ` ${hist[li][gi].rounds.length}` : \"\"\n            } - ${hist[li][gi].odds}%`;\n\n            // create equation chips\n            return (\n              <Chip\n                key={`eq-r${ri}-l${li}-g${gi}`}\n                label={label}\n                color={color}\n              />\n            );\n          });\n\n          // return each equation stack\n          return !equation.every((e) => e === null) ? (\n            <Stack key={`equation-${ri}`} spacing={1}>\n              <h2 style={{ textAlign: \"center\" }}>Matchup {ri + 1}</h2>\n              {equation}\n              <Chip\n                label={showAll ? score : score - tempScore[ri]}\n                color=\"warning\"\n              />\n            </Stack>\n          ) : null;\n        })}\n      </Stack>\n      <hr />\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {calculatedEquations.map(({ pairs, score }, cei) => (\n          <Stack key={`equation-${cei}`} spacing={1}>\n            <h2 style={{ textAlign: \"center\" }}>Calculated {cei + 1}</h2>\n            {pairs.map((gi, li) => (\n              <Chip\n                key={`eq-calc-l${li}-g${gi}`}\n                label={`${ladies[li]}-${gents[gi]} ${hist[li][gi].rounds.length} - ${hist[li][gi].odds}%`}\n                color=\"primary\"\n              />\n            ))}\n            <Chip label={score} color=\"warning\" />\n          </Stack>\n        ))}\n      </Stack>\n    </div>\n  );\n};\n\nexport default Analysis;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Controls from \"./controls/Controls\";\nimport Table from \"./table/Table\";\nimport Analysis from \"./analysis/Analysis\";\nimport { ladies, gents, options } from \"../../../constants/ayto\";\nimport { DBRootState } from \"../../../store/types\";\nimport {\n  updateMatch,\n  updateNoMatch,\n  updatePairs,\n  updateScore,\n} from \"../../../store/modules/ayto\";\n\n/**\n * TODO:\n * replace Dropdown with MUI Dropdown when available\n * if an equation exists in another equation, sub it out for remaining number\n * useHist needs to move to this file\n */\nconst AreYouTheOne = () => {\n  // Redux\n  const { roundPairings, noMatch, matches } = useSelector(\n    (state: DBRootState) => ({ ...state.ayto })\n  );\n  const dispatch = useDispatch();\n\n  // state\n  const [roundNumber, setRoundNumber] = React.useState(0);\n\n  // handlers\n  const handleSelect = (selected: number) => {\n    setRoundNumber(selected);\n  };\n  const handleUpdateScore = (score: number) => {\n    dispatch(updateScore(score, roundNumber));\n  };\n  const handleUpdateNoMatch = (li: number, gi: number) => {\n    dispatch(updateNoMatch(li, gi));\n  };\n  const handleUpdatePairs = (ri: number, li: number, gi: number) => {\n    dispatch(updatePairs(ri, li, gi));\n  };\n  const handleUpdateMatch = (li: number, gi: number) => {\n    dispatch(updateMatch(li, gi));\n    for (let ri = 0; ri < options.length - 2; ri += 1) {\n      if (\n        !roundPairings[ri] ||\n        roundPairings[ri].pairs[li] < 0 ||\n        roundPairings[ri].pairs[li] === undefined\n      ) {\n        dispatch(updatePairs(ri, li, gi));\n      }\n    }\n  };\n\n  return (\n    <>\n      <h1>Are You The One?</h1>\n      <Controls\n        matches={matches}\n        noMatch={noMatch}\n        onSelect={handleSelect}\n        options={options}\n        roundNumber={roundNumber}\n        roundPairings={roundPairings}\n        updateNoMatch={handleUpdateNoMatch}\n        updateScore={handleUpdateScore}\n      />\n      <br />\n      <Table\n        gents={gents}\n        ladies={ladies}\n        matches={matches}\n        noMatch={noMatch}\n        options={options}\n        roundNumber={roundNumber}\n        roundPairings={roundPairings}\n        updateMatch={handleUpdateMatch}\n        updateNoMatch={handleUpdateNoMatch}\n        updatePairs={handleUpdatePairs}\n      />\n      <Analysis\n        gents={gents}\n        ladies={ladies}\n        matches={matches}\n        noMatch={noMatch}\n        roundPairings={roundPairings}\n      />\n    </>\n  );\n};\n\nexport default AreYouTheOne;\n"],"names":["props","roundNumber","options","onSelect","React","open","setOpen","anchorRef","handleClose","event","current","contains","target","ButtonGroup","ref","variant","color","length","Button","size","undefined","onClick","prevOpen","ArrowDropDown","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","map","option","index","MenuItem","selected","handleMenuItemClick","getScore","value","isNaN","matches","noMatch","roundPairings","updateNoMatch","updateScore","score","setScore","display","justifyContent","pairs","forEach","gi","li","TextField","label","type","onChange","parseInt","content","onMatch","onNoMatch","onCancel","Dialog","onClose","DialogTitle","DialogContent","DialogActions","gents","ladies","ri","updateMatch","updatePairs","isTB","isConsolidated","tbi","setTBI","hist","RP","handleCancel","TableBody","lName","TableRow","sx","border","TableCell","component","scope","gName","disabled","roundi","ladyi","genti","histValue","padding","textAlign","tempLi","indexOf","other","TableContainer","Table","TableHead","name","paddingLeft","paddingRight","len","tempScore","totals","odds","oddsWeight","rounds","push","dict","histObj","Math","floor","keys","reduce","acc","val","toString","i","key","couples","canAdd","tli","tgi","min","calculatedEquations","Object","tempPairs","isRepeat","ci","hasExactRepeat","hasRoughRepeat","showAll","setShowAll","useHist","Stack","direction","FormControlLabel","control","Switch","checked","spacing","flexWrap","equation","Chip","every","e","cei","useSelector","state","ayto","dispatch","useDispatch","setRoundNumber","handleUpdateNoMatch"],"sourceRoot":""}