{"version":3,"file":"static/js/r_cars.7eece58f.chunk.js","mappings":"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","sources":["constants/cars.ts","components/resume/cars/CarCard.tsx","components/resume/cars/CarChart.tsx","components/resume/cars/CarChartControls.tsx","components/resume/cars/Cars.tsx"],"sourcesContent":["import { indigo, grey, red, lime, yellow, teal } from \"@mui/material/colors\";\nimport dateObj from \"../apis/DateHelper\";\n\nimport prius07 from \"../images/07_toyota_prius.png\";\nimport voyager97 from \"../images/97_plymouth_voyager.png\";\nimport pontiac93 from \"../images/93_pontiac_bonneville.webp\";\nimport impala10 from \"../images/10_chevrolet_impala.webp\";\nimport equinox10 from \"../images/10_chevy_equinox.png\";\nimport mustang15 from \"../images/15_mustang_gt_premium.png\";\nimport tesla16 from \"../images/16_tesla_x.webp\";\nimport xj8l05 from \"../images/05_jaguar_xj8l.jpg\";\nimport corvette18 from \"../images/18_corvette_zo6_3lz.png\";\nimport ftype15 from \"../images/15_jaguar_f_type.webp\";\nimport mustang20 from \"../images/20_ford_mustang.png\";\nimport panamera21 from \"../images/21_porsche_panamera.png\";\nimport bronco21 from \"../images/21_ford_bronco.webp\";\nimport grom22 from \"../images/22_honda_grom.webp\";\n\nconst prius = \"Toyota Prius (2007)\";\nconst voyager = \"Plymouth Voyager (1997)\";\nconst bonneville = \"Pontiac Bonneville (1993)\";\nconst equinox = \"Chevy Equinox LTZ (2010)\";\nconst impala = \"Chevrolet Impala LS (2010)\";\nconst mustang = \"Ford Mustang GT Premium (2015)\";\nconst tesla = \"Tesla Model X 90D (2016)\";\nconst ftype = \"Jaguar F-Type R Convertible (2015)\";\nconst xj8l = \"Jaguar XJ8-L (2005)\";\nconst corvette = \"Chevrolet Corvette Z06 (2018)\";\nconst mustang2 = \"Ford Mustang GT Premium (2020)\";\nconst panamera = \"Porsche Panamera E-Hybrid (2021)\";\nconst bronco = \"Ford Bronco Badlands (2021)\";\nconst grom = \"Honda Grom (2022)\";\n\nconst familyCars = [\n  {\n    color: grey[50],\n    start: dateObj(\"2008-03\"),\n    end: dateObj(\"2010-02\"),\n    car: \"Voyager\",\n    short: \"Voygr\",\n    char: \"V\",\n    title: voyager,\n    inverted: true,\n\n    owned: \"1997 - 2010\",\n    story: `My Mother had a ${voyager}.`,\n    src: voyager97,\n    transmission: \"Automatic\",\n\n    displacement: 3.7,\n    horsepower: 158,\n    MPG: 21,\n    torque: 203,\n    weight: 3696,\n  },\n  {\n    color: grey[400],\n    start: dateObj(\"2015-02\"),\n    end: dateObj(\"2015-06\"),\n    car: \"Impala\",\n    short: \"Impla\",\n    char: \"I\",\n    nickname: \"Irene\",\n    title: impala,\n    inverted: true,\n\n    owned: \"2010 - 2015\",\n    story: `My parents held on to the ${impala} for 4 months for my brother.`,\n    src: impala10,\n    transmission: \"Automatic\",\n\n    displacement: 3.5,\n    horsepower: 211,\n    MPG: 22,\n    torque: 216,\n    weight: 3555,\n  },\n  {\n    color: indigo[500],\n    start: dateObj(\"2008-03\"),\n    end: dateObj(\"2016-08\"),\n    car: \"Prius\",\n    short: \"Prius\",\n    char: \"P\",\n    title: prius,\n\n    owned: \"2008 - 2016\",\n    story: `I learned to drive with a permit on my Father's ${prius}.`,\n    src: prius07,\n    transmission: \"Automatic\",\n\n    displacement: 1.5,\n    horsepower: 110,\n    MPG: 46,\n    torque: 82,\n    weight: 2932,\n  },\n  {\n    color: lime[800],\n    inverted: true,\n    start: dateObj(\"2017-10\"),\n    end: dateObj(\"2021-08\"),\n    car: \"Jag XJ8-L\",\n    short: \"XJ8-L\",\n    char: \"J\",\n    title: xj8l,\n\n    owned: \"2017 - 2021\",\n    story: `My Family's ${xj8l}.`,\n    src: xj8l05,\n    transmission: \"Automatic\",\n\n    displacement: 4.2,\n    horsepower: 294,\n    MPG: 19,\n    torque: 303,\n    weight: 3777,\n  },\n  {\n    color: lime[800],\n    inverted: true,\n    start: dateObj(\"2010-02\"),\n    end: dateObj(),\n    car: \"Equinox\",\n    short: \"Eqnox\",\n    char: \"E\",\n    title: equinox,\n\n    owned: \"2010 - present\",\n    story: `My Mother's ${equinox}.`,\n    src: equinox10,\n    transmission: \"Automatic\",\n\n    displacement: 2.4,\n    horsepower: 182,\n    MPG: 26,\n    torque: 172,\n    weight: 3838,\n  },\n  {\n    color: grey[50],\n    start: dateObj(\"2016-03\"),\n    end: dateObj(),\n    car: \"Model X\",\n    short: \"ModlX\",\n    char: \"X\",\n    title: tesla,\n    inverted: true,\n\n    owned: \"2016 - present\",\n    story: `My Father's ${tesla}.`,\n    src: tesla16,\n    transmission: \"Direct\",\n\n    displacement: 0,\n    horsepower: 417,\n    MPG: 92,\n    torque: 485,\n    weight: 5271,\n  },\n  {\n    color: grey[50],\n    start: dateObj(\"2021-08\"),\n    end: dateObj(),\n    car: \"Panamera\",\n    short: \"Pnmra\",\n    char: \"PP\",\n    title: panamera,\n    inverted: true,\n\n    owned: \"2021 - Present\",\n    story: `My Mother's ${panamera}.`,\n    src: panamera21,\n    transmission: \"Automatic\",\n\n    displacement: 2.9,\n    horsepower: 455,\n    MPG: 22,\n    torque: 516,\n    weight: 4967,\n  },\n  {\n    color: yellow[500],\n    start: dateObj(\"2021-10\"),\n    end: dateObj(),\n    car: \"Corvette\",\n    short: \"Vette\",\n    char: \"C\",\n    nickname: \"Camilla\",\n    title: corvette,\n    inverted: true,\n\n    owned: \"2021 - Present\",\n    story: `My parents purchased my ${corvette} 3LZ with the Z07 Track Package to keep it in the family.`,\n    src: corvette18,\n    transmission: \"Manual\",\n\n    displacement: 6.2,\n    horsepower: 650,\n    MPG: 18,\n    torque: 650,\n    weight: 3524,\n  },\n];\n\nconst kensCars = [\n  {\n    color: grey[800],\n    start: dateObj(\"2008-03\"),\n    end: dateObj(\"2010-12\"),\n    car: \"Bonneville\",\n    short: \"Bonne\",\n    char: \"P\",\n    nickname: \"Petunia\",\n    title: bonneville,\n\n    owned: \"2008 - 2010\",\n    story: `I got my first car: a ${bonneville}. It was previously my grandfather's and I got it as my first car when I got my license.`,\n    src: pontiac93,\n    transmission: \"Automatic\",\n\n    displacement: 3.8,\n    horsepower: 205,\n    MPG: 18,\n    torque: 260,\n    weight: 3607,\n  },\n  {\n    color: grey[400],\n    start: dateObj(\"2010-12\"),\n    end: dateObj(\"2015-02\"),\n    car: \"Impala\",\n    short: \"Impla\",\n    char: \"I\",\n    nickname: \"Irene\",\n    title: impala,\n    inverted: true,\n\n    owned: \"2010 - 2015\",\n    story: `After selling my first car, my parents purchased a ${impala} for me to drive. It was a used Hertz rental car.`,\n    src: impala10,\n    transmission: \"Automatic\",\n\n    displacement: 3.5,\n    horsepower: 211,\n    MPG: 22,\n    torque: 216,\n    weight: 3555,\n  },\n  {\n    color: red[900],\n    start: dateObj(\"2015-02\"),\n    end: dateObj(\"2019-01\"),\n    car: \"Mustang\",\n    short: \"Mstng\",\n    char: \"M1\",\n    nickname: \"Miranda\",\n    title: mustang,\n\n    owned: \"2015 - 2019\",\n    story:\n      `I purchased my first vehicle, a new ${mustang} with the 50 Years Edition Package. I did some modifications to this car including: ` +\n      \"Rear Window Louvers, GT350 start button, metal dead pedal, ergonomic parking break, Borla Ford Racing Sport Catback Exhaust, & Hurst automatic shift lever.\",\n    src: mustang15,\n    transmission: \"Automatic\",\n\n    displacement: 5.0,\n    horsepower: 435 + 15,\n    MPG: 19,\n    torque: 400,\n    weight: 3705,\n  },\n  {\n    color: grey[50],\n    start: dateObj(\"2018-03\"),\n    end: dateObj(\"2018-08\"),\n    car: \"Jag F-Type\",\n    short: \"FType\",\n    char: \"J\",\n    title: ftype,\n    inverted: true,\n\n    owned: \"2018\",\n    story: `I rented a ${ftype} on Turo, which I wouldn't normally include in this list, but I totalled this car, so ended up having my insurance buy it! So I kind of owned it for one day.`,\n    src: ftype15,\n    transmission: \"Manual\",\n\n    displacement: 3.0,\n    horsepower: 380,\n    MPG: 22,\n    torque: 339,\n    weight: 3558,\n  },\n  {\n    color: yellow[500],\n    start: dateObj(\"2019-01\"),\n    end: dateObj(\"2021-10\"),\n    car: \"Corvette\",\n    short: \"Vette\",\n    char: \"C\",\n    nickname: \"Camilla\",\n    title: corvette,\n    inverted: true,\n\n    owned: \"2019 - 2021\",\n    story: `To replace my Mustang I purchased a ${corvette} 3LZ with the Z07 Track Package used from the Ron Fellows Performance Driving School. I sold it to my parents.`,\n    src: corvette18,\n    transmission: \"Manual\",\n\n    displacement: 6.2,\n    horsepower: 650,\n    MPG: 18,\n    torque: 650,\n    weight: 3524,\n  },\n  {\n    color: indigo[900],\n    start: dateObj(\"2020-03\"),\n    end: dateObj(\"2022-10\"),\n    car: \"Mustang2\",\n    short: \"Mstng\",\n    char: \"M2\",\n    nickname: \"Miranda Jr\",\n    title: mustang2,\n\n    owned: \"2020 - 2022\",\n    story: `I shared a ${mustang2} with the Performance Pack 1 with my roommate!`,\n    src: mustang20,\n    transmission: \"Manual\",\n\n    displacement: 5.0,\n    horsepower: 460,\n    MPG: 18,\n    torque: 420,\n    weight: 3705,\n  },\n  {\n    color: teal[100],\n    start: dateObj(\"2021-10\"),\n    end: dateObj(),\n    car: \"Bronco\",\n    short: \"Brnco\",\n    char: \"B\",\n    nickname: \"Betty\",\n    title: bronco,\n    inverted: true,\n\n    owned: \"2021 - Present\",\n    story: `In an attempt to get a more practical daily driver, as well as dip my toes into the off-roading community, I purchased a ${bronco}.`,\n    src: bronco21,\n    transmission: \"Manual\",\n\n    displacement: 2.3,\n    horsepower: 270,\n    MPG: 18,\n    torque: 310,\n    weight: 4499,\n  },\n  {\n    color: grey[900],\n    start: dateObj(\"2022-04\"),\n    end: dateObj(),\n    car: \"Grom\",\n    short: \"Grom\",\n    char: \"G\",\n    title: grom,\n\n    owned: \"2022 - Present\",\n    story: `motorcycle: ${grom}.`,\n    src: grom22,\n    transmission: \"Sequential\",\n\n    displacement: 0.124,\n    horsepower: parseFloat((9.7 * 1.139).toPrecision(3)),\n    MPG: 97,\n    torque: parseFloat((7.7 * 1.143).toPrecision(3)),\n    weight: 230,\n  },\n];\n\nfamilyCars.reverse();\nkensCars.reverse();\nconst cars = [...kensCars, ...familyCars];\n\nexport interface CarStats {\n  displacement: number;\n  horsepower: number;\n  MPG: number;\n  car: string;\n  char: string;\n  torque: number;\n  weight: number;\n}\nexport interface GraphData extends CarStats {\n  powerToWeight: number;\n}\n\nconst kWeight = 245;\n\nexport const processData = (data: CarStats[]): GraphData[] => {\n  if (data.length === 0) {\n    return [];\n  }\n\n  const max = {\n    displacement: data[0].displacement,\n    horsepower: data[0].horsepower,\n    MPG: data[0].MPG,\n    torque: data[0].torque,\n    weight: data[0].weight + kWeight,\n    powerToWeight: data[0].horsepower / (data[0].weight + kWeight),\n  };\n  const min = { ...max };\n\n  // find the min and max values in the array\n  for (let i = 1; i < data.length; i += 1) {\n    const {\n      horsepower,\n      displacement,\n      MPG,\n      torque,\n      weight: dryWeight,\n    } = data[i];\n    const weight = dryWeight + kWeight;\n    const powerToWeight = horsepower / weight;\n\n    (displacement > max.displacement && (max.displacement = displacement)) ||\n      (displacement < min.displacement && (min.displacement = displacement));\n    (horsepower > max.horsepower && (max.horsepower = horsepower)) ||\n      (horsepower < min.horsepower && (min.horsepower = horsepower));\n    (MPG > max.MPG && (max.MPG = MPG)) || (MPG < min.MPG && (min.MPG = MPG));\n    (torque > max.torque && (max.torque = torque)) ||\n      (torque < min.torque && (min.torque = torque));\n    (weight > max.weight && (max.weight = weight)) ||\n      (weight < min.weight && (min.weight = weight));\n    (powerToWeight > max.powerToWeight &&\n      (max.powerToWeight = powerToWeight)) ||\n      (powerToWeight < min.powerToWeight &&\n        (min.powerToWeight = powerToWeight));\n  }\n\n  const ret: GraphData[] = [];\n\n  // normalize the data to all fit on the same graph (0-1)\n  data.forEach((car: CarStats) => {\n    const powerToWeight = car.horsepower / car.weight;\n    ret.push({\n      displacement:\n        (car.displacement - min.displacement) /\n        (max.displacement - min.displacement),\n      horsepower:\n        (car.horsepower - min.horsepower) / (max.horsepower - min.horsepower),\n      MPG: (car.MPG - min.MPG) / (max.MPG - min.MPG),\n      car: car.car,\n      char: car.char,\n      torque: (car.torque - min.torque) / (max.torque - min.torque),\n      weight: (car.weight - min.weight) / (max.weight - min.weight),\n      powerToWeight:\n        (powerToWeight - min.powerToWeight) /\n        (max.powerToWeight - min.powerToWeight),\n    });\n  });\n\n  return ret;\n};\n\nexport const processedKensCars = processData(kensCars);\nexport const processedFamilyCars = processData(familyCars);\nexport const processedCars = processData(cars);\nexport { kensCars, familyCars };\n\nexport default cars;\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nexport interface Car {\n  owned: string;\n  story: string;\n  src: string;\n  title: string;\n  transmission: string;\n  horsepower: number;\n}\ninterface CarCardProps {\n  car: Car;\n}\n\nconst containerStyles: React.CSSProperties = {\n  maxWidth: 1488,\n  margin: \"auto\",\n  marginTop: 20,\n};\nconst imgStyles: React.CSSProperties = {\n  width: \"100%\",\n  maxWidth: \"30em\",\n  float: \"right\",\n};\n\nconst CarCard: React.FC<CarCardProps> = ({ car }: CarCardProps) => (\n  <Card style={containerStyles}>\n    <Grid container spacing={1}>\n      <Grid item sm={8} xs={12}>\n        <CardContent>\n          <Typography variant=\"h4\" component=\"h3\">\n            <strong style={{ paddingRight: 20 }}>{`(${car.owned})`}</strong>\n            {car.title}\n          </Typography>\n          <hr />\n          <Typography\n            variant=\"h5\"\n            component=\"h4\"\n          >{`Horsepower: ${car.horsepower}`}</Typography>\n          <Typography\n            variant=\"h5\"\n            component=\"h4\"\n          >{`Transmission: ${car.transmission}`}</Typography>\n          <hr />\n          <Typography>{car.story}</Typography>\n        </CardContent>\n      </Grid>\n      <Grid item sm={4} xs={12}>\n        <img src={car.src} alt={car.title} style={imgStyles} />\n      </Grid>\n    </Grid>\n  </Card>\n);\n\nexport default CarCard;\n","import * as React from \"react\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Line,\n  Legend,\n} from \"recharts\";\nimport { red, orange, green, blue } from \"@mui/material/colors/\";\nimport { processData, CarStats } from \"../../../constants/cars\";\n\nexport interface HideObject {\n  MPG?: boolean;\n  horsepower?: boolean;\n  weight?: boolean;\n  powerToWeight?: boolean;\n  family?: boolean;\n  ken?: boolean;\n}\n\nexport interface CarChartProps {\n  showAnimation: boolean;\n  hide: HideObject;\n  vw: number;\n  vh: number;\n  data: CarStats[];\n}\n\nconst CarChart = React.memo(\n  ({ data, showAnimation, hide, vw, vh }: CarChartProps) => {\n    const processedData = processData(data);\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={vh <= 744 ? vh - 80 : 664}>\n        <LineChart data={processedData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis\n            dataKey={vw >= 930 ? \"car\" : \"char\"}\n            interval=\"preserveStartEnd\"\n            reversed\n          />\n          <YAxis\n            domain={[\"dataMin\", \"dataMax\"]}\n            tickCount={6}\n            width={28}\n            hide\n          />\n          {!hide.MPG && (\n            <Line\n              strokeWidth={2}\n              type=\"monotone\"\n              dot={false}\n              isAnimationActive={showAnimation}\n              dataKey=\"MPG\"\n              stroke={green[500]}\n            />\n          )}\n          {!hide.horsepower && (\n            <Line\n              strokeWidth={2}\n              type=\"monotone\"\n              dot={false}\n              isAnimationActive={showAnimation}\n              dataKey=\"horsepower\"\n              stroke={red[500]}\n            />\n          )}\n          {!hide.weight && (\n            <Line\n              strokeWidth={2}\n              type=\"monotone\"\n              dot={false}\n              isAnimationActive={showAnimation}\n              dataKey=\"weight\"\n              stroke={blue[500]}\n            />\n          )}\n          {!hide.powerToWeight && (\n            <Line\n              strokeWidth={2}\n              type=\"monotone\"\n              dot={false}\n              isAnimationActive={showAnimation}\n              dataKey=\"powerToWeight\"\n              stroke={orange[500]}\n            />\n          )}\n          <Legend verticalAlign=\"top\" />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n);\n\nexport default CarChart;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Typography from \"@mui/material/Typography\";\nimport { HideObject } from \"./CarChart\";\n\ninterface CarChartControlsProps {\n  hide: HideObject;\n  onClick: (key: ShowKey) => () => void;\n  vw: number;\n}\n\nexport type ShowKey = keyof HideObject;\n\nconst CarChartControls = React.memo(\n  ({ onClick, hide, vw }: CarChartControlsProps) => (\n    <div>\n      <Typography variant=\"h3\" component=\"h2\">\n        Hide Data:\n      </Typography>\n      <ButtonGroup\n        color=\"secondary\"\n        aria-label=\"outlined secondary button group controlling graph\"\n      >\n        <Button\n          onClick={onClick(\"MPG\")}\n          variant={hide.MPG ? \"contained\" : \"outlined\"}\n        >\n          MPG\n        </Button>\n        <Button\n          onClick={onClick(\"horsepower\")}\n          variant={hide.horsepower ? \"contained\" : \"outlined\"}\n        >\n          Horsepower\n        </Button>\n        <Button\n          onClick={onClick(\"weight\")}\n          variant={hide.weight ? \"contained\" : \"outlined\"}\n        >\n          Weight\n        </Button>\n        <Button\n          onClick={onClick(\"powerToWeight\")}\n          variant={hide.powerToWeight ? \"contained\" : \"outlined\"}\n          aria-label=\"power to weight ratio\"\n        >\n          {vw >= 435 ? \"Power-to-Weight\" : \"PTW\"}\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup\n        color=\"secondary\"\n        aria-label=\"outlined secondary button group controlling graph part 3\"\n      >\n        <Button\n          onClick={onClick(\"family\")}\n          variant={hide.family ? \"contained\" : \"outlined\"}\n        >\n          {vw >= 435 ? \"Hide Family's\" : \"Fam\"}\n        </Button>\n        <Button\n          onClick={onClick(\"ken\")}\n          variant={hide.ken ? \"contained\" : \"outlined\"}\n        >\n          {vw >= 435 ? \"Hide Ken's\" : \"Ken\"}\n        </Button>\n      </ButtonGroup>\n    </div>\n  )\n);\n\nexport default CarChartControls;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport TimelineCard from \"../../common/timeline-card\";\nimport dateObj from \"../../../apis/DateHelper\";\nimport cars, { kensCars, familyCars } from \"../../../constants/cars\";\nimport CarCard from \"./CarCard\";\nimport CarChart, { HideObject } from \"./CarChart\";\nimport CarChartControls, { ShowKey } from \"./CarChartControls\";\n\nconst hrStyles: React.CSSProperties = { marginTop: 60, marginBottom: 20 };\n\nconst Cars = React.memo(() => {\n  const [showAnimation, setShowAnimation] = React.useState(true);\n  const [hide, setHide] = React.useState<HideObject>({});\n\n  const { clientWidth, clientHeight } = document.documentElement;\n  const { innerWidth, innerHeight } = window;\n  const vw = Math.max(clientWidth, innerWidth, 0);\n  const vh = Math.max(clientHeight, innerHeight, 0);\n\n  const handleClick = (key: ShowKey) => () => {\n    if (key === \"ken\" || key === \"family\") {\n      setShowAnimation(true);\n    } else {\n      setShowAnimation(\n        (hide.horsepower && hide.MPG && hide.weight && hide.powerToWeight) ||\n          false\n      );\n    }\n    if (hide[key]) {\n      setHide({ ...hide, [key]: false });\n    } else {\n      setHide({ ...hide, [key]: true });\n    }\n  };\n\n  let data = cars;\n  if (hide.ken && hide.family) {\n    data = [];\n  } else if (hide.ken) {\n    data = familyCars;\n  } else if (hide.family) {\n    data = kensCars;\n  }\n\n  return (\n    <>\n      <Typography variant=\"h2\" component=\"h1\">\n        Ken&apos;s Cars\n      </Typography>\n      <br />\n      <CarChartControls onClick={handleClick} hide={hide} vw={vw} />\n      <CarChart\n        showAnimation={showAnimation}\n        data={data}\n        hide={hide}\n        vw={vw}\n        vh={vh}\n      />\n      <TimelineCard\n        enableLongTitles\n        data={data}\n        selector=\"car\"\n        start={dateObj(\"2008-03\")}\n        title=\"Ken's Cars\"\n        yearMarkerFrequency={3}\n      />\n      {!hide.ken &&\n        kensCars.map((car) => <CarCard car={car} key={car.title} />)}\n      {!hide.ken && !hide.family && <hr style={hrStyles} />}\n      {!hide.family &&\n        familyCars.map((car) => <CarCard car={car} key={car.title} />)}\n    </>\n  );\n});\n\nexport default Cars;\n"],"names":["prius","voyager","bonneville","equinox","impala","mustang","tesla","ftype","xj8l","corvette","mustang2","panamera","bronco","grom","familyCars","color","grey","start","dateObj","end","car","short","char","title","inverted","owned","story","src","voyager97","transmission","displacement","horsepower","MPG","torque","weight","nickname","impala10","indigo","prius07","lime","xj8l05","equinox10","tesla16","panamera21","yellow","corvette18","kensCars","pontiac93","red","mustang15","ftype15","mustang20","teal","bronco21","grom22","parseFloat","toPrecision","reverse","cars","processData","data","length","max","powerToWeight","min","i","ret","forEach","push","containerStyles","maxWidth","margin","marginTop","imgStyles","width","float","Card","style","Grid","container","spacing","item","sm","xs","CardContent","Typography","variant","component","paddingRight","alt","React","showAnimation","hide","vw","vh","processedData","ResponsiveContainer","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","interval","reversed","YAxis","domain","tickCount","Line","strokeWidth","type","dot","isAnimationActive","stroke","green","blue","orange","Legend","verticalAlign","onClick","ButtonGroup","Button","family","ken","hrStyles","marginBottom","setShowAnimation","setHide","document","documentElement","clientWidth","clientHeight","window","innerWidth","innerHeight","Math","key","enableLongTitles","selector","yearMarkerFrequency","map"],"sourceRoot":""}