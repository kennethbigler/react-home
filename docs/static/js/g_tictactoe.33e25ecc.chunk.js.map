{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/colors/grey.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/isString.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/includes.js","../node_modules/lodash/values.js","../node_modules/lodash/_baseValues.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/lodash/fill.js","../node_modules/lodash/_baseFill.js","../node_modules/lodash/toLength.js","../node_modules/lodash/_baseClamp.js","components/games/tictactoe/Header.jsx","components/games/tictactoe/constants.js","components/games/tictactoe/History.jsx","components/games/tictactoe/Cell.jsx","components/games/tictactoe/Board.jsx","components/games/tictactoe/TicTacToe.jsx","components/games/tictactoe/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Tablelvl2Context","n","a","createContext","__webpack_exports__","TableContext","Object","defineProperty","exports","value","default","_default","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","module","array","fromIndex","index","length","baseGetTag","isArray","isObjectLike","stringTag","baseFindIndex","baseIsNaN","strictIndexOf","baseIndexOf","isArrayLike","isString","toInteger","values","nativeMax","Math","max","collection","guard","indexOf","baseValues","keys","object","arrayMap","props","key","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_TableContext__WEBPACK_IMPORTED_MODULE_6__","Table","forwardRef","ref","classes","className","_props$component","component","Component","_props$padding","padding","_props$size","size","other","table","useMemo","createElement","Provider","root","display","width","borderCollapse","borderSpacing","name","_Table_Tablelvl2Context__WEBPACK_IMPORTED_MODULE_6__","tablelvl2","variant","TableBody","TableRow","_props$hover","hover","_props$selected","selected","useContext","head","footer","theme","color","verticalAlign","outline","&$selected","backgroundColor","palette","type","&$hover:hover","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","_utils_helpers__WEBPACK_IMPORTED_MODULE_6__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_7__","_Table_TableContext__WEBPACK_IMPORTED_MODULE_8__","_Table_Tablelvl2Context__WEBPACK_IMPORTED_MODULE_9__","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","ariaSort","body","concat","aria-sort","typography","body2","borderBottom","divider","textAlign","&:last-child","paddingRight","text","secondary","fontSize","pxToRem","lineHeight","fontWeight","fontWeightMedium","primary","fontWeightRegular","sizeSmall","&$paddingCheckbox","paddingLeft","& > *","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","baseFill","isIterateeCall","start","end","toLength","undefined","baseClamp","MAX_ARRAY_LENGTH","number","lower","upper","Header","memo","winner","turn","newGame","status","react_default","Toolbar","Typography","style","flex","Button","onClick","X","O","getTurn","History","_useState","useState","_useState2","slicedToArray","ascend","setAscend","history","step","jumpToStep","moves","map","round","move","description","floor","location","reverse","marginTop","marginBottom","Cell","attr","indigo","Board","renderCells","_this$props","_this","board","winRow","cells","i","row","_loop","j","c","includes","push","border","grey","tictactoe_Cell","boardRow","this","EMPTY","getNewGameVars","fill","Array","calculateWinner","lines","_lines$i","b","TicTacToe","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","_this$state","state","newHistory","slice","setState","_this$state2","stepNo","styles","paper","margin","_this2","_this$state3","_calculateWinner","gutterBottom","Paper","elevation","tictactoe_Header","Board_Board","tictactoe_History"],"mappings":"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","file":"static/js/g_tictactoe.33e25ecc.chunk.js","sourcesContent":["import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\nexport default Tablelvl2Context;","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\nexport default TableContext;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#d5d5d5',\n  A200: '#aaaaaa',\n  A400: '#303030',\n  A700: '#616161'\n};\nvar _default = grey;\nexports.default = _default;","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = strictIndexOf;","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar stringTag = '[object String]';\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\n\nfunction isString(value) {\n  return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;\n}\n\nmodule.exports = isString;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;","var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\n\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;\n  var length = collection.length;\n\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n\n  return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;\n}\n\nmodule.exports = includes;","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\n\n\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;","var arrayMap = require('./_arrayMap');\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\n\n\nfunction baseValues(object, props) {\n  return arrayMap(props, function (key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table',\n    width: '100%',\n    borderCollapse: 'collapse',\n    borderSpacing: 0\n  }\n};\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'table' : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size\n    };\n  }, [padding, size]);\n  return React.createElement(TableContext.Provider, {\n    value: table\n  }, React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tbody' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 'none',\n      '&$selected': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.04)' // grey[100]\n        : 'rgba(255, 255, 255, 0.08)'\n      },\n      '&$hover:hover': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.07)' // grey[200]\n        : 'rgba(255, 255, 255, 0.14)'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tr' : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      head: classes.head,\n      footer: classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: '14px 40px 14px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      }\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      lineHeight: theme.typography.pxToRem(21),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary,\n      fontWeight: theme.typography.fontWeightRegular\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0px 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    }\n  };\n};\nvar TableCell = React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var Component;\n\n  if (component) {\n    Component = component;\n  } else {\n    Component = tablelvl2 && tablelvl2.variant === 'head' ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && tablelvl2 && tablelvl2.variant === 'head') {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, (variant ? variant === 'head' : tablelvl2 && tablelvl2.variant === 'head') && classes.head, (variant ? variant === 'body' : tablelvl2 && tablelvl2.variant === 'body') && classes.body, (variant ? variant === 'footer' : tablelvl2 && tablelvl2.variant === 'footer') && classes.footer, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    \"aria-sort\": ariaSort,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['head', 'body', 'footer'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","var baseFill = require('./_baseFill'),\n    isIterateeCall = require('./_isIterateeCall');\n/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */\n\n\nfunction fill(array, value, start, end) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return [];\n  }\n\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n\n  return baseFill(array, value, start, end);\n}\n\nmodule.exports = fill;","var toInteger = require('./toInteger'),\n    toLength = require('./toLength');\n/**\n * The base implementation of `_.fill` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n */\n\n\nfunction baseFill(array, value, start, end) {\n  var length = array.length;\n  start = toInteger(start);\n\n  if (start < 0) {\n    start = -start > length ? 0 : length + start;\n  }\n\n  end = end === undefined || end > length ? length : toInteger(end);\n\n  if (end < 0) {\n    end += length;\n  }\n\n  end = start > end ? 0 : toLength(end);\n\n  while (start < end) {\n    array[start++] = value;\n  }\n\n  return array;\n}\n\nmodule.exports = baseFill;","var baseClamp = require('./_baseClamp'),\n    toInteger = require('./toInteger');\n/** Used as references for the maximum length and index of an array. */\n\n\nvar MAX_ARRAY_LENGTH = 4294967295;\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object.\n *\n * **Note:** This method is based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toLength(3.2);\n * // => 3\n *\n * _.toLength(Number.MIN_VALUE);\n * // => 0\n *\n * _.toLength(Infinity);\n * // => 4294967295\n *\n * _.toLength('3.2');\n * // => 3\n */\n\nfunction toLength(value) {\n  return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n}\n\nmodule.exports = toLength;","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n\n  return number;\n}\n\nmodule.exports = baseClamp;","import React, { memo } from 'react';\nimport types from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// Parents: TicTacToe\n\n/* ========================================\n * Header\n * ======================================== */\nconst Header = memo((props) => {\n  const { winner, turn, newGame } = props;\n  // status text\n  const status = winner ? `Winner: ${winner}` : `Turn: ${turn}`;\n\n  return (\n    <Toolbar>\n      <Typography style={{ flex: 1 }} variant=\"h6\">\n        {status}\n      </Typography>\n      <Button color=\"primary\" onClick={newGame} variant=\"contained\">\n        Reset Game\n      </Button>\n    </Toolbar>\n  );\n});\n\nHeader.propTypes = {\n  newGame: types.func.isRequired,\n  turn: types.string.isRequired,\n  winner: types.string,\n};\n\nexport default Header;\n","export const X = 'X';\nexport const O = 'O';\nexport const getTurn = n => (n % 2 ? O : X);\n","import React, { useState } from 'react';\nimport types from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport map from 'lodash/map';\nimport { getTurn } from './constants';\n// Parents: TicTacToe\n\n/* ========================================\n * History\n * ======================================== */\nconst History = (props) => {\n  const [ascend, setAscend] = useState(true);\n  const { history, step, jumpToStep } = props;\n\n  /**\n   * function that generates text for the history tracker\n   * @param {Object} round - contains board and click location for turn\n   * @param {number} move - just index tracking\n   * @return {Object}\n   */\n  const getHistoryText = (round, move) => {\n    // generate description text\n    const description = !move\n      ? 'Game Start (Turn, Col, Row)'\n      : `Move #${move} (${getTurn(move - 1)}, `\n      + `${Math.floor(round.location / 3)}, ${round.location % 3})`;\n    // highlight current turn displayed on board\n    const color = step === move ? 'secondary' : 'default';\n    return (\n      <Button\n        key={move}\n        color={color}\n        onClick={() => jumpToStep(move)}\n        style={{ display: 'block' }}\n      >\n        {description}\n      </Button>\n    );\n  };\n\n  // move history\n  const moves = map(history, getHistoryText);\n  // asc vs. desc\n  !ascend && moves.reverse();\n\n  return (\n    <div>\n      <Button\n        onClick={() => { setAscend(!ascend); }}\n        style={{ marginTop: 20, marginBottom: 20 }}\n        variant=\"contained\"\n      >\n        {ascend ? 'Asc' : 'Desc'}\n      </Button>\n      {moves}\n    </div>\n  );\n};\n\nHistory.propTypes = {\n  history: types.arrayOf(types.shape({ location: types.number })).isRequired,\n  jumpToStep: types.func.isRequired,\n  step: types.number.isRequired,\n};\n\nexport default History;\n","import React, { memo } from 'react';\nimport types from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport indigo from '@material-ui/core/colors/indigo';\n// Parents: Board\n\n/* ========================================\n * Cell\n * ======================================== */\nconst Cell = memo((props) => {\n  const { value, winner, onClick } = props;\n  // add attributes if cell is a winner\n  const attr = winner ? { color: 'white', backgroundColor: indigo.A700 } : null;\n\n  return (\n    <Button onClick={onClick} style={attr}>\n      {value || <br />}\n    </Button>\n  );\n});\n\nCell.propTypes = {\n  onClick: types.func.isRequired,\n  value: types.string,\n  winner: types.bool.isRequired,\n};\n\nexport default Cell;\n","import React, { Component } from 'react';\nimport types from 'prop-types';\n// material-ui\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport grey from '@material-ui/core/colors/grey';\n// functions\nimport includes from 'lodash/includes';\nimport Cell from './Cell';\n// Parents: TicTacToe\n\n/* ========================================\n * Board\n * ======================================== */\nexport default class Board extends Component {\n  static propTypes = {\n    board: types.arrayOf(types.string).isRequired,\n    onClick: types.func.isRequired,\n    winRow: types.arrayOf(types.number).isRequired,\n  };\n\n  /* function to render the cells of the Board */\n  renderCells = () => {\n    const { board, onClick, winRow } = this.props;\n    const cells = [];\n    // create 3 rows\n    for (let i = 0; i < 3; i += 1) {\n      // create 3 cells in a row\n      const row = [];\n      for (let j = 0; j < 3; j += 1) {\n        const c = i * 3 + j;\n        // check if winning position\n        const winner = includes(winRow, c);\n        row.push(\n          <TableCell\n            key={`${i},${j}`}\n            style={{\n              padding: 0,\n              textAlign: 'center',\n              border: `1px solid ${grey[400]}`,\n            }}\n          >\n            <Cell onClick={() => onClick(c)} value={board[c]} winner={winner} />\n          </TableCell>,\n        );\n      }\n      const boardRow = (\n        <TableRow key={`row${i}`}>\n          {row}\n        </TableRow>\n      );\n      // separate into rows\n      cells.push(boardRow);\n    }\n    // return wrapped element\n    return (\n      <TableBody>\n        {cells}\n      </TableBody>\n    );\n  };\n\n  render() {\n    return (\n      <Table>\n        {this.renderCells()}\n      </Table>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport fill from 'lodash/fill';\nimport Header from './Header';\nimport History from './History';\nimport Board from './Board';\nimport { X, O, getTurn } from './constants';\n// Parents: Main\n\nconst EMPTY = null;\n\n// constants and helper functions\nconst getNewGameVars = () => ({\n  history: [{ board: fill(Array(9), EMPTY) }],\n  turn: X,\n  step: 0,\n});\n\n/**\n * function to check if there are 3 in a row\n * @param {array} board - array for board, 3 cells per 3 rows (0-8)\n * @return {Object} value of winner and positions for winner\n */\nfunction calculateWinner(board) {\n  const lines = [\n    // horizontal\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    // vertical\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    // diagonal\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  // check each win condition\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    // if all 3 match and aren't empty\n    if (board[a] !== EMPTY && board[a] === board[b] && board[a] === board[c]) {\n      // return winner and winning positions\n      return { winner: board[a], winRow: lines[i] };\n    }\n  }\n  return { winner: null, winRow: [] };\n}\n\n/* ========================================\n * TicTacToe Game Logic\n * ======================================== */\nexport default class TicTacToe extends Component {\n  constructor() {\n    super();\n    this.state = getNewGameVars();\n    this.styles = { paper: { width: 343, display: 'block', margin: 'auto' } };\n  }\n\n  /**\n   * function that modifies board with appropriate turn\n   * @param {number} location - locaiton of board click (row * 3 + col)\n   */\n  handleClick = (location) => {\n    const { turn, step, history } = this.state;\n    const newHistory = history.slice(0, step + 1);\n    const current = newHistory[step];\n    const board = current.board.slice();\n\n    // game is over or cell is full\n    if (!calculateWinner(board).winner && board[location] === EMPTY) {\n      // place marker, then update turn\n      board[location] = turn;\n\n      // update board state\n      this.setState({\n        history: newHistory.concat([{ board, location }]),\n        step: newHistory.length,\n        turn: turn === X ? O : X,\n      });\n    }\n  };\n\n  /** function that resets game back to it's initial state */\n  newGame = () => {\n    this.setState(getNewGameVars());\n  };\n\n  /**\n   * function that modifies board to go back to a previous point in history\n   * @param {number} step - desired point in history\n   */\n  jumpToStep = (step) => {\n    const { step: stepNo, history } = this.state;\n    const state = { step, turn: getTurn(step) };\n    // Double click will eliminate all other history if there is any\n    if (step === stepNo) {\n      state.history = history.slice(0, stepNo + 1);\n    }\n    // update board to previous state, non-permanent, history exists still\n    this.setState(state);\n  };\n\n  render() {\n    const { history, turn, step } = this.state;\n    const current = history[step];\n    const board = current.board.slice();\n    const { winner, winRow } = calculateWinner(board);\n\n    return (\n      <div>\n        <Typography variant=\"h2\" gutterBottom>Tic-Tac-Toe</Typography>\n        <Paper elevation={2} style={this.styles.paper}>\n          <Header newGame={this.newGame} turn={turn} winner={winner} />\n          <Board\n            board={board}\n            onClick={i => this.handleClick(i)}\n            winRow={winRow}\n          />\n        </Paper>\n        <History history={history} jumpToStep={this.jumpToStep} step={step} />\n      </div>\n    );\n  }\n}\n","import TicTacToe from './TicTacToe';\n\nexport default TicTacToe;\n"],"sourceRoot":""}