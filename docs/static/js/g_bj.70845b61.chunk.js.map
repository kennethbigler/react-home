{"version":3,"file":"static/js/g_bj.70845b61.chunk.js","mappings":"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","sources":["components/common/info-popover/InfoPopup.tsx","components/games/blackjack/blackjackHelpers.ts","components/games/blackjack/Rules.tsx","components/games/blackjack/help/Cell.tsx","components/games/blackjack/help/Row.tsx","components/games/blackjack/help/BlackjackTable.tsx","components/games/blackjack/help/Help.tsx","components/games/blackjack/Header.tsx","components/games/blackjack/Blackjack.tsx","components/games/game-table/board/card/Card.styles.ts","components/games/game-table/board/card/Card.tsx","components/games/game-table/board/Hand.tsx","components/games/game-table/board/player/Player.styles.ts","components/games/game-table/board/player/Player.tsx","components/games/game-table/board/Board.tsx","components/games/game-table/button-group/Button.tsx","components/games/game-table/button-group/ButtonGroup.tsx","components/games/game-table/GameTable.tsx","hooks/useOpenState.ts","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/colors/deepPurple.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Button from \"@mui/material/Button\";\nimport useOpenState from \"../../../hooks/useOpenState\";\n\ninterface InfoPopupProps {\n  /** popup content */\n  children: React.ReactNode | React.ReactNodeArray;\n  /** title content */\n  title: string | React.ReactElement;\n  /** button content */\n  buttonText?: string | React.ReactElement;\n}\n\nconst InfoPopup = (props: InfoPopupProps): React.ReactElement => {\n  const [isOpen, handleOpen, handleClose] = useOpenState();\n  const { buttonText, title, children } = props;\n\n  return (\n    <>\n      <Button\n        color=\"primary\"\n        onClick={handleOpen as React.MouseEventHandler}\n        variant=\"contained\"\n      >\n        {buttonText || title}\n      </Button>\n      <Dialog\n        title=\"info-popup\"\n        onClose={handleClose as React.MouseEventHandler}\n        open={isOpen}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>{children}</DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={handleClose as React.MouseEventHandler}\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default InfoPopup;\n","import { DBCard, DBHand, DBPlayer } from \"../../../store/types\";\n\n/** calculate the weight of a hand */\nexport function weighHand(hand: DBCard[] = []): {\n  weight: number;\n  soft: boolean;\n} {\n  // set return values\n  let weight = 0;\n  let soft = false;\n\n  // find the weight of the hand\n  hand.forEach((card) => {\n    const cardWeight = card.weight || 0;\n    if (cardWeight === 14) {\n      // A\n      if (weight <= 10) {\n        weight += 11;\n        soft = true;\n      } else {\n        weight += 1;\n      }\n    } else if (cardWeight > 10) {\n      // J - K\n      weight += 10;\n    } else {\n      // 2 - 10\n      weight += cardWeight;\n    }\n    // reduce by 10 if bust and soft\n    if (weight > 21 && soft) {\n      weight -= 10;\n      soft = false;\n    }\n  });\n\n  // return object w/ useful information\n  return { weight, soft };\n}\n\n// AI: https://www.blackjackinfo.com/blackjack-basic-strategy-engine/\nexport const playBot = (\n  hand: DBHand,\n  dealer: DBHand,\n  double: () => void,\n  hit: () => void,\n  split: () => void,\n  stay: () => void\n): void => {\n  // validate hand exists\n  if (!hand) {\n    return;\n  }\n  const n = hand.weight || 0;\n  const { soft } = hand;\n  // card / dealer weight\n  const { weight: d } = weighHand([dealer.cards[0]]);\n  const { weight: x } = weighHand([hand.cards[0]]);\n  const { weight: y } = weighHand([hand.cards[1]]);\n\n  // play AI logic\n  if (n < 22) {\n    // split algorithm\n    if (x === y) {\n      if (x === 2 || x === 3 || x === 7) {\n        // 2,3,7, split d2-7, hit d8+\n        d <= 7 ? split() : hit();\n      } else if (x === 4) {\n        // 4, split d5-6, else hit\n        d === 5 || d === 6 ? split() : hit();\n      } else if (x === 5) {\n        // 5, double d2-9, hit d10+\n        d <= 9 ? double() : hit();\n      } else if (x === 6) {\n        // 6, split d2-6, else hit\n        d <= 6 ? split() : hit();\n      } else if (x === 9) {\n        // 9, d7,10+ stay, else split\n        d === 7 || d >= 10 ? stay() : split();\n      } else if (x === 8 || x === 11) {\n        // 8,A split\n        split();\n      } else {\n        // 10 Stay\n        stay();\n      }\n    } else if (n < 20 && soft) {\n      // soft hands, A9+ stays\n      if (n === 13 || n === 14) {\n        // A2-A3 double d5-6, hit d2-4, d7-A\n        d === 5 || d === 6 ? double() : hit();\n      } else if (n === 15 || n === 16) {\n        // A4-A5 double d4-6, hit d2-3, d7-A\n        d >= 4 && d <= 6 ? double() : hit();\n      } else if (n === 17) {\n        // A6 double d3-6, hit d2, d7-A\n        d >= 3 && d <= 6 ? double() : hit();\n      } else if (n === 18) {\n        // A7 double d2-6, stay d7-8, hit d9-A\n        if (d >= 2 && d <= 6) {\n          double();\n        } else if (d === 7 || d === 8) {\n          stay();\n        } else {\n          hit();\n        }\n      } else if (n === 19) {\n        // A8 double d6, else stay\n        d === 6 ? double() : stay();\n      }\n    } else if (n < 17 && !soft) {\n      // hard hands, 17+ stays\n      if (n >= 5 && n <= 8) {\n        // 5-8 hit\n        hit();\n      } else if (n === 9) {\n        // 9 double d3-6, hit d2, d7-A\n        d >= 3 && d <= 6 ? double() : hit();\n      } else if (n === 10) {\n        // 10 double d2-9, hit d10-A\n        d >= 2 && d <= 9 ? double() : hit();\n      } else if (n === 11) {\n        // 11 double\n        double();\n      } else if (n === 12) {\n        // 12 hit d2-3, stay d4-6, hit 7-A\n        d >= 4 && d <= 6 ? stay() : hit();\n      } else if (n >= 13 && n <= 16) {\n        // 13-16 stay d2-6, hit 7-A\n        d >= 2 && d <= 6 ? stay() : hit();\n      }\n    } else {\n      stay();\n    }\n  } else {\n    // bust\n    stay();\n  }\n};\n\nexport interface PlayerStats {\n  house: number;\n  payout: number;\n  status: string;\n}\n\n// Dealer constant\nexport const DEALER = 0;\n\n/** finish the game and check for a winner */\nexport const banking = (\n  players: DBPlayer[],\n  payoutPlayer: (id: number, status: string, money: number) => void\n): void => {\n  // state variables\n  const dealer = players.filter((p) => p.id === DEALER)[0];\n  const dWeight = dealer.hands[0].weight || 0;\n  const dLength = dealer.hands[0].cards.length;\n  // track and find the winners\n  const playerStats: PlayerStats = { house: 0, payout: 0, status: \"\" };\n  // helper functions\n  const win = (ps: PlayerStats, bet: number, mul = 1): void => {\n    ps.house -= Math.floor(mul * bet);\n    ps.payout = Math.floor(mul * bet);\n    ps.status = \"win\";\n  };\n  const loss = (ps: PlayerStats, bet: number): void => {\n    ps.house += bet;\n    ps.payout = -bet;\n    ps.status = \"lose\";\n  };\n  players.forEach((player) => {\n    const { id, bet } = player;\n    if (id === DEALER) {\n      if (playerStats.house > 0) {\n        playerStats.status = \"win\";\n      } else if (playerStats.house < 0) {\n        playerStats.status = \"lose\";\n      } else {\n        playerStats.status = \"push\";\n      }\n      payoutPlayer(id, playerStats.status, playerStats.house);\n    } else {\n      player.hands.forEach((hand) => {\n        const { weight = 0, cards } = hand;\n        if (dWeight === 21 && dLength === 2) {\n          // dealer BlackJack\n          loss(playerStats, bet);\n        } else if (weight === 21 && cards.length === 2) {\n          // player BlackJack\n          win(playerStats, bet, 6 / 5);\n        } else if (weight <= 21 && (weight > dWeight || dWeight > 21)) {\n          win(playerStats, bet);\n        } else if (weight <= 21 && weight === dWeight) {\n          playerStats.payout = 0;\n          playerStats.status = \"push\";\n        } else {\n          loss(playerStats, bet);\n        }\n      });\n      payoutPlayer(id, playerStats.status, playerStats.payout);\n    }\n  });\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nconst Rules: React.FC = React.memo(() => (\n  <>\n    <Typography variant=\"h5\">Objective:</Typography>\n    <Typography>\n      Get as close to 21 as you can, without going over. Each card is worth\n      it&apos;s number, J/Q/K are worth 10, and an Ace is worth 11 unless you go\n      over 21, then it is worth 1.\n    </Typography>\n    <br />\n    <Typography variant=\"h5\">Blackjack:</Typography>\n    <Typography>\n      Delt an Ace and a 10/J/Q/K, this casino pays 3:2, but Vegas casinos do\n      6:5.\n    </Typography>\n    <br />\n    <Typography variant=\"h5\">Hit:</Typography>\n    <Typography>Get an extra card which adds to your total.</Typography>\n    <br />\n    <Typography variant=\"h5\">Stay:</Typography>\n    <Typography>Move to the next player.</Typography>\n    <br />\n    <Typography variant=\"h5\">Double Down:</Typography>\n    <Typography>\n      This option is available with a two card hand; before another card has\n      been drawn double your bet and receive one (and only one) additional card\n      to your hand. Play then moves to the next player.\n    </Typography>\n    <br />\n    <Typography variant=\"h5\">Splitting Pairs:</Typography>\n    <Typography>\n      When you are dealt a pair of cards of the same rank, you are allowed to\n      split into two separate hands and play them independently. You will match\n      your bet for the second hand. A double after a split is ok\n    </Typography>\n    <br />\n    <Typography variant=\"h5\">Resplitting:</Typography>\n    <Typography>\n      When you get additional pairs in the first two cards of a hand you can\n      resplit. Typically a player is allowed to split up to 3 times (delt 4 of a\n      kind).\n    </Typography>\n    <br />\n    <Typography variant=\"h5\">Splitting Aces:</Typography>\n    <Typography>\n      Player is limited to drawing only one additional card on each Ace. If you\n      draw a ten-valued card on one of your split Aces, the hand is not\n      considered a Blackjack (it is treated as a normal 21). You can re-split\n      Aces.\n    </Typography>\n    <br />\n    <Typography variant=\"h5\">Other Rules:</Typography>\n    <ul>\n      <Typography>\n        <li>Dealer hits on 16 or less and soft 17</li>\n      </Typography>\n      <Typography>\n        <li>Minimum bet is $5</li>\n      </Typography>\n    </ul>\n    <Typography variant=\"h5\">AI Algorithm:</Typography>\n    <ul>\n      <Typography>\n        <li>House Rules: 6 decks, H17, DAS, No Surrender, Peek</li>\n      </Typography>\n      <Typography>\n        <li>Estimated casino edge for these rules: 0.66%</li>\n      </Typography>\n    </ul>\n  </>\n));\n\nexport default Rules;\n","import React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\n\nexport interface CellProps {\n  color?: string;\n  style?: React.CSSProperties;\n  text: string;\n  rowSpan?: number;\n  colSpan?: number;\n}\n\nconst Cell: React.FC<CellProps> = React.memo((props: CellProps) => {\n  const { color, text, style, ...otherProps } = props;\n\n  const stl: React.CSSProperties = {\n    ...style,\n    textAlign: \"center\",\n    paddingLeft: 0,\n    paddingRight: 0,\n    backgroundColor: color,\n  };\n\n  return (\n    <TableCell size=\"small\" style={stl} {...otherProps}>\n      {text}\n    </TableCell>\n  );\n});\n\nexport default Cell;\n","import React from \"react\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport Cell, { CellProps } from \"./Cell\";\n\nexport interface RowProps {\n  data: CellProps[];\n  name: string;\n}\n\nconst tableCellStyle: React.CSSProperties = { textAlign: \"center\", padding: 0 };\n\nconst Row: React.FC<RowProps> = ({ name, data }: RowProps) => (\n  <TableRow>\n    <TableCell style={tableCellStyle}>{name}</TableCell>\n    {data.map((text, i) => (\n      <Cell key={i} {...text} />\n    ))}\n  </TableRow>\n);\n\nexport default Row;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Cell from \"./Cell\";\nimport Row, { RowProps } from \"./Row\";\n\ninterface BlackjackTableProps {\n  data: RowProps[];\n  title: string;\n}\n\nconst cards: string[] = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"T\", \"A\"];\nconst cellStyle: React.CSSProperties = { width: 60 };\n\nconst BlackjackTable: React.FC<BlackjackTableProps> = ({ title, data }) => (\n  <Table>\n    <TableHead>\n      <TableRow>\n        <TableCell colSpan={11}>{title}</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      <TableRow>\n        <Cell rowSpan={2} style={cellStyle} text=\"Hand\" />\n        <Cell colSpan={10} text=\"Dealer\" />\n      </TableRow>\n      <TableRow>\n        {cards.map((c) => (\n          <Cell key={c} text={c} />\n        ))}\n      </TableRow>\n      {data.map((obj) => (\n        <Row key={obj.name} name={obj.name} data={obj.data} />\n      ))}\n    </TableBody>\n  </Table>\n);\n\nexport default BlackjackTable;\n","// react\nimport React from \"react\";\n// material-ui\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { green, teal, red, orange, deepPurple } from \"@mui/material/colors\";\n// components\nimport Cell, { CellProps } from \"./Cell\";\nimport { RowProps } from \"./Row\";\nimport BlackjackTable from \"./BlackjackTable\";\n// Parents: blackjack/Header\n\n/* Help  ->  BlackJackTable  ->  Row  -->  Cell */\nconst Help: React.FC = React.memo(() => {\n  // options\n  const h: CellProps = { color: green[200], text: \"H\" };\n  const d: CellProps = { color: teal[200], text: \"D\" };\n  const s: CellProps = { color: red[200], text: \"S\" };\n  const p: CellProps = { color: orange[200], text: \"P\" };\n  const ds: CellProps = { color: deepPurple[200], text: \"DS\" };\n\n  // algorithms for options\n  const hardTtl: RowProps[] = [\n    { name: \"Hard 5\", data: [h, h, h, h, h, h, h, h, h, h] },\n    { name: \"Hard 6\", data: [h, h, h, h, h, h, h, h, h, h] },\n    { name: \"Hard 7\", data: [h, h, h, h, h, h, h, h, h, h] },\n    { name: \"Hard 8\", data: [h, h, h, h, h, h, h, h, h, h] },\n    { name: \"Hard 9\", data: [h, d, d, d, d, h, h, h, h, h] },\n    { name: \"Hard 10\", data: [d, d, d, d, d, d, d, d, h, h] },\n    { name: \"Hard 11\", data: [d, d, d, d, d, d, d, d, d, d] },\n    { name: \"Hard 12\", data: [h, h, s, s, s, h, h, h, h, h] },\n    { name: \"Hard 13\", data: [s, s, s, s, s, h, h, h, h, h] },\n    { name: \"Hard 14\", data: [s, s, s, s, s, h, h, h, h, h] },\n    { name: \"Hard 15\", data: [s, s, s, s, s, h, h, h, h, h] },\n    { name: \"Hard 16\", data: [s, s, s, s, s, h, h, h, h, h] },\n    { name: \"Hard 17\", data: [s, s, s, s, s, s, s, s, s, s] },\n    { name: \"Hard 18+\", data: [s, s, s, s, s, s, s, s, s, s] },\n  ];\n  const softTtl: RowProps[] = [\n    { name: \"Ace + 2\", data: [h, h, h, d, d, h, h, h, h, h] },\n    { name: \"Ace + 3\", data: [h, h, h, d, d, h, h, h, h, h] },\n    { name: \"Ace + 4\", data: [h, h, d, d, d, h, h, h, h, h] },\n    { name: \"Ace + 5\", data: [h, h, d, d, d, h, h, h, h, h] },\n    { name: \"Ace + 6\", data: [h, d, d, d, d, h, h, h, h, h] },\n    { name: \"Ace + 7\", data: [ds, ds, ds, ds, ds, s, s, h, h, h] },\n    { name: \"Ace + 8\", data: [s, s, s, s, ds, s, s, s, s, s] },\n    { name: \"Ace + 9\", data: [s, s, s, s, s, s, s, s, s, s] },\n  ];\n  const pairs: RowProps[] = [\n    { name: \"(2,2)\", data: [p, p, p, p, p, p, h, h, h, h] },\n    { name: \"(3,3)\", data: [p, p, p, p, p, p, h, h, h, h] },\n    { name: \"(4,4)\", data: [h, h, h, p, p, h, h, h, h, h] },\n    { name: \"(5,5)\", data: [d, d, d, d, d, d, d, d, h, h] },\n    { name: \"(6,6)\", data: [p, p, p, p, p, h, h, h, h, h] },\n    { name: \"(7,7)\", data: [p, p, p, p, p, p, h, h, h, h] },\n    { name: \"(8,8)\", data: [p, p, p, p, p, p, p, p, p, p] },\n    { name: \"(9,9)\", data: [p, p, p, p, p, s, p, p, s, s] },\n    { name: \"(T,T)\", data: [s, s, s, s, s, s, s, s, s, s] },\n    { name: \"(A,A)\", data: [p, p, p, p, p, p, p, p, p, p] },\n  ];\n\n  return (\n    <>\n      <BlackjackTable data={hardTtl} title=\"Hard Totals\" />\n      <BlackjackTable data={softTtl} title=\"Soft Totals\" />\n      <BlackjackTable data={pairs} title=\"Pairs\" />\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={11}>Key</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <Cell {...h} />\n            <Cell colSpan={2} text=\"= Hit\" />\n            <Cell {...s} />\n            <Cell colSpan={3} text=\"= Stand\" />\n            <Cell {...p} />\n            <Cell colSpan={3} text=\"= Split\" />\n          </TableRow>\n          <TableRow>\n            <Cell {...d} />\n            <Cell colSpan={10} text=\"= Double (Hit if not allowed)\" />\n          </TableRow>\n          <TableRow>\n            <Cell {...ds} />\n            <Cell colSpan={10} text=\"= Double (Stand if not allowed)\" />\n          </TableRow>\n        </TableBody>\n      </Table>\n    </>\n  );\n});\n\nexport default Help;\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport InfoPopup from \"../../common/info-popover/InfoPopup\";\nimport Rules from \"./Rules\";\nimport Help from \"./help\";\n\nconst Header: React.FC = React.memo(() => (\n  <div className=\"flex-container\">\n    <Typography variant=\"h2\" gutterBottom>\n      Blackjack (21)\n    </Typography>\n    <InfoPopup title=\"Rules\">\n      <Rules />\n      <Help />\n    </InfoPopup>\n  </div>\n));\n\nexport default Header;\n","/* Theoretical Max Score:   386 everyone splits 3 times and busts with 30, dealer bust with 26\n * Card Point Value:        340-380\n * split aces is not blackjack\n * get second card for dealer and hide it\n * buy insurance on dealer's Ace\n */\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport asyncForEach from \"../../../helpers/asyncForEach\";\nimport { weighHand, playBot, banking, DEALER } from \"./blackjackHelpers\";\nimport Header from \"./Header\";\nimport GameTable from \"../game-table\";\nimport Deck from \"../../../apis/Deck\";\nimport {\n  DBHand,\n  DBPlayer,\n  DBRootState,\n  GameFunctions,\n} from \"../../../store/types\";\nimport {\n  doubleHand,\n  hitHand,\n  setNewGame,\n  splitHand,\n  stayHand,\n  updateGameFunctions,\n  updateHasFunctions,\n  updateHideHands,\n} from \"../../../store/modules/blackjack\";\nimport { newHand, payout, updateBet } from \"../../../store/modules/players\";\n\nconst BlackJack: React.FC = () => {\n  const { turn, players, gameFunctions, hideHands, hasFunctions } = useSelector(\n    (state: DBRootState) => ({\n      ...state.blackjack,\n      players: state.players,\n      turn: state.turn,\n    })\n  );\n  const dispatch = useDispatch();\n\n  /** get the game functions for the present hand */\n  const getGameFunctions = React.useCallback(\n    (hand: DBHand): void => {\n      if (!hand) {\n        return;\n      }\n\n      // reset game functions\n      const newGameFunctions = [GameFunctions.STAY];\n      const handWeight = hand.weight || 0;\n\n      // check if not a bust\n      if (handWeight < 21) {\n        newGameFunctions.push(GameFunctions.HIT);\n        // check if you only have 2 cards\n        if (hand.cards.length === 2) {\n          newGameFunctions.push(GameFunctions.DOUBLE);\n          // check if card1 and card2 have equal weight\n          const { weight: weight1 } = weighHand([hand.cards[0]]);\n          const { weight: weight2 } = weighHand([hand.cards[1]]);\n          if (weight1 === weight2) {\n            newGameFunctions.push(GameFunctions.SPLIT);\n          }\n        }\n      }\n\n      // update game state\n      dispatch(updateGameFunctions(newGameFunctions));\n      dispatch(updateHasFunctions(true));\n    },\n    [dispatch]\n  );\n\n  /** function that takes a hand of duplicates and makes 2 hands */\n  const split = (): void => {\n    // get state values\n    const { id, hands } = players[turn.player];\n    dispatch(splitHand(hands, id, turn.hand, weighHand));\n  };\n\n  /** function to pass to the next player */\n  const stay = (): void => {\n    // get state values\n    const lastHand = players[turn.player].hands.length - 1;\n    // check if the player has more than 1 hand\n    dispatch(stayHand(turn.hand < lastHand));\n  };\n\n  /** function that doubles your bet, but you only get 1 card */\n  const double = (): void => {\n    dispatch(doubleHand(players[turn.player], turn, weighHand));\n  };\n\n  /** function to get a new card */\n  const hit = (): void => {\n    // get state values\n    const { id, hands } = players[turn.player];\n    // logic to hit\n    dispatch(hitHand(hands, id, turn.hand, weighHand));\n  };\n\n  /** Start a new round of hands */\n  const dealHands = React.useCallback(\n    (tempPlayers: DBPlayer[]): void => {\n      // shuffle the deck\n      Deck.shuffle()\n        .then(async () => {\n          // deal the hands\n          await asyncForEach(tempPlayers, async (player: DBPlayer) => {\n            const num = player.id !== DEALER ? 2 : 1;\n            await dispatch(newHand(player.id, num, weighHand));\n          });\n        })\n        .catch(() => {\n          // eslint-disable-next-line no-console\n          console.error(\"something went wrong with the shuffle\");\n        });\n      dispatch(updateHasFunctions(false));\n    },\n    [dispatch]\n  );\n\n  /** Start a new game */\n  const newGame = React.useCallback(\n    (tempPlayers: DBPlayer[]): void => {\n      dispatch(setNewGame(tempPlayers));\n    },\n    [dispatch]\n  );\n\n  /** function to finish betting and start the game */\n  const finishBetting = React.useCallback(\n    (tempPlayers: DBPlayer[]): void => {\n      dispatch(updateHideHands(false));\n      dealHands(tempPlayers);\n    },\n    [dispatch, dealHands]\n  );\n\n  /** extract dispatch call to payout player */\n  const payoutPlayer = React.useCallback(\n    (id: number, status: string, money: number) => {\n      dispatch(payout(id, status, money));\n    },\n    [dispatch]\n  );\n\n  /** function to get a new card */\n  const hitDealer = React.useCallback(\n    (tempPlayers: DBPlayer[]): void => {\n      // get state values\n      const { hands } = tempPlayers.filter((p) => p.id === DEALER)[0];\n      // logic to hit\n      dispatch(hitHand(hands, DEALER, 0, weighHand));\n    },\n    [dispatch]\n  );\n\n  /** function to execute dealer logic */\n  const playDealer = React.useCallback(\n    (tempPlayers: DBPlayer[]): void => {\n      const dealer = tempPlayers.filter((p) => p.id === DEALER)[0];\n      const hand = dealer.hands[0].cards;\n      const { weight, soft } = weighHand(hand);\n      // Dealer hits on 16 or less and soft 17\n      if (weight <= 16 || (weight === 17 && soft)) {\n        dispatch(updateHasFunctions(true));\n        hitDealer(tempPlayers);\n      } else {\n        banking(tempPlayers, payoutPlayer);\n        // update game functions\n        dispatch(updateGameFunctions([GameFunctions.NEW_GAME]));\n      }\n    },\n    [dispatch, hitDealer, payoutPlayer]\n  );\n\n  const checkUpdate = (): void => {\n    const player = players[turn.player];\n\n    if (hasFunctions || hideHands) {\n      return;\n    }\n    if (player) {\n      if (!player.isBot && player.id !== DEALER) {\n        getGameFunctions(player.hands[turn.hand]);\n        return;\n      }\n      if (player.isBot && player.id !== DEALER) {\n        const hand = players[turn.player].hands[turn.hand];\n        const dealer = players[players.length - 1].hands[0];\n        playBot(hand, dealer, double, hit, split, stay);\n        return;\n      }\n    }\n    !gameFunctions.includes(GameFunctions.NEW_GAME) && playDealer(players);\n  };\n\n  /** function to be called on card clicks */\n  const cardClickHandler = React.useCallback(\n    (playerNo: number, handNo: number, cardNo: number): void => {\n      // eslint-disable-next-line no-console\n      console.log(players[playerNo].hands[handNo].cards[cardNo]);\n    },\n    [players]\n  );\n\n  /** function to be called on card clicks */\n  const betHandler = React.useCallback(\n    (id: number, event: Event, bet: number): void => {\n      dispatch(updateBet(id, bet));\n    },\n    [dispatch]\n  );\n\n  /** function to route click actions */\n  const handleGameFunctionClick = (type: string): void => {\n    switch (type) {\n      case GameFunctions.NEW_GAME:\n        newGame(players);\n        break;\n      case GameFunctions.FINISH_BETTING:\n        finishBetting(players);\n        break;\n      case GameFunctions.STAY:\n        stay();\n        break;\n      case GameFunctions.HIT:\n        hit();\n        break;\n      case GameFunctions.DOUBLE:\n        double();\n        break;\n      case GameFunctions.SPLIT:\n        split();\n        break;\n      default:\n        // eslint-disable-next-line no-console\n        console.error(\"Unknown Game Function: \", type);\n    }\n  };\n\n  /* render the UI */\n  checkUpdate();\n\n  return (\n    <>\n      <Header />\n      <GameTable\n        betHandler={betHandler}\n        cardClickHandler={cardClickHandler}\n        gameFunctions={gameFunctions}\n        onClick={handleGameFunctionClick}\n        hideHands={hideHands}\n        players={players}\n        turn={turn}\n      />\n    </>\n  );\n};\n\nexport default BlackJack;\n","const cardFace: React.CSSProperties = {\n  backgroundColor: \"white\",\n  borderRadius: 5,\n  cursor: \"pointer\",\n  display: \"inline-block\",\n  fontWeight: \"bold\",\n  height: 78,\n  margin: 5,\n  padding: 3,\n  width: 50,\n};\n\nconst cardTitle: React.CSSProperties = {\n  textAlign: \"left\",\n};\n\nconst suit: React.CSSProperties = {\n  margin: \"auto\",\n  marginTop: 5,\n  textAlign: \"center\",\n  width: \"100%\",\n};\n\nexport default {\n  cardFace,\n  cardTitle,\n  suit,\n};\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { red } from \"@mui/material/colors\";\nimport styles from \"./Card.styles\";\n\ninterface CardProps {\n  cardHandler?: (playerNo: number, handNo: number, cardNo: number) => void;\n  cardNo: number;\n  dropped: boolean;\n  handNo: number;\n  name: string;\n  playerNo: number;\n  suit: string;\n}\n\nconst Card = React.memo((props: CardProps) => {\n  const { dropped, suit, name, cardHandler, playerNo, handNo, cardNo } = props;\n  // handle click to for card\n  const handleClick = React.useCallback((): void => {\n    cardHandler && cardHandler(playerNo, handNo, cardNo);\n  }, [cardHandler, cardNo, handNo, playerNo]);\n  // checking color based off suits: ♣♦♥♠\n  const cardColor: React.CSSProperties = {\n    color: suit === \"♣\" || suit === \"♠\" ? \"black\" : red[500],\n    backgroundColor: dropped ? red[100] : \"white\",\n  };\n\n  return (\n    <div\n      style={{ ...styles.cardFace, ...cardColor }}\n      onClick={handleClick}\n      role=\"main\"\n    >\n      <div style={styles.cardTitle}>{name + suit}</div>\n      <Typography variant=\"h4\" style={{ ...styles.suit, ...cardColor }}>\n        {suit}\n      </Typography>\n    </div>\n  );\n});\n\nexport default Card;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { purple } from \"@mui/material/colors\";\nimport Card from \"./card/Card\";\nimport { DBHand } from \"../../../../store/types\";\n\nconst boldStyle: React.CSSProperties = {\n  fontWeight: \"bold\",\n  marginTop: \"0.5em\",\n};\nconst normalStyle: React.CSSProperties = {\n  fontWeight: \"normal\",\n  marginTop: \"0.5em\",\n};\n\ninterface HandProps {\n  cardHandler?: (playerNo: number, handNo: number, cardNo: number) => void;\n  cardsToDiscard: number[];\n  hand: DBHand;\n  handNo: number;\n  isBlackJack: boolean;\n  isHandTurn: boolean;\n  isMultiHand: boolean;\n  isPlayerTurn: boolean;\n  playerNo: number;\n}\n\nconst Hand: React.FC<HandProps> = (props: HandProps) => {\n  const {\n    cardHandler,\n    cardsToDiscard,\n    hand,\n    handNo,\n    isBlackJack,\n    isHandTurn,\n    isMultiHand,\n    isPlayerTurn,\n    playerNo,\n  } = props;\n\n  const styles = React.useMemo(\n    () =>\n      isPlayerTurn && (!isMultiHand || (isMultiHand && isHandTurn))\n        ? { ...boldStyle, color: purple[700] }\n        : normalStyle,\n    [isPlayerTurn, isMultiHand, isHandTurn]\n  );\n  const handWeight = hand.weight || 0;\n\n  return (\n    <>\n      <Typography variant=\"h4\" style={styles}>\n        {isBlackJack && `${handWeight > 21 ? \"Bust\" : \"Hand\"}: ${handWeight}`}\n      </Typography>\n      {hand.cards.map((card, i) => {\n        const dropped: boolean = cardsToDiscard.includes(i);\n        return (\n          <Card\n            key={card.name + card.suit}\n            cardHandler={cardHandler}\n            cardNo={i}\n            dropped={dropped}\n            handNo={handNo}\n            name={card.name}\n            playerNo={playerNo}\n            suit={card.suit}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default Hand;\n","const player: React.CSSProperties = {\n  borderRadius: 5,\n  display: \"inline-block\",\n  margin: 10,\n  padding: 20,\n};\n\nconst width: React.CSSProperties = { minWidth: \"100px\" };\n\nexport default {\n  player,\n  width,\n};\n","import React from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { Typography } from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport { cyan, green, blueGrey, red } from \"@mui/material/colors\";\nimport Hand from \"../Hand\";\nimport { DBTurn, DBPlayer } from \"../../../../../store/types\";\nimport styles from \"./Player.styles\";\n\ninterface PlayerProps {\n  betHandler?: (id: number, event: Event, value: number) => void;\n  cardHandler?: (playerNo: number, handNo: number, cardNo: number) => void;\n  cardsToDiscard: number[];\n  hideHands: boolean;\n  isBlackJack: boolean;\n  player: DBPlayer;\n  playerNo: number;\n  turn: DBTurn;\n}\n\nconst Player: React.FC<PlayerProps> = (props: PlayerProps) => {\n  // get vars from props\n  const {\n    betHandler,\n    cardHandler,\n    cardsToDiscard,\n    hideHands,\n    isBlackJack,\n    player,\n    playerNo,\n    turn,\n  } = props;\n  // set booleans\n  const isPlayerTurn: boolean = !!turn && playerNo === turn.player;\n  const isMultiHand: boolean = player.hands.length > 1;\n  const showSlider: boolean =\n    !!hideHands && isBlackJack && player.id !== 0 && !player.isBot;\n  // set slider variables\n  const minBet: number = Math.max(Math.min(player.money, 5), 0);\n  const maxBet: number = Math.max(Math.min(player.money, 100), 10);\n  const step = 5;\n  const onSliderChange = React.useCallback(\n    (event: Event, value: number | number[]): void => {\n      betHandler && betHandler(player.id, event, value as number);\n    },\n    [betHandler, player.id]\n  );\n  // set colors\n  let color: React.CSSProperties = isPlayerTurn\n    ? { background: cyan[200] }\n    : {};\n  const weight: React.CSSProperties = isPlayerTurn\n    ? { fontWeight: \"bold\" }\n    : { fontWeight: \"normal\" };\n  if (player.status === \"win\") {\n    color = { background: green[300] };\n  }\n  if (player.status === \"draw\") {\n    color = { background: blueGrey[300] };\n  }\n  if (player.status === \"lose\") {\n    color = { background: red[300] };\n  }\n\n  return (\n    <Card style={{ ...styles.player, ...color }}>\n      <Typography variant=\"h4\" style={{ ...weight }}>\n        {`${player.name}: $${player.money}`}\n      </Typography>\n      {showSlider && (\n        <Slider\n          max={maxBet}\n          min={minBet}\n          onChange={onSliderChange}\n          step={step}\n          style={styles.width}\n          value={player.bet}\n        />\n      )}\n      {isBlackJack && player.id !== 0 && (\n        <Typography variant=\"h5\">{`Bet: $${player.bet}`}</Typography>\n      )}\n      {player.hands.map((hand, i) => {\n        const isHandTurn: boolean = !!turn && turn.hand === i;\n        return (\n          <div key={`hand${i}`}>\n            {!hideHands && (\n              <Hand\n                cardHandler={cardHandler}\n                cardsToDiscard={cardsToDiscard}\n                hand={hand}\n                handNo={i}\n                isBlackJack={isBlackJack}\n                isHandTurn={isHandTurn}\n                isMultiHand={isMultiHand}\n                isPlayerTurn={isPlayerTurn}\n                playerNo={playerNo}\n              />\n            )}\n          </div>\n        );\n      })}\n    </Card>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport Player from \"./player/Player\";\nimport { DBPlayer, DBTurn } from \"../../../../store/types\";\n// Parents: GameTable\n\ninterface BoardProps {\n  betHandler?: (id: number, event: Event, value: number) => void;\n  cardHandler?: (playerNo: number, handNo: number, cardNo: number) => void;\n  cardsToDiscard: number[];\n  hideHands: boolean;\n  isBlackJack: boolean;\n  players: DBPlayer[];\n  turn: DBTurn;\n}\n\nconst Board: React.FC<BoardProps> = (props: BoardProps) => {\n  const {\n    betHandler,\n    cardHandler,\n    cardsToDiscard,\n    hideHands,\n    isBlackJack,\n    players,\n    turn,\n  } = props;\n\n  return (\n    <>\n      {players.map((player, i) => (\n        <Player\n          key={`player${i}`}\n          betHandler={betHandler}\n          cardHandler={cardHandler}\n          cardsToDiscard={cardsToDiscard}\n          hideHands={hideHands}\n          isBlackJack={isBlackJack}\n          player={player}\n          playerNo={i}\n          turn={turn}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport MuiButton from \"@mui/material/Button\";\nimport { PropTypes } from \"@mui/material/\";\n\nconst buttonStyle: React.CSSProperties = { margin: 12 };\nconst color: PropTypes.Color = \"primary\";\n\nexport interface ButtonProps {\n  onClick: (name: string) => void;\n  name: string;\n}\n\nconst Button: React.FC<ButtonProps> = React.memo(\n  ({ onClick, name }: ButtonProps) => (\n    <MuiButton\n      color={color}\n      onClick={(): void => onClick(name)}\n      style={buttonStyle}\n      variant=\"contained\"\n    >\n      {name}\n    </MuiButton>\n  )\n);\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nexport interface ButtonGroupProps {\n  gameFunctions: string[];\n  onClick: (name: string) => void;\n}\n\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({\n  gameFunctions,\n  onClick,\n}: ButtonGroupProps) => (\n  <div>\n    {gameFunctions.map((key) => (\n      <Button key={key} onClick={onClick} name={key} />\n    ))}\n  </div>\n);\n\nexport default ButtonGroup;\n","import React from \"react\";\nimport Board from \"./board/Board\";\nimport ButtonGroup from \"./button-group/ButtonGroup\";\nimport { DBPlayer, DBTurn } from \"../../../store/types\";\n\ninterface GameTableProps {\n  betHandler?: (id: number, event: Event, value: number) => void;\n  cardClickHandler?: (playerNo: number, handNo: number, cardNo: number) => void;\n  cardsToDiscard?: number[];\n  gameFunctions?: string[];\n  gameOver?: boolean;\n  hideHands?: boolean;\n  isBlackJack?: boolean;\n  onClick: (name: string) => void;\n  players: DBPlayer[];\n  turn: DBTurn;\n}\n\n/* GameTable ->  Board -> Player -> Hand -> Card\n *          |->  Button Group  ->  Button        */\nconst GameTable = (props: GameTableProps): React.ReactElement => {\n  const {\n    betHandler,\n    cardClickHandler,\n    cardsToDiscard = [],\n    gameFunctions = [],\n    gameOver = false,\n    hideHands = false,\n    isBlackJack = true,\n    players,\n    turn,\n    onClick,\n  } = props;\n\n  // move game buttons to make turn more obvious and support mobile\n  const played: DBPlayer[] = React.useMemo(\n    () => players.slice(0, turn.player + 1),\n    [players, turn.player]\n  );\n  const future: DBPlayer[] = React.useMemo(\n    () => players.slice(turn.player + 1),\n    [players, turn.player]\n  );\n  const playersToDisplay: DBPlayer[] = React.useMemo(\n    () =>\n      !hideHands && gameOver === false\n        ? players.slice(turn.player, turn.player + 1)\n        : players,\n    [hideHands, gameOver, players, turn.player]\n  );\n\n  return isBlackJack && !hideHands ? (\n    <>\n      <Board\n        players={played}\n        betHandler={betHandler}\n        cardHandler={cardClickHandler}\n        cardsToDiscard={cardsToDiscard}\n        hideHands={hideHands}\n        isBlackJack={isBlackJack}\n        turn={turn}\n      />\n      <ButtonGroup gameFunctions={gameFunctions} onClick={onClick} />\n      <Board\n        players={future}\n        betHandler={betHandler}\n        cardHandler={cardClickHandler}\n        cardsToDiscard={cardsToDiscard}\n        hideHands={hideHands}\n        isBlackJack={isBlackJack}\n        turn={{ player: -1, hand: -1 }}\n      />\n    </>\n  ) : (\n    <>\n      <Board\n        players={playersToDisplay}\n        betHandler={betHandler}\n        cardHandler={cardClickHandler}\n        cardsToDiscard={cardsToDiscard}\n        hideHands={hideHands}\n        isBlackJack={isBlackJack}\n        turn={turn}\n      />\n      <ButtonGroup gameFunctions={gameFunctions} onClick={onClick} />\n    </>\n  );\n};\n\nexport default GameTable;\n","import React from \"react\";\n\ntype OpenStateHook = [boolean, () => void, () => void];\n\nconst useOpenState = (defaultVal = false): OpenStateHook => {\n  const [isOpen, setIsOpen] = React.useState(defaultVal);\n\n  const handleOpen = (): void => {\n    setIsOpen(true);\n  };\n  const handleClose = (): void => {\n    setIsOpen(false);\n  };\n\n  return [isOpen, handleOpen, handleClose];\n};\n\nexport default useOpenState;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","const deepPurple = {\n  50: '#ede7f6',\n  100: '#d1c4e9',\n  200: '#b39ddb',\n  300: '#9575cd',\n  400: '#7e57c2',\n  500: '#673ab7',\n  600: '#5e35b1',\n  700: '#512da8',\n  800: '#4527a0',\n  900: '#311b92',\n  A100: '#b388ff',\n  A200: '#7c4dff',\n  A400: '#651fff',\n  A700: '#6200ea'\n};\nexport default deepPurple;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["props","useOpenState","isOpen","handleOpen","handleClose","buttonText","title","children","color","onClick","variant","onClose","open","maxWidth","fullWidth","weighHand","hand","weight","soft","forEach","card","cardWeight","React","Typography","text","style","otherProps","stl","textAlign","paddingLeft","paddingRight","backgroundColor","TableCell","size","tableCellStyle","padding","name","data","TableRow","map","i","cards","cellStyle","width","Table","TableHead","colSpan","TableBody","rowSpan","c","obj","h","green","d","teal","s","red","p","orange","ds","deepPurple","hardTtl","softTtl","pairs","className","gutterBottom","InfoPopup","useSelector","state","blackjack","players","turn","gameFunctions","hideHands","hasFunctions","dispatch","useDispatch","getGameFunctions","newGameFunctions","GameFunctions","push","length","updateGameFunctions","updateHasFunctions","split","player","id","hands","splitHand","stay","lastHand","stayHand","double","doubleHand","hit","hitHand","dealHands","tempPlayers","Deck","then","asyncForEach","num","newHand","catch","console","error","newGame","setNewGame","finishBetting","updateHideHands","payoutPlayer","status","money","payout","hitDealer","filter","playDealer","dealer","dWeight","dLength","playerStats","house","win","ps","bet","mul","Math","floor","loss","banking","cardClickHandler","playerNo","handNo","cardNo","log","betHandler","event","updateBet","isBot","n","x","y","playBot","includes","checkUpdate","type","cardFace","borderRadius","cursor","display","fontWeight","height","margin","cardTitle","suit","marginTop","Card","dropped","cardHandler","handleClick","cardColor","styles","role","boldStyle","normalStyle","cardsToDiscard","isBlackJack","isHandTurn","isMultiHand","isPlayerTurn","purple","handWeight","minWidth","showSlider","minBet","max","min","maxBet","onSliderChange","value","background","cyan","blueGrey","Slider","onChange","step","buttonStyle","key","gameOver","played","slice","future","playersToDisplay","defaultVal","setIsOpen","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","overridesResolver","root","tablelvl2","defaultComponent","inProps","ref","useThemeProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","Tablelvl2Context","as","clsx","A100","A200","A400","A700","_objectWithoutProperties","source","excluded","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}