import{J as $,a1 as z,a7 as V,r as P,j as n,W as q,$ as X,Q as Z,Y as aa,V as ea,K as ta}from"./index-2cf40ff9.js";import{t as C,G as sa,D as B,a as na}from"./Deck-b654449c.js";import{z as N,T as m}from"./MenuItem-76281072.js";import{I as oa}from"./InfoPopup-656e2e08.js";import{c as G,b as A,T as L,a as O}from"./TableRow-b0654333.js";import{T as M}from"./TableHead-d1b5c536.js";import"./blueGrey-a72a8df5.js";import"./CardContent-fc4f8479.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./useOpenState-c1c8c4c9.js";import"./DialogActions-cd4a7d1b.js";var y=(a=>(a.NEW_GAME="New Game",a.FINISH_BETTING="Finish Betting",a.STAY="Stay",a.HIT="Hit",a.DOUBLE="Double",a.SPLIT="Split",a))(y||{});const J=()=>({gameFunctions:["Finish Betting"],hideHands:!0}),W=$({key:"blackjackAtom",default:JSON.parse(localStorage.getItem("blackjack-atom")||"null")||J(),effects:[({onSet:a})=>{a(t=>{localStorage.setItem("blackjack-atom",JSON.stringify(t))})}]}),ra=z({key:"blackjackState",get:({get:a})=>{const t=a(W),e=a(N),s=a(C);return{bj:t,players:e,turn:s}},set:({set:a},t)=>{if(!(t instanceof V)){const{bj:e,turn:s,players:o}=t;a(W,e),a(C,s),a(N,o)}}});function g(a=[]){let t=0,e=!1;return a.forEach(s=>{const o=s.weight||0;o===14?t<=10?(t+=11,e=!0):t+=1:o>10?t+=10:t+=o,t>21&&e&&(t-=10,e=!1)}),{weight:t,soft:e}}const ca=async(a,t,e,s,o,j)=>{if(!a)return;const l=a.weight||0,{soft:d}=a,{weight:r}=g([t.cards[0]]),{weight:p}=g([a.cards[0]]),{weight:E}=g([a.cards[1]]);l<22?p===E?p===2||p===3||p===7?r<=7?await o():await s():p===4?r===5||r===6?await o():await s():p===5?r<=9?await e():await s():p===6?r<=6?await o():await s():p===9?r===7||r>=10?j():await o():p===8||p===11?await o():j():l<20&&d?l===13||l===14?r===5||r===6?await e():await s():l===15||l===16?r>=4&&r<=6?await e():await s():l===17?r>=3&&r<=6?await e():await s():l===18?r>=2&&r<=6?await e():r===7||r===8?j():await s():l===19&&(r===6?await e():j()):l<17&&!d?l>=5&&l<=8?await s():l===9?r>=3&&r<=6?await e():await s():l===10?r>=2&&r<=9?await e():await s():l===11?await e():l===12?r>=4&&r<=6?j():await s():l>=13&&l<=16&&(r>=2&&r<=6?j():await s()):j():j()},v=0,ia=a=>{const t=a.filter(d=>d.id===v)[0],e=t.hands[0].weight||0,s=t.hands[0].cards.length,o={house:0,payout:0,status:""},j=(d,r,p=1)=>{d.house-=Math.floor(p*r),d.payout=Math.floor(p*r),d.status="win"},l=(d,r)=>{d.house+=r,d.payout=-r,d.status="lose"};return a.map(d=>{const{id:r,bet:p}=d;return r===v?(o.house>0?o.status="win":o.house<0?o.status="lose":o.status="push",{...d,status:o.status,money:d.money+o.house}):(d.hands.forEach(E=>{const{weight:T=0,cards:_}=E;e===21&&s===2?l(o,p):T===21&&_.length===2?j(o,p,6/5):T<=21&&(T>e||e>21)?j(o,p):T<=21&&T===e?(o.payout=0,o.status="push"):l(o,p)}),{...d,status:o.status,money:d.money+o.payout})})},D=a=>{if(!a)return[];const t=[y.STAY];if((a.weight||0)<21&&(t.push(y.HIT),a.cards.length===2)){t.push(y.DOUBLE);const{weight:s}=g([a.cards[0]]),{weight:o}=g([a.cards[1]]);s===o&&t.push(y.SPLIT)}return t},la=P.memo(()=>n.jsxs(n.Fragment,{children:[n.jsx(m,{variant:"h5",children:"Objective:"}),n.jsx(m,{children:"Get as close to 21 as you can, without going over. Each card is worth it's number, J/Q/K are worth 10, and an Ace is worth 11 unless you go over 21, then it is worth 1."}),n.jsx("br",{}),n.jsx(m,{variant:"h5",children:"Blackjack:"}),n.jsx(m,{children:"Delt an Ace and a 10/J/Q/K, this casino pays 3:2, but Vegas casinos do 6:5."}),n.jsx("br",{}),n.jsx(m,{variant:"h5",children:"Hit:"}),n.jsx(m,{children:"Get an extra card which adds to your total."}),n.jsx("br",{}),n.jsx(m,{variant:"h5",children:"Stay:"}),n.jsx(m,{children:"Move to the next player."}),n.jsx("br",{}),n.jsx(m,{variant:"h5",children:"Double Down:"}),n.jsx(m,{children:"This option is available with a two card hand; before another card has been drawn double your bet and receive one (and only one) additional card to your hand. Play then moves to the next player."}),n.jsx("br",{}),n.jsx(m,{variant:"h5",children:"Splitting Pairs:"}),n.jsx(m,{children:"When you are dealt a pair of cards of the same rank, you are allowed to split into two separate hands and play them independently. You will match your bet for the second hand. A double after a split is ok"}),n.jsx("br",{}),n.jsx(m,{variant:"h5",children:"Resplitting:"}),n.jsx(m,{children:"When you get additional pairs in the first two cards of a hand you can resplit. Typically a player is allowed to split up to 3 times (delt 4 of a kind)."}),n.jsx("br",{}),n.jsx(m,{variant:"h5",children:"Splitting Aces:"}),n.jsx(m,{children:"Player is limited to drawing only one additional card on each Ace. If you draw a ten-valued card on one of your split Aces, the hand is not considered a Blackjack (it is treated as a normal 21). You can re-split Aces."}),n.jsx("br",{}),n.jsx(m,{variant:"h5",children:"Other Rules:"}),n.jsxs("ul",{children:[n.jsx(m,{children:n.jsx("li",{children:"Dealer hits on 16 or less and soft 17"})}),n.jsx(m,{children:n.jsx("li",{children:"Minimum bet is $5"})})]}),n.jsx(m,{variant:"h5",children:"AI Algorithm:"}),n.jsxs("ul",{children:[n.jsx(m,{children:n.jsx("li",{children:"House Rules: 6 decks, H17, DAS, No Surrender, Peek"})}),n.jsx(m,{children:n.jsx("li",{children:"Estimated casino edge for these rules: 0.66%"})})]})]})),f=P.memo(a=>{const{color:t,text:e,style:s,...o}=a,j={...s,textAlign:"center",paddingLeft:0,paddingRight:0,backgroundColor:t};return n.jsx(G,{size:"small",style:j,...o,children:e})}),da={textAlign:"center",padding:0},ha=({name:a,data:t})=>n.jsxs(A,{children:[n.jsx(G,{style:da,children:a}),t.map((e,s)=>n.jsx(f,{...e},s))]}),ma=["2","3","4","5","6","7","8","9","T","A"],pa={width:60},R=({title:a,data:t})=>n.jsxs(L,{children:[n.jsx(M,{children:n.jsx(A,{children:n.jsx(G,{colSpan:11,children:a})})}),n.jsxs(O,{children:[n.jsxs(A,{children:[n.jsx(f,{rowSpan:2,style:pa,text:"Hand"}),n.jsx(f,{colSpan:10,text:"Dealer"})]}),n.jsx(A,{children:ma.map(e=>n.jsx(f,{text:e},e))}),t.map(e=>n.jsx(ha,{name:e.name,data:e.data},e.name))]})]}),xa=P.memo(()=>{const a={color:q[200],text:"H"},t={color:X[200],text:"D"},e={color:Z[200],text:"S"},s={color:aa[200],text:"P"},o={color:ea[200],text:"DS"},j=[{name:"Hard 5",data:[a,a,a,a,a,a,a,a,a,a]},{name:"Hard 6",data:[a,a,a,a,a,a,a,a,a,a]},{name:"Hard 7",data:[a,a,a,a,a,a,a,a,a,a]},{name:"Hard 8",data:[a,a,a,a,a,a,a,a,a,a]},{name:"Hard 9",data:[a,t,t,t,t,a,a,a,a,a]},{name:"Hard 10",data:[t,t,t,t,t,t,t,t,a,a]},{name:"Hard 11",data:[t,t,t,t,t,t,t,t,t,t]},{name:"Hard 12",data:[a,a,e,e,e,a,a,a,a,a]},{name:"Hard 13",data:[e,e,e,e,e,a,a,a,a,a]},{name:"Hard 14",data:[e,e,e,e,e,a,a,a,a,a]},{name:"Hard 15",data:[e,e,e,e,e,a,a,a,a,a]},{name:"Hard 16",data:[e,e,e,e,e,a,a,a,a,a]},{name:"Hard 17",data:[e,e,e,e,e,e,e,e,e,e]},{name:"Hard 18+",data:[e,e,e,e,e,e,e,e,e,e]}],l=[{name:"Ace + 2",data:[a,a,a,t,t,a,a,a,a,a]},{name:"Ace + 3",data:[a,a,a,t,t,a,a,a,a,a]},{name:"Ace + 4",data:[a,a,t,t,t,a,a,a,a,a]},{name:"Ace + 5",data:[a,a,t,t,t,a,a,a,a,a]},{name:"Ace + 6",data:[a,t,t,t,t,a,a,a,a,a]},{name:"Ace + 7",data:[o,o,o,o,o,e,e,a,a,a]},{name:"Ace + 8",data:[e,e,e,e,o,e,e,e,e,e]},{name:"Ace + 9",data:[e,e,e,e,e,e,e,e,e,e]}],d=[{name:"(2,2)",data:[s,s,s,s,s,s,a,a,a,a]},{name:"(3,3)",data:[s,s,s,s,s,s,a,a,a,a]},{name:"(4,4)",data:[a,a,a,s,s,a,a,a,a,a]},{name:"(5,5)",data:[t,t,t,t,t,t,t,t,a,a]},{name:"(6,6)",data:[s,s,s,s,s,a,a,a,a,a]},{name:"(7,7)",data:[s,s,s,s,s,s,a,a,a,a]},{name:"(8,8)",data:[s,s,s,s,s,s,s,s,s,s]},{name:"(9,9)",data:[s,s,s,s,s,e,s,s,e,e]},{name:"(T,T)",data:[e,e,e,e,e,e,e,e,e,e]},{name:"(A,A)",data:[s,s,s,s,s,s,s,s,s,s]}];return n.jsxs(n.Fragment,{children:[n.jsx(R,{data:j,title:"Hard Totals"}),n.jsx(R,{data:l,title:"Soft Totals"}),n.jsx(R,{data:d,title:"Pairs"}),n.jsxs(L,{children:[n.jsx(M,{children:n.jsx(A,{children:n.jsx(G,{colSpan:11,children:"Key"})})}),n.jsxs(O,{children:[n.jsxs(A,{children:[n.jsx(f,{...a}),n.jsx(f,{colSpan:2,text:"= Hit"}),n.jsx(f,{...e}),n.jsx(f,{colSpan:3,text:"= Stand"}),n.jsx(f,{...s}),n.jsx(f,{colSpan:3,text:"= Split"})]}),n.jsxs(A,{children:[n.jsx(f,{...t}),n.jsx(f,{colSpan:10,text:"= Double (Hit if not allowed)"})]}),n.jsxs(A,{children:[n.jsx(f,{...o}),n.jsx(f,{colSpan:10,text:"= Double (Stand if not allowed)"})]})]})]})]})}),wa=P.memo(()=>n.jsxs("div",{className:"flex-container",children:[n.jsx(m,{variant:"h2",component:"h1",gutterBottom:!0,children:"Blackjack (21)"}),n.jsxs(oa,{title:"Rules",children:[n.jsx(la,{}),n.jsx(xa,{})]})]})),ja=()=>{const[{turn:a,players:t,bj:{gameFunctions:e,hideHands:s}},o]=ta(ra),j=async()=>{const{hands:c}=t[a.player],i=await B.deal(2),h=c[a.hand],u={cards:[h.cards[0]]},x={cards:[h.cards[1]]};u.cards.push(i[0]),x.cards.push(i[1]),Object.assign(u,g(u.cards)),Object.assign(x,g(x.cards));const b=c.map((k,S)=>S!==a.hand?k:x);b.splice(a.hand,0,u);const w=[...t];w[a.player]={...t[a.player],hands:b};let H=[];w[a.player].isBot||(H=D(w[a.player].hands[a.hand])),o({turn:a,players:w,bj:{gameFunctions:H,hideHands:s}})},l=()=>{const c=t[a.player].hands.length-1,i=a.hand<c?{...a,hand:a.hand+1}:{player:a.player+1,hand:0};let h=[];t[i.player].isBot||(h=D(t[i.player].hands[i.hand])),o({turn:i,players:t,bj:{gameFunctions:h,hideHands:s}})},d=async()=>{const{hands:c}=t[a.player],i=await B.deal(1),h=[...c[a.hand].cards,...i],{weight:u,soft:x}=g(h),b=c.map((I,F)=>F!==a.hand?I:{cards:h,weight:u,soft:x}),w=[...t];w[a.player]={...t[a.player],hands:b,bet:t[a.player].bet*2};const H=t[a.player].hands.length-1,k=a.hand<H?{...a,hand:a.hand+1}:{player:a.player+1,hand:0};let S=[];w[k.player].isBot||(S=D(w[k.player].hands[k.hand])),o({turn:k,players:w,bj:{gameFunctions:S,hideHands:s}})},r=async()=>{const{hands:c}=t[a.player],i=await B.deal(1),h=[...c[a.hand].cards,...i],{weight:u,soft:x}=g(h),b=c.map((k,S)=>S!==a.hand?k:{cards:h,weight:u,soft:x}),w=[...t];w[a.player]={...t[a.player],hands:b};let H=[];w[a.player].isBot||(H=D(w[a.player].hands[a.hand])),o({turn:a,players:w,bj:{gameFunctions:H,hideHands:s}})},p=()=>{o({bj:J(),players:t.map(c=>({...c,status:"",hands:[],bet:5})),turn:{player:0,hand:0}})},E=async()=>{const c=[];await B.shuffle().then(async()=>{await na(t,async h=>{const x=[...await B.deal(h.id!==v?2:1)];x.sort(B.rankSort);const{weight:b,soft:w}=g(x);c.push({...h,hands:[{cards:x,weight:b,soft:w}]})})});let i=[];c[a.player].isBot||(i=D(c[a.player].hands[a.hand])),o({turn:a,players:c,bj:{gameFunctions:i,hideHands:!1}})},T=async()=>{const i=t.filter(x=>x.id===v)[0].hands[0].cards,{weight:h,soft:u}=g(i);if(h<=16||h===17&&u){const{hands:x}=t.filter(F=>F.id===v)[0],b=await B.deal(1),w=[...x[a.hand].cards,...b],{weight:H,soft:k}=g(w),S=x.map((F,Q)=>Q!==a.hand?F:{cards:w,weight:H,soft:k}),I=[...t];I[t.length-1]={...t[t.length-1],hands:S},o({bj:{gameFunctions:e,hideHands:s},turn:a,players:I})}else{const x=ia(t);o({turn:a,players:x,bj:{gameFunctions:[y.NEW_GAME],hideHands:s}})}},_=async()=>{const c=t[a.player];if(!(!c.isBot||s||!c))if(c.id!==v){const i=t[a.player].hands[a.hand],h=t[t.length-1].hands[0];await ca(i,h,d,r,j,l)}else e.includes(y.NEW_GAME)||await T()},Y=(c,i,h)=>{console.log(t[c].hands[i].cards[h])},U=(c,i,h)=>{o({bj:{gameFunctions:e,hideHands:s},turn:a,players:t.map(u=>u.id===c?{...u,bet:h}:u)})},K=c=>{switch(c){case y.NEW_GAME:p();break;case y.FINISH_BETTING:E().catch(i=>console.log(i));break;case y.STAY:l();break;case y.HIT:r().catch(i=>console.log(i));break;case y.DOUBLE:d().catch(i=>console.log(i));break;case y.SPLIT:j().catch(i=>console.log(i));break;default:console.error("Unknown Game Function: ",c)}};return _().catch(c=>console.log(c)),n.jsxs(n.Fragment,{children:[n.jsx(wa,{}),n.jsx(sa,{betHandler:U,cardClickHandler:Y,gameFunctions:e,onClick:K,hideHands:s,players:t,turn:a})]})},va=ja;export{va as default};
//# sourceMappingURL=index-3a44fce5.js.map
