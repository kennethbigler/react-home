{"version":3,"file":"FormControlLabel-86d2cd4f.js","sources":["../../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../../node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  },\n  ...(ownerState.labelPlacement === 'start' && {\n    flexDirection: 'row-reverse',\n    marginLeft: 16,\n    // used for row presentation of radio/checkbox\n    marginRight: -11\n  }),\n  ...(ownerState.labelPlacement === 'top' && {\n    flexDirection: 'column-reverse',\n    marginLeft: 16\n  }),\n  ...(ownerState.labelPlacement === 'bottom' && {\n    flexDirection: 'column',\n    marginLeft: 16\n  }),\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    });\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label, required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"],"names":["getFormControlLabelUtilityClasses","slot","generateUtilityClass","formControlLabelClasses","generateUtilityClasses","formControlLabelClasses$1","useUtilityClasses","ownerState","classes","disabled","labelPlacement","error","required","slots","capitalize","composeClasses","FormControlLabelRoot","styled","props","styles","theme","AsteriskComponent","FormControlLabel","React.forwardRef","inProps","ref","_ref","_slotProps$typography","useThemeProps","checked","className","componentsProps","control","disabledProp","disableTypography","inputRef","labelProp","name","onChange","requiredProp","slotProps","value","other","muiFormControl","useFormControl","controlProps","key","fcs","formControlState","typographySlotProps","label","Typography","_jsx","clsx","_jsxs","React.cloneElement","FormControlLabel$1"],"mappings":"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","x_google_ignoreList":[0,1]}