{"version":3,"file":"index-BQLhiLSR.js","sources":["../../src/jotai/spades-atom.ts","../../src/components/games/spades/control-bar/AddBidPlayer.tsx","../../src/components/games/spades/control-bar/AddBid.tsx","../../src/components/games/spades/control-bar/AddPenalty.tsx","../../src/components/games/spades/control-bar/AddScorePlayer.tsx","../../src/components/games/spades/control-bar/AddScore.tsx","../../src/components/games/spades/control-bar/ControlBar.tsx","../../src/components/games/spades/ScoreTable.tsx","../../src/components/games/spades/helpers.ts","../../src/components/games/spades/useSpades.ts","../../src/components/games/spades/Header.tsx","../../src/components/games/spades/Spades.tsx"],"sourcesContent":["import { atomWithStorage } from \"jotai/utils\";\n\nexport const MIN_BID = 0;\nexport const MAX_BID = 13;\n\ninterface Bid {\n  bid: number;\n  blind: boolean;\n  train: boolean;\n}\nexport type Bids = [Bid, Bid, Bid, Bid];\n\nexport interface ScoreRow {\n  /** initial of who went first */\n  start: string;\n  /** Bids converted to a string */\n  bid: string;\n  /** team 1's score */\n  score1?: number;\n  /** team 1's bags */\n  bags1?: number;\n  /** team 1's lost point modifiers */\n  mod1?: string;\n  /** team 2's score */\n  score2?: number;\n  /** team 2's bags */\n  bags2?: number;\n  /** team 2's lost point modifiers */\n  mod2?: string;\n}\n\ninterface SpadesState {\n  /** score table, updates on +Score & +Bid, resets over games */\n  data: ScoreRow[];\n  /** 0, 1, 2, 3, updates on +Score, persists over games */\n  first: number;\n  /** recent bids */\n  lastBid: Bids;\n  /** over bid tracker over time */\n  overBids: [number, number, number, number];\n  /** team 1 wins */\n  wins1: number;\n  /** team 2 wins */\n  wins2: number;\n}\n\nexport const defaultBid: Bid = { bid: 3, blind: false, train: false };\nconst initialState: SpadesState = {\n  data: [],\n  first: 0,\n  lastBid: [defaultBid, defaultBid, defaultBid, defaultBid],\n  overBids: [0, 0, 0, 0],\n  wins1: 0,\n  wins2: 0,\n};\n\nconst spadesAtom = atomWithStorage(\"spadesAtom\", initialState);\n\nexport default spadesAtom;\n","import * as React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Switch from \"@mui/material/Switch\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Add from \"@mui/icons-material/Add\";\nimport Remove from \"@mui/icons-material/Remove\";\nimport { MAX_BID, MIN_BID } from \"../../../../jotai/spades-atom\";\n\ninterface AddBidPlayerProps {\n  id: string;\n  blindTrade: number;\n  canTrain?: boolean;\n  bid: number;\n  blind: boolean;\n  train: boolean;\n  onBid: (bid: number, blind: boolean, train: boolean) => void;\n}\n\nconst AddBidPlayer = ({\n  id,\n  blindTrade,\n  canTrain,\n  bid,\n  blind,\n  train,\n  onBid,\n}: AddBidPlayerProps) => {\n  const decrBid = () => onBid(Math.max(bid - 1, MIN_BID), false, false);\n  const incrBid = () => onBid(Math.min(bid + 1, MAX_BID), false, false);\n\n  const handleBlind = (\n    _e: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean,\n  ) => onBid(bid, checked, false);\n\n  const handleTrain = (\n    _e: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean,\n  ) => onBid(bid, false, checked);\n\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell align=\"center\">\n        <IconButton onClick={decrBid} disabled={bid <= MIN_BID}>\n          <Remove />\n        </IconButton>\n        {bid}\n        <IconButton onClick={incrBid} disabled={bid >= MAX_BID}>\n          <Add />\n        </IconButton>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Switch\n          checked={blind}\n          inputProps={{ \"aria-label\": `P${id} Blind Nil` }}\n          onChange={handleBlind}\n          size=\"small\"\n        />\n        {blindTrade || blind ? blindTrade : \"\"}\n      </TableCell>\n      <TableCell align=\"right\">\n        {canTrain ? (\n          <Switch\n            checked={train}\n            inputProps={{ \"aria-label\": `P${id} Trains` }}\n            onChange={handleTrain}\n            size=\"small\"\n          />\n        ) : null}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default AddBidPlayer;\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport InfoPopup from \"../../../common/info-popover/InfoPopup\";\nimport AddBidPlayer from \"./AddBidPlayer\";\nimport { Bids, defaultBid } from \"../../../../jotai/spades-atom\";\n\ninterface AddBidProps {\n  blindTrade: number;\n  first: number;\n  initials: string;\n  onBidSave: (bids: Bids) => void;\n}\n\nconst getBlindTrade = (blindTrade: number, n: number) =>\n  (blindTrade < 0 && (n === 0 || n === 2)) ||\n  (blindTrade > 0 && (n === 1 || n === 3))\n    ? Math.min(Math.abs(blindTrade), 3)\n    : 0;\n\nconst AddBid = ({ blindTrade, first, initials, onBidSave }: AddBidProps) => {\n  const [bids, setBids] = React.useState<Bids>([\n    defaultBid,\n    defaultBid,\n    defaultBid,\n    defaultBid,\n  ]);\n\n  const a = (first + 0) % 4;\n  const b = (first + 1) % 4;\n  const c = (first + 2) % 4;\n  const d = (first + 3) % 4;\n\n  const handleBid =\n    (n: number) => (bid: number, blind: boolean, train: boolean) => {\n      let newBid = { bid, blind, train };\n      if (blind) {\n        newBid = { bid: 0, blind, train: false };\n      } else if (train) {\n        let trainBid = 10;\n        switch (n) {\n          case a:\n            trainBid -= bids[c].bid;\n            break;\n          case b:\n            trainBid -= bids[d].bid;\n            break;\n          case c:\n            trainBid -= bids[a].bid;\n            break;\n          case d:\n          default:\n            trainBid -= bids[b].bid;\n        }\n        newBid = {\n          bid: trainBid,\n          blind: false,\n          train,\n        };\n      } else {\n        newBid = { bid, blind: false, train: false };\n      }\n      const newBids: Bids = [...bids];\n      newBids[n] = newBid;\n      setBids(newBids);\n    };\n\n  const handleSave = () => {\n    onBidSave(bids);\n    setBids([defaultBid, defaultBid, defaultBid, defaultBid]);\n  };\n\n  const bags = bids.reduce((acc, bid) => acc - bid.bid, 13);\n\n  return (\n    <InfoPopup title=\"+ Bid\" onSave={handleSave}>\n      <Table aria-label=\"Bid Table\" padding=\"none\">\n        <TableHead>\n          <TableRow>\n            <TableCell width={\"20%\"}>P</TableCell>\n            <TableCell width={\"40%\"} align=\"center\">\n              Bid ({bags} 💰)\n            </TableCell>\n            <TableCell width={\"20%\"} align=\"center\">\n              🦮\n            </TableCell>\n            <TableCell width={\"20%\"} align=\"center\">\n              🚂\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <AddBidPlayer\n            id={initials[a] + \" 🥇\"}\n            {...bids[a]}\n            onBid={handleBid(a)}\n            blindTrade={getBlindTrade(blindTrade, a)}\n          />\n          <AddBidPlayer\n            id={initials[b]}\n            {...bids[b]}\n            onBid={handleBid(b)}\n            blindTrade={getBlindTrade(blindTrade, b)}\n          />\n          <AddBidPlayer\n            canTrain={0 < bids[a].bid && bids[a].bid < 10}\n            id={initials[c]}\n            {...bids[c]}\n            blindTrade={getBlindTrade(blindTrade, c)}\n            onBid={handleBid(c)}\n          />\n          <AddBidPlayer\n            canTrain={0 < bids[b].bid && bids[b].bid < 10}\n            id={initials[d] + \" 🃏\"}\n            {...bids[d]}\n            blindTrade={getBlindTrade(blindTrade, d)}\n            onBid={handleBid(d)}\n          />\n        </TableBody>\n      </Table>\n    </InfoPopup>\n  );\n};\n\nexport default AddBid;\n","import Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid2\";\nimport InfoPopup from \"../../../common/info-popover/InfoPopup\";\n\ninterface AddPenaltyProps {\n  initials: string;\n  onPenalty: (team: number) => () => void;\n}\n\nconst AddPenalty = ({ initials, onPenalty }: AddPenaltyProps) => (\n  <InfoPopup title=\"Penalty\">\n    <Grid container spacing={2}>\n      <Grid size={6}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"error\"\n          onClick={onPenalty(0)}\n        >\n          Team {initials[0] + initials[2]}\n        </Button>\n      </Grid>\n      <Grid size={6}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"error\"\n          onClick={onPenalty(1)}\n        >\n          Team {initials[1] + initials[3]}\n        </Button>\n      </Grid>\n    </Grid>\n  </InfoPopup>\n);\n\nexport default AddPenalty;\n","import * as React from \"react\";\nimport Add from \"@mui/icons-material/Add\";\nimport Grid from \"@mui/material/Grid2\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Remove from \"@mui/icons-material/Remove\";\nimport Typography from \"@mui/material/Typography\";\nimport { MAX_BID, MIN_BID } from \"../../../../jotai/spades-atom\";\n\ninterface AddScorePlayerProps {\n  initial: string;\n  lastBid: number;\n  made: number;\n  setMade: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst AddScorePlayer = ({\n  initial,\n  lastBid,\n  made,\n  setMade,\n}: AddScorePlayerProps) => {\n  const decrMade = () => setMade(Math.max(made - 1, MIN_BID));\n  const incrMade = () => setMade(Math.min(made + 1, MAX_BID));\n\n  return (\n    <Grid size={6}>\n      <Typography>\n        {initial} Bid: {lastBid}\n      </Typography>\n      <div>\n        Made:\n        <IconButton onClick={decrMade} disabled={made <= MIN_BID}>\n          <Remove />\n        </IconButton>\n        {made}\n        <IconButton onClick={incrMade} disabled={made >= MAX_BID}>\n          <Add />\n        </IconButton>\n      </div>\n    </Grid>\n  );\n};\n\nexport default AddScorePlayer;\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid2\";\nimport Typography from \"@mui/material/Typography\";\nimport InfoPopup from \"../../../common/info-popover/InfoPopup\";\nimport { Bids } from \"../../../../jotai/spades-atom\";\nimport AddScorePlayer from \"./AddScorePlayer\";\n\ninterface AddScoreProps {\n  initials: string;\n  lastBid: Bids;\n  onScoreSave: (mades: [number, number, number, number]) => void;\n}\n\nconst AddScore = ({ initials, lastBid, onScoreSave }: AddScoreProps) => {\n  const [made0, setMade0] = React.useState(3);\n  const [made1, setMade1] = React.useState(3);\n  const [made2, setMade2] = React.useState(3);\n  const [made3, setMade3] = React.useState(3);\n\n  const total = made0 + made1 + made2 + made3;\n\n  const handleAddScore = () => {\n    onScoreSave([made0, made1, made2, made3]);\n    setMade0(3);\n    setMade1(3);\n    setMade2(3);\n    setMade3(3);\n  };\n\n  const handleSave = total === 13 ? handleAddScore : undefined;\n\n  return (\n    <InfoPopup title=\"+ Score\" onSave={handleSave}>\n      <Typography\n        color={total === 13 ? \"success\" : \"warning\"}\n        align=\"center\"\n        marginBottom={1}\n      >\n        {total !== 13 && \"⚠️\"} Tricks: {total}\n      </Typography>\n      <Grid container spacing={2}>\n        <AddScorePlayer\n          initial={initials[0]}\n          lastBid={lastBid[0].bid}\n          made={made0}\n          setMade={setMade0}\n        />\n        <AddScorePlayer\n          initial={initials[1]}\n          lastBid={lastBid[1].bid}\n          made={made1}\n          setMade={setMade1}\n        />\n        <AddScorePlayer\n          initial={initials[2]}\n          lastBid={lastBid[2].bid}\n          made={made2}\n          setMade={setMade2}\n        />\n        <AddScorePlayer\n          initial={initials[3]}\n          lastBid={lastBid[3].bid}\n          made={made3}\n          setMade={setMade3}\n        />\n      </Grid>\n    </InfoPopup>\n  );\n};\n\nexport default AddScore;\n","import { Bids } from \"../../../../jotai/spades-atom\";\nimport AddBid from \"./AddBid\";\nimport AddPenalty from \"./AddPenalty\";\nimport AddScore from \"./AddScore\";\n\ninterface ControlBarProps {\n  blindTrade: number;\n  first: number;\n  initials: string;\n  lastBid: Bids;\n  showPenalty: boolean;\n  onBidSave: (bids: Bids) => void;\n  onPenalty: (team: number) => () => void;\n  onScoreSave: (mades: [number, number, number, number]) => void;\n}\n\nconst ControlBar = ({\n  blindTrade,\n  first,\n  initials,\n  lastBid,\n  showPenalty,\n  onBidSave,\n  onPenalty,\n  onScoreSave,\n}: ControlBarProps) => (\n  <div className=\"flex-container\" style={{ margin: \"20px 0\" }}>\n    <AddBid\n      blindTrade={blindTrade}\n      first={first}\n      initials={initials}\n      onBidSave={onBidSave}\n    />\n    {showPenalty && <AddPenalty initials={initials} onPenalty={onPenalty} />}\n    <AddScore initials={initials} lastBid={lastBid} onScoreSave={onScoreSave} />\n  </div>\n);\n\nexport default ControlBar;\n","import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { ScoreRow } from \"../../../jotai/spades-atom\";\n\ninterface ScoreTableProps {\n  initials: string;\n  data: ScoreRow[];\n}\n\nconst getScoreText = (score?: number, comp?: number) => {\n  if (score === undefined || comp === undefined || score === 0) {\n    return \"\";\n  } else if (score > 0) {\n    return `${score >= 100 && score >= comp ? \"🎉 \" : \"\"}${score}`;\n  } else {\n    return `${score}0 + `;\n  }\n};\n\nconst ScoreTable = ({ initials, data }: ScoreTableProps) => (\n  <Table aria-label=\"Bid Table\">\n    <TableHead>\n      <TableRow>\n        <TableCell width={\"10%\"}>🥇</TableCell>\n        <TableCell>\n          Bid\n          <br />({initials[0] + initials[1] + initials[2] + initials[3]})\n        </TableCell>\n        <TableCell>{initials[0] + initials[2]}</TableCell>\n        <TableCell>{initials[1] + initials[3]}</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {data.map((s, i) => (\n        <TableRow key={i}>\n          <TableCell\n            padding={i === data.length - 1 ? \"none\" : undefined}\n            align=\"center\"\n          >\n            {s.start}\n            {i === data.length - 1 && (s.score1 ? \"🃏\" : \"🥇\")}\n          </TableCell>\n          <TableCell>{s.bid}</TableCell>\n          <TableCell>\n            {getScoreText(s.score1, s.score2)}\n            {s.bags1}\n            {s.mod1 && ` (${s.mod1})`}\n          </TableCell>\n          <TableCell>\n            {getScoreText(s.score2, s.score1)}\n            {s.bags2}\n            {s.mod2 && ` (${s.mod2})`}\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n);\n\nexport default ScoreTable;\n","import { Bids } from \"../../../jotai/spades-atom\";\n\ninterface ScoreData {\n  bid: number;\n  blind: boolean;\n  train: boolean;\n  made: number;\n}\n\n/** convert Bids to string for smaller storage */\nexport const bidsToString = (bids: Bids): string =>\n  bids.reduce((acc, b) => {\n    if (b.train) {\n      return acc + \"🚂\";\n    } else if (b.blind) {\n      return acc + \"🦮\";\n    } else if (b.bid === 0) {\n      return acc + \"🚫\";\n    } else if (b.bid >= 10) {\n      return acc + `,${b.bid},`;\n    } else {\n      return acc + b.bid.toString();\n    }\n  }, \"\");\n\n/** get and update score from Bids and made values */\nexport const getScore = (\n  p1: ScoreData,\n  p2: ScoreData,\n  score: number,\n  bags: number,\n): { score: number; bags: number; mod?: string } => {\n  let newScore = 0;\n  let newBags = 0;\n  let mod = \"\";\n\n  // double blind nil\n  if (p1.blind && p2.blind) {\n    if (p1.made === 0 && p2.made === 0) {\n      // win\n      newScore = 80;\n    } else {\n      // lose\n      newBags = p1.made + p2.made;\n      mod = \"🚫🚫\";\n    }\n    // double nil\n  } else if (p1.bid === 0 && p2.bid === 0) {\n    // 1 blind 1 normal\n    if (p1.blind || p2.blind) {\n      if (p1.made === 0 && p2.made === 0) {\n        // win\n        newScore = 60;\n      } else if ((p1.blind && p1.made === 0) || (p2.blind && p2.made === 0)) {\n        // blind win\n        newScore = 30;\n        newBags = p1.made + p2.made;\n        mod = \"🚫\";\n      } else if (p1.made === 0 || p2.made === 0) {\n        // normal win\n        newBags = p1.made + p2.made;\n        mod = \"🚫\";\n      } else {\n        // lose\n        newScore = -30;\n        newBags = p1.made + p2.made;\n        mod = \"🚫🚫\";\n      }\n      // 2 normal\n    } else if (p1.made === 0 && p2.made === 0) {\n      // win\n      newScore = 40;\n    } else if (p1.made === 0 || p2.made === 0) {\n      // half win\n      newBags = p1.made + p2.made;\n      mod = \"🚫\";\n    } else {\n      // lose\n      newScore = -20;\n      newBags = p1.made + p2.made;\n      mod = \"🚫🚫\";\n    }\n    // trains\n  } else if (p1.train || p2.train) {\n    if (p1.made + p2.made >= 10) {\n      // win\n      newScore = 20;\n      newBags = p1.made + p2.made - 10;\n    } else {\n      // lose\n      newScore = -20;\n      mod = \"🚂\";\n    }\n  } else {\n    // eval nils\n    if (p1.bid === 0) {\n      if (p1.made === 0) {\n        // win\n        newScore += p1.blind ? 20 : 10;\n      } else {\n        // lose\n        newScore -= 10;\n        newBags += p1.made;\n        mod = \"🚫\";\n      }\n    } else if (p2.bid === 0) {\n      if (p2.made === 0) {\n        // win\n        newScore += p2.blind ? 20 : 10;\n      } else {\n        // lose\n        newScore -= 10;\n        newBags += p2.made;\n        mod = \"🚫\";\n      }\n    }\n    // eval group score\n    const teamBid = p1.bid + p2.bid;\n    const teamMade = (p1.bid > 0 ? p1.made : 0) + (p2.bid > 0 ? p2.made : 0);\n    if (teamMade >= teamBid) {\n      // win\n      newScore += teamBid;\n      newBags += teamMade - teamBid;\n    } else {\n      // lose\n      newScore -= teamBid;\n      mod += \"🎰\";\n    }\n  }\n  // check for bag out\n  while (bags + newBags >= 10) {\n    newScore -= 9;\n    newBags -= 10;\n    mod += \"💰\";\n  }\n  // return\n  return { score: score + newScore, bags: bags + newBags, mod };\n};\n\n/** add the penalty then handle bag out if needed */\nexport const penaltyHelper = (s: number, b: number, m?: string) => {\n  // add bags\n  let bags = b + 3;\n  let mod = (m || \"\") + \"😈\";\n  let score = s;\n  // check for bag out\n  if (bags >= 10) {\n    score -= 9;\n    bags -= 10;\n    mod += \"💰\";\n  }\n  // return;\n  return { score, bags, mod };\n};\n","import { useAtom, useAtomValue } from \"jotai\";\nimport playerAtom from \"../../../jotai/player-atom\";\nimport spadesAtom, { Bids, defaultBid } from \"../../../jotai/spades-atom\";\nimport { bidsToString, getScore, penaltyHelper } from \"./helpers\";\n\nconst useSpades = () => {\n  const players = useAtomValue(playerAtom);\n  const [spades, setSpades] = useAtom(spadesAtom);\n\n  const { data, first, lastBid, overBids, wins1, wins2 } = spades;\n  const initials = players.reduce((a, p, i) => (i < 4 ? a + p.name[0] : a), \"\");\n\n  /** sets a new data entry with first and bid info of data, updates first */\n  const addBid = (bids: Bids) => {\n    // can't add bid if bid already exists, or if someone won\n    if (data[data.length - 1] && data[data.length - 1]?.score1 === undefined) {\n      return;\n    }\n    // convert bid to storage data format\n    const newData = [...data];\n    newData.push({ start: initials[first], bid: bidsToString(bids) });\n    // update first player and add data entry\n    setSpades({ ...spades, data: newData, lastBid: bids });\n  };\n\n  const addPenalty = (team: number) => () => {\n    let i = data.length - 1;\n    if (data[i]?.score1 === undefined) {\n      i -= 1;\n    }\n    if (team === 0) {\n      // verify data\n      const { score1, bags1, mod1 } = data[i] || {};\n      if (score1 === undefined || bags1 === undefined) {\n        return;\n      }\n      // add 3 bags\n      const { score, bags, mod } = penaltyHelper(score1, bags1, mod1);\n      // update data\n      const newData = [...data];\n      newData[i] = { ...data[i], score1: score, bags1: bags, mod1: mod };\n      setSpades({ ...spades, data: newData });\n    } else {\n      // verify data\n      const { score2, bags2, mod2 } = data[i] || {};\n      if (score2 === undefined || bags2 === undefined) {\n        return;\n      }\n      // add 3 bags\n      const { score, bags, mod } = penaltyHelper(score2, bags2, mod2);\n      // update data\n      const newData = [...data];\n      newData[i] = { ...data[i], score2: score, bags2: bags, mod2: mod };\n      setSpades({ ...spades, data: newData });\n    }\n  };\n\n  /** calculates and adds score1 and score2 finishing data entry */\n  const addScore = (mades: [number, number, number, number]) => {\n    // can't add scores if no bid exists\n    if (data[data.length - 1]?.score1 !== undefined) {\n      return;\n    }\n    // convert made tricks to scores\n    const newData = [...data];\n    const { score1, bags1, score2, bags2 } = data[data.length - 2] || {};\n    // calculate scores\n    const {\n      score: newScore1,\n      bags: newBags1,\n      mod: mod1,\n    } = getScore(\n      { ...lastBid[0], made: mades[0] },\n      { ...lastBid[2], made: mades[2] },\n      score1 || 0,\n      bags1 || 0,\n    );\n    const {\n      score: newScore2,\n      bags: newBags2,\n      mod: mod2,\n    } = getScore(\n      { ...lastBid[1], made: mades[1] },\n      { ...lastBid[3], made: mades[3] },\n      score2 || 0,\n      bags2 || 0,\n    );\n    // update scores in data entry\n    newData[data.length - 1] = {\n      ...data[data.length - 1],\n      score1: newScore1,\n      bags1: newBags1,\n      mod1,\n      score2: newScore2,\n      bags2: newBags2,\n      mod2,\n    };\n    // underbidding tracker algorithm\n    const newOverBids: [number, number, number, number] = [0, 0, 0, 0];\n    lastBid.forEach((bid, i) => {\n      // don't count if 2nd partner was nil\n      if (\n        (i === 0 && lastBid[2].bid === 0) ||\n        (i === 1 && lastBid[3].bid === 0)\n      ) {\n        return;\n      }\n      // add the overbid or bags, whatever is lower\n      newOverBids[i] += Math.min(\n        mades[i] - bid.bid, // if overbid is lower, partner got bags\n        i === 0 || i === 2 ? newBags1 || 0 : newBags2 || 0, // if bags is lower, player was saving partner\n      );\n    });\n    // update state\n    setSpades({\n      ...spades,\n      data: newData,\n      first: (first + 1) % 4,\n      lastBid: [defaultBid, defaultBid, defaultBid, defaultBid],\n      overBids: newOverBids,\n    });\n  };\n\n  const newGame = () => {\n    const { score1, bags1 } = data[data.length - 1];\n    const { score2, bags2 } = data[data.length - 1];\n    const is1Winner =\n      (score1 === score2 && (bags1 || 0) > (bags2 || 0)) ||\n      (score1 || 0) > (score2 || 0);\n    setSpades({\n      ...spades,\n      data: [],\n      lastBid: [defaultBid, defaultBid, defaultBid, defaultBid],\n      wins1: wins1 + (is1Winner ? 1 : 0),\n      wins2: wins2 + (is1Winner ? 0 : 1),\n    });\n  };\n\n  return {\n    // data\n    data,\n    first,\n    initials,\n    lastBid,\n    overBids,\n    wins1,\n    wins2,\n    // functions\n    addBid,\n    addPenalty,\n    addScore,\n    newGame,\n  };\n};\n\nexport default useSpades;\n","import Avatar from \"@mui/material/Avatar\";\nimport Chip from \"@mui/material/Chip\";\nimport Typography from \"@mui/material/Typography\";\nimport PlayerMenu from \"../../common/header/PlayerMenu\";\n\ninterface HeaderProps {\n  initials: string;\n  overBids: [number, number, number, number];\n  wins1: number;\n  wins2: number;\n}\n\nconst Header = ({ initials, overBids, wins1, wins2 }: HeaderProps) => (\n  <>\n    <div className=\"flex-container\">\n      <Typography variant=\"h2\" component=\"h1\">\n        ♠️&nbsp;🧮\n      </Typography>\n      <PlayerMenu />\n    </div>\n    <br aria-hidden />\n    <div className=\"flex-container\">\n      <Chip\n        avatar={<Avatar>{initials[0] + initials[2]}</Avatar>}\n        color={wins1 >= wins2 ? \"success\" : \"error\"}\n        label={wins1}\n      />\n      <Chip\n        avatar={<Avatar>💰</Avatar>}\n        label={`${initials[0]} ${overBids[0]} | ${initials[1]} ${overBids[1]} | ${initials[2]} ${overBids[2]} | ${initials[3]} ${overBids[3]}`}\n      />\n      <Chip\n        avatar={<Avatar>{initials[1] + initials[3]}</Avatar>}\n        color={wins2 >= wins1 ? \"success\" : \"error\"}\n        label={wins2}\n      />\n    </div>\n  </>\n);\n\nexport default Header;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ControlBar from \"./control-bar/ControlBar\";\nimport ScoreTable from \"./ScoreTable\";\nimport useSpades from \"./useSpades\";\nimport Header from \"./Header\";\n\nconst Spades = React.memo(() => {\n  const {\n    // Shared\n    data,\n    initials,\n    // Header\n    overBids,\n    wins1,\n    wins2,\n    // Reset Button\n    newGame,\n    // ControlBar\n    first,\n    lastBid,\n    addBid,\n    addPenalty,\n    addScore,\n  } = useSpades();\n\n  // ControlBar doesn't have access to data, calculate out here\n  let i = data.length - 1;\n  if (data[i]?.score1 === undefined) {\n    i -= 1;\n  }\n  // set vars\n  const score1 = data[i]?.score1 || 0;\n  const bags1 = data[i]?.bags1 || 0;\n  const score2 = data[i]?.score2 || 0;\n  const bags2 = data[i]?.bags2 || 0;\n  // see if blind trade is possible\n  const diff = score1 * 10 + bags1 - (score2 * 10 + bags2);\n  const blindTrade = diff > 0 ? Math.floor(diff / 100) : Math.ceil(diff / 100);\n\n  return (\n    <>\n      <Header\n        initials={initials}\n        overBids={overBids}\n        wins1={wins1}\n        wins2={wins2}\n      />\n      {score1 >= 100 || score2 >= 100 ? (\n        <Button\n          fullWidth\n          color=\"error\"\n          onClick={newGame}\n          variant=\"contained\"\n          sx={{ marginTop: 2 }}\n        >\n          Reset\n        </Button>\n      ) : (\n        <ControlBar\n          blindTrade={blindTrade}\n          first={first}\n          initials={initials}\n          lastBid={lastBid}\n          showPenalty={data[0]?.score1 !== undefined}\n          onBidSave={addBid}\n          onPenalty={addPenalty}\n          onScoreSave={addScore}\n        />\n      )}\n      <ScoreTable initials={initials} data={data} />\n    </>\n  );\n});\n\nSpades.displayName = \"Spades\";\n\nexport default Spades;\n"],"names":["MIN_BID","MAX_BID","defaultBid","initialState","spadesAtom","atomWithStorage","AddBidPlayer","id","blindTrade","canTrain","bid","blind","train","onBid","decrBid","incrBid","handleBlind","_e","checked","handleTrain","TableRow","jsx","TableCell","jsxs","IconButton","Remove","Add","Switch","getBlindTrade","n","AddBid","first","initials","onBidSave","bids","setBids","React.useState","a","b","c","d","handleBid","newBid","trainBid","newBids","handleSave","bags","acc","InfoPopup","Table","TableHead","TableBody","AddPenalty","onPenalty","Grid","Button","AddScorePlayer","initial","lastBid","made","setMade","decrMade","incrMade","Typography","AddScore","onScoreSave","made0","setMade0","made1","setMade1","made2","setMade2","made3","setMade3","total","ControlBar","showPenalty","getScoreText","score","comp","ScoreTable","data","s","i","bidsToString","getScore","p1","p2","newScore","newBags","mod","teamBid","teamMade","penaltyHelper","m","useSpades","players","useAtomValue","playerAtom","spades","setSpades","useAtom","overBids","wins1","wins2","p","_a","newData","team","score1","bags1","mod1","score2","bags2","mod2","mades","newScore1","newBags1","newScore2","newBags2","newOverBids","is1Winner","Header","Fragment","PlayerMenu","Chip","Avatar","Spades","React.memo","newGame","addBid","addPenalty","addScore","_b","_c","_d","diff","_f"],"mappings":"qwBAEO,MAAMA,EAAU,EACVC,EAAU,GA2CVC,EAAkB,CAAE,IAAK,EAAG,MAAO,GAAO,MAAO,EAAM,EAC9DC,GAA4B,CAChC,KAAM,CAAC,EACP,MAAO,EACP,QAAS,CAACD,EAAYA,EAAYA,EAAYA,CAAU,EACxD,SAAU,CAAC,EAAG,EAAG,EAAG,CAAC,EACrB,MAAO,EACP,MAAO,CACT,EAEME,GAAaC,GAAgB,aAAcF,EAAY,ECrCvDG,EAAe,CAAC,CACpB,GAAAC,EACA,WAAAC,EACA,SAAAC,EACA,IAAAC,EACA,MAAAC,EACA,MAAAC,EACA,MAAAC,CACF,IAAyB,CACjB,MAAAC,EAAU,IAAMD,EAAM,KAAK,IAAIH,EAAM,EAAGV,CAAO,EAAG,GAAO,EAAK,EAC9De,EAAU,IAAMF,EAAM,KAAK,IAAIH,EAAM,EAAGT,CAAO,EAAG,GAAO,EAAK,EAE9De,EAAc,CAClBC,EACAC,IACGL,EAAMH,EAAKQ,EAAS,EAAK,EAExBC,EAAc,CAClBF,EACAC,IACGL,EAAMH,EAAK,GAAOQ,CAAO,EAE9B,cACGE,EACC,CAAA,SAAA,CAAAC,EAAAA,IAACC,GAAW,SAAGf,CAAA,CAAA,EACfgB,EAAAA,KAACD,EAAU,CAAA,MAAM,SACf,SAAA,CAACD,EAAAA,IAAAG,EAAA,CAAW,QAASV,EAAS,SAAUJ,GAAOV,EAC7C,SAAAqB,EAAA,IAACI,IAAO,CACV,CAAA,EACCf,EACDW,EAAAA,IAACG,GAAW,QAAST,EAAS,SAAUL,GAAOT,EAC7C,SAACoB,EAAAA,IAAAK,EAAA,CAAI,CAAA,CACP,CAAA,CAAA,EACF,EACAH,EAAAA,KAACD,EAAU,CAAA,MAAM,QACf,SAAA,CAAAD,EAAA,IAACM,EAAA,CACC,QAAShB,EACT,WAAY,CAAE,aAAc,IAAIJ,CAAE,YAAa,EAC/C,SAAUS,EACV,KAAK,OAAA,CACP,EACCR,GAAcG,EAAQH,EAAa,EAAA,EACtC,EACCa,EAAA,IAAAC,EAAA,CAAU,MAAM,QACd,SACCb,EAAAY,EAAA,IAACM,EAAA,CACC,QAASf,EACT,WAAY,CAAE,aAAc,IAAIL,CAAE,SAAU,EAC5C,SAAUY,EACV,KAAK,OAAA,GAEL,IACN,CAAA,CAAA,EACF,CAEJ,ECzDMS,EAAgB,CAACpB,EAAoBqB,IACxCrB,EAAa,IAAMqB,IAAM,GAAKA,IAAM,IACpCrB,EAAa,IAAMqB,IAAM,GAAKA,IAAM,GACjC,KAAK,IAAI,KAAK,IAAIrB,CAAU,EAAG,CAAC,EAChC,EAEAsB,GAAS,CAAC,CAAE,WAAAtB,EAAY,MAAAuB,EAAO,SAAAC,EAAU,UAAAC,KAA6B,CAC1E,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAqB,CAC3ClC,EACAA,EACAA,EACAA,CAAA,CACD,EAEKmC,GAAKN,EAAQ,GAAK,EAClBO,GAAKP,EAAQ,GAAK,EAClBQ,GAAKR,EAAQ,GAAK,EAClBS,GAAKT,EAAQ,GAAK,EAElBU,EACHZ,GAAc,CAACnB,EAAaC,EAAgBC,IAAmB,CAC9D,IAAI8B,EAAS,CAAE,IAAAhC,EAAK,MAAAC,EAAO,MAAAC,CAAM,EACjC,GAAID,EACF+B,EAAS,CAAE,IAAK,EAAG,MAAA/B,EAAO,MAAO,EAAM,UAC9BC,EAAO,CAChB,IAAI+B,EAAW,GACf,OAAQd,EAAG,CACT,KAAKQ,EACSM,GAAAT,EAAKK,CAAC,EAAE,IACpB,MACF,KAAKD,EACSK,GAAAT,EAAKM,CAAC,EAAE,IACpB,MACF,KAAKD,EACSI,GAAAT,EAAKG,CAAC,EAAE,IACpB,MACF,KAAKG,EACL,QACcG,GAAAT,EAAKI,CAAC,EAAE,GAAA,CAEfI,EAAA,CACP,IAAKC,EACL,MAAO,GACP,MAAA/B,CACF,CAAA,MAEA8B,EAAS,CAAE,IAAAhC,EAAK,MAAO,GAAO,MAAO,EAAM,EAEvC,MAAAkC,EAAgB,CAAC,GAAGV,CAAI,EAC9BU,EAAQf,CAAC,EAAIa,EACbP,EAAQS,CAAO,CACjB,EAEIC,EAAa,IAAM,CACvBZ,EAAUC,CAAI,EACdC,EAAQ,CAACjC,EAAYA,EAAYA,EAAYA,CAAU,CAAC,CAC1D,EAEM4C,EAAOZ,EAAK,OAAO,CAACa,EAAKrC,IAAQqC,EAAMrC,EAAI,IAAK,EAAE,EAGtD,OAAAW,EAAAA,IAAC2B,EAAU,CAAA,MAAM,QAAQ,OAAQH,EAC/B,SAAAtB,EAAAA,KAAC0B,EAAM,CAAA,aAAW,YAAY,QAAQ,OACpC,SAAA,CAAC5B,EAAA,IAAA6B,EAAA,CACC,gBAAC9B,EACC,CAAA,SAAA,CAACC,EAAA,IAAAC,EAAA,CAAU,MAAO,MAAO,SAAC,IAAA,EACzBC,EAAA,KAAAD,EAAA,CAAU,MAAO,MAAO,MAAM,SAAS,SAAA,CAAA,QAChCwB,EAAK,MAAA,EACb,QACCxB,EAAU,CAAA,MAAO,MAAO,MAAM,SAAS,SAExC,KAAA,QACCA,EAAU,CAAA,MAAO,MAAO,MAAM,SAAS,SAExC,IAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,SACC6B,EACC,CAAA,SAAA,CAAA9B,EAAA,IAACf,EAAA,CACC,GAAI0B,EAASK,CAAC,EAAI,MACjB,GAAGH,EAAKG,CAAC,EACV,MAAOI,EAAUJ,CAAC,EAClB,WAAYT,EAAcpB,EAAY6B,CAAC,CAAA,CACzC,EACAhB,EAAA,IAACf,EAAA,CACC,GAAI0B,EAASM,CAAC,EACb,GAAGJ,EAAKI,CAAC,EACV,MAAOG,EAAUH,CAAC,EAClB,WAAYV,EAAcpB,EAAY8B,CAAC,CAAA,CACzC,EACAjB,EAAA,IAACf,EAAA,CACC,SAAU,EAAI4B,EAAKG,CAAC,EAAE,KAAOH,EAAKG,CAAC,EAAE,IAAM,GAC3C,GAAIL,EAASO,CAAC,EACb,GAAGL,EAAKK,CAAC,EACV,WAAYX,EAAcpB,EAAY+B,CAAC,EACvC,MAAOE,EAAUF,CAAC,CAAA,CACpB,EACAlB,EAAA,IAACf,EAAA,CACC,SAAU,EAAI4B,EAAKI,CAAC,EAAE,KAAOJ,EAAKI,CAAC,EAAE,IAAM,GAC3C,GAAIN,EAASQ,CAAC,EAAI,MACjB,GAAGN,EAAKM,CAAC,EACV,WAAYZ,EAAcpB,EAAYgC,CAAC,EACvC,MAAOC,EAAUD,CAAC,CAAA,CAAA,CACpB,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,ECpHMY,GAAa,CAAC,CAAE,SAAApB,EAAU,UAAAqB,CAC9B,IAAAhC,MAAC2B,EAAU,CAAA,MAAM,UACf,SAACzB,EAAAA,KAAA+B,EAAA,CAAK,UAAS,GAAC,QAAS,EACvB,SAAA,CAACjC,EAAAA,IAAAiC,EAAA,CAAK,KAAM,EACV,SAAA/B,EAAA,KAACgC,EAAA,CACC,UAAS,GACT,QAAQ,YACR,MAAM,QACN,QAASF,EAAU,CAAC,EACrB,SAAA,CAAA,QACOrB,EAAS,CAAC,EAAIA,EAAS,CAAC,CAAA,CAAA,CAAA,EAElC,EACAX,EAAAA,IAACiC,EAAK,CAAA,KAAM,EACV,SAAA/B,EAAA,KAACgC,EAAA,CACC,UAAS,GACT,QAAQ,YACR,MAAM,QACN,QAASF,EAAU,CAAC,EACrB,SAAA,CAAA,QACOrB,EAAS,CAAC,EAAIA,EAAS,CAAC,CAAA,CAAA,CAAA,CAElC,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EClBIwB,EAAiB,CAAC,CACtB,QAAAC,EACA,QAAAC,EACA,KAAAC,EACA,QAAAC,CACF,IAA2B,CACnB,MAAAC,EAAW,IAAMD,EAAQ,KAAK,IAAID,EAAO,EAAG3D,CAAO,CAAC,EACpD8D,EAAW,IAAMF,EAAQ,KAAK,IAAID,EAAO,EAAG1D,CAAO,CAAC,EAGxD,OAAAsB,EAAA,KAAC+B,EAAK,CAAA,KAAM,EACV,SAAA,CAAA/B,OAACwC,EACE,CAAA,SAAA,CAAAN,EAAQ,SAAOC,CAAA,EAClB,SACC,MAAI,CAAA,SAAA,CAAA,QAEHrC,EAAAA,IAACG,GAAW,QAASqC,EAAU,SAAUF,GAAQ3D,EAC/C,SAACqB,EAAA,IAAAI,EAAA,CAAA,CAAO,CACV,CAAA,EACCkC,EACDtC,EAAAA,IAACG,GAAW,QAASsC,EAAU,SAAUH,GAAQ1D,EAC/C,SAACoB,EAAAA,IAAAK,EAAA,CAAI,CAAA,CACP,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC5BMsC,GAAW,CAAC,CAAE,SAAAhC,EAAU,QAAA0B,EAAS,YAAAO,KAAiC,CACtE,KAAM,CAACC,EAAOC,CAAQ,EAAI/B,EAAAA,SAAe,CAAC,EACpC,CAACgC,EAAOC,CAAQ,EAAIjC,EAAAA,SAAe,CAAC,EACpC,CAACkC,EAAOC,CAAQ,EAAInC,EAAAA,SAAe,CAAC,EACpC,CAACoC,EAAOC,CAAQ,EAAIrC,EAAAA,SAAe,CAAC,EAEpCsC,EAAQR,EAAQE,EAAQE,EAAQE,EAUhC3B,EAAa6B,IAAU,GARN,IAAM,CAC3BT,EAAY,CAACC,EAAOE,EAAOE,EAAOE,CAAK,CAAC,EACxCL,EAAS,CAAC,EACVE,EAAS,CAAC,EACVE,EAAS,CAAC,EACVE,EAAS,CAAC,CACZ,EAEmD,OAEnD,OACGlD,EAAAA,KAAAyB,EAAA,CAAU,MAAM,UAAU,OAAQH,EACjC,SAAA,CAAAtB,EAAA,KAACwC,EAAA,CACC,MAAOW,IAAU,GAAK,UAAY,UAClC,MAAM,SACN,aAAc,EAEb,SAAA,CAAAA,IAAU,IAAM,KAAK,YAAUA,CAAA,CAAA,CAClC,EACCnD,EAAA,KAAA+B,EAAA,CAAK,UAAS,GAAC,QAAS,EACvB,SAAA,CAAAjC,EAAA,IAACmC,EAAA,CACC,QAASxB,EAAS,CAAC,EACnB,QAAS0B,EAAQ,CAAC,EAAE,IACpB,KAAMQ,EACN,QAASC,CAAA,CACX,EACA9C,EAAA,IAACmC,EAAA,CACC,QAASxB,EAAS,CAAC,EACnB,QAAS0B,EAAQ,CAAC,EAAE,IACpB,KAAMU,EACN,QAASC,CAAA,CACX,EACAhD,EAAA,IAACmC,EAAA,CACC,QAASxB,EAAS,CAAC,EACnB,QAAS0B,EAAQ,CAAC,EAAE,IACpB,KAAMY,EACN,QAASC,CAAA,CACX,EACAlD,EAAA,IAACmC,EAAA,CACC,QAASxB,EAAS,CAAC,EACnB,QAAS0B,EAAQ,CAAC,EAAE,IACpB,KAAMc,EACN,QAASC,CAAA,CAAA,CACX,CACF,CAAA,CAAA,EACF,CAEJ,ECpDME,GAAa,CAAC,CAClB,WAAAnE,EACA,MAAAuB,EACA,SAAAC,EACA,QAAA0B,EACA,YAAAkB,EACA,UAAA3C,EACA,UAAAoB,EACA,YAAAY,CACF,IACE1C,EAAA,KAAC,OAAI,UAAU,iBAAiB,MAAO,CAAE,OAAQ,QAC/C,EAAA,SAAA,CAAAF,EAAA,IAACS,GAAA,CACC,WAAAtB,EACA,MAAAuB,EACA,SAAAC,EACA,UAAAC,CAAA,CACF,EACC2C,GAAevD,EAAAA,IAAC+B,GAAW,CAAA,SAAApB,EAAoB,UAAAqB,CAAsB,CAAA,EACrEhC,EAAAA,IAAA2C,GAAA,CAAS,SAAAhC,EAAoB,QAAA0B,EAAkB,YAAAO,CAA0B,CAAA,CAAA,EAC5E,ECvBIY,EAAe,CAACC,EAAgBC,IAChCD,IAAU,QAAaC,IAAS,QAAaD,IAAU,EAClD,GACEA,EAAQ,EACV,GAAGA,GAAS,KAAOA,GAASC,EAAO,MAAQ,EAAE,GAAGD,CAAK,GAErD,GAAGA,CAAK,OAIbE,GAAa,CAAC,CAAE,SAAAhD,EAAU,KAAAiD,CAC9B,IAAA1D,OAAC0B,EAAM,CAAA,aAAW,YAChB,SAAA,CAAC5B,EAAA,IAAA6B,EAAA,CACC,gBAAC9B,EACC,CAAA,SAAA,CAACC,EAAA,IAAAC,EAAA,CAAU,MAAO,MAAO,SAAE,KAAA,SAC1BA,EAAU,CAAA,SAAA,CAAA,YAER,KAAG,EAAA,EAAE,IAAEU,EAAS,CAAC,EAAIA,EAAS,CAAC,EAAIA,EAAS,CAAC,EAAIA,EAAS,CAAC,EAAE,GAAA,EAChE,QACCV,EAAW,CAAA,SAAAU,EAAS,CAAC,EAAIA,EAAS,CAAC,EAAE,QACrCV,EAAW,CAAA,SAAAU,EAAS,CAAC,EAAIA,EAAS,CAAC,CAAE,CAAA,CAAA,CAAA,CACxC,CACF,CAAA,EACAX,EAAAA,IAAC8B,GACE,SAAK8B,EAAA,IAAI,CAACC,EAAGC,WACX/D,EACC,CAAA,SAAA,CAAAG,EAAA,KAACD,EAAA,CACC,QAAS6D,IAAMF,EAAK,OAAS,EAAI,OAAS,OAC1C,MAAM,SAEL,SAAA,CAAEC,EAAA,MACFC,IAAMF,EAAK,OAAS,IAAMC,EAAE,OAAS,KAAO,KAAA,CAAA,CAC/C,EACA7D,EAAAA,IAACC,EAAW,CAAA,SAAA4D,EAAE,GAAI,CAAA,SACjB5D,EACE,CAAA,SAAA,CAAauD,EAAAK,EAAE,OAAQA,EAAE,MAAM,EAC/BA,EAAE,MACFA,EAAE,MAAQ,KAAKA,EAAE,IAAI,GAAA,EACxB,SACC5D,EACE,CAAA,SAAA,CAAauD,EAAAK,EAAE,OAAQA,EAAE,MAAM,EAC/BA,EAAE,MACFA,EAAE,MAAQ,KAAKA,EAAE,IAAI,GAAA,CACxB,CAAA,CAAA,CAlBa,EAAAC,CAmBf,CACD,CACH,CAAA,CAAA,EACF,ECjDWC,GAAgBlD,GAC3BA,EAAK,OAAO,CAACa,EAAKT,IACZA,EAAE,MACGS,EAAM,KACJT,EAAE,MACJS,EAAM,KACJT,EAAE,MAAQ,EACZS,EAAM,KACJT,EAAE,KAAO,GACXS,EAAM,IAAIT,EAAE,GAAG,IAEfS,EAAMT,EAAE,IAAI,SAAS,EAE7B,EAAE,EAGM+C,EAAW,CACtBC,EACAC,EACAT,EACAhC,IACkD,CAClD,IAAI0C,EAAW,EACXC,EAAU,EACVC,EAAM,GAGN,GAAAJ,EAAG,OAASC,EAAG,MACbD,EAAG,OAAS,GAAKC,EAAG,OAAS,EAEpBC,EAAA,IAGDC,EAAAH,EAAG,KAAOC,EAAG,KACjBG,EAAA,gBAGCJ,EAAG,MAAQ,GAAKC,EAAG,MAAQ,EAEhCD,EAAG,OAASC,EAAG,MACbD,EAAG,OAAS,GAAKC,EAAG,OAAS,EAEpBC,EAAA,GACDF,EAAG,OAASA,EAAG,OAAS,GAAOC,EAAG,OAASA,EAAG,OAAS,GAEtDC,EAAA,GACDC,EAAAH,EAAG,KAAOC,EAAG,KACjBG,EAAA,MACGJ,EAAG,OAAS,GAAKC,EAAG,OAAS,GAE5BE,EAAAH,EAAG,KAAOC,EAAG,KACjBG,EAAA,OAGKF,EAAA,IACDC,EAAAH,EAAG,KAAOC,EAAG,KACjBG,EAAA,QAGCJ,EAAG,OAAS,GAAKC,EAAG,OAAS,EAE3BC,EAAA,GACFF,EAAG,OAAS,GAAKC,EAAG,OAAS,GAE5BE,EAAAH,EAAG,KAAOC,EAAG,KACjBG,EAAA,OAGKF,EAAA,IACDC,EAAAH,EAAG,KAAOC,EAAG,KACjBG,EAAA,gBAGCJ,EAAG,OAASC,EAAG,MACpBD,EAAG,KAAOC,EAAG,MAAQ,IAEZC,EAAA,GACDC,EAAAH,EAAG,KAAOC,EAAG,KAAO,KAGnBC,EAAA,IACLE,EAAA,UAEH,CAEDJ,EAAG,MAAQ,EACTA,EAAG,OAAS,EAEFE,GAAAF,EAAG,MAAQ,GAAK,IAGhBE,GAAA,GACZC,GAAWH,EAAG,KACRI,EAAA,MAECH,EAAG,MAAQ,IAChBA,EAAG,OAAS,EAEFC,GAAAD,EAAG,MAAQ,GAAK,IAGhBC,GAAA,GACZC,GAAWF,EAAG,KACRG,EAAA,OAIJ,MAAAC,EAAUL,EAAG,IAAMC,EAAG,IACtBK,GAAYN,EAAG,IAAM,EAAIA,EAAG,KAAO,IAAMC,EAAG,IAAM,EAAIA,EAAG,KAAO,GAClEK,GAAYD,GAEFH,GAAAG,EACZF,GAAWG,EAAWD,IAGVH,GAAAG,EACLD,GAAA,KACT,CAGK,KAAA5C,EAAO2C,GAAW,IACXD,GAAA,EACDC,GAAA,GACJC,GAAA,KAGT,MAAO,CAAE,MAAOZ,EAAQU,EAAU,KAAM1C,EAAO2C,EAAS,IAAAC,CAAI,CAC9D,EAGaG,EAAgB,CAACX,EAAW5C,EAAWwD,IAAe,CAEjE,IAAIhD,EAAOR,EAAI,EACXoD,GAAOI,GAAK,IAAM,KAClBhB,EAAQI,EAEZ,OAAIpC,GAAQ,KACDgC,GAAA,EACDhC,GAAA,GACD4C,GAAA,MAGF,CAAE,MAAAZ,EAAO,KAAAhC,EAAM,IAAA4C,CAAI,CAC5B,ECpJMK,GAAY,IAAM,CAChB,MAAAC,EAAUC,GAAaC,EAAU,EACjC,CAACC,EAAQC,CAAS,EAAIC,GAAQjG,EAAU,EAExC,CAAE,KAAA6E,EAAM,MAAAlD,EAAO,QAAA2B,EAAS,SAAA4C,EAAU,MAAAC,EAAO,MAAAC,GAAUL,EACnDnE,EAAWgE,EAAQ,OAAO,CAAC3D,EAAGoE,EAAGtB,IAAOA,EAAI,EAAI9C,EAAIoE,EAAE,KAAK,CAAC,EAAIpE,EAAI,EAAE,EAgIrE,MAAA,CAEL,KAAA4C,EACA,MAAAlD,EACA,SAAAC,EACA,QAAA0B,EACA,SAAA4C,EACA,MAAAC,EACA,MAAAC,EAEA,OAvIctE,GAAe,OAEzB,GAAA+C,EAAKA,EAAK,OAAS,CAAC,KAAKyB,EAAAzB,EAAKA,EAAK,OAAS,CAAC,IAApB,YAAAyB,EAAuB,UAAW,OAC7D,OAGI,MAAAC,EAAU,CAAC,GAAG1B,CAAI,EAChB0B,EAAA,KAAK,CAAE,MAAO3E,EAASD,CAAK,EAAG,IAAKqD,GAAalD,CAAI,EAAG,EAEhEkE,EAAU,CAAE,GAAGD,EAAQ,KAAMQ,EAAS,QAASzE,EAAM,CACvD,EA8HE,WA5HkB0E,GAAiB,IAAM,OACrC,IAAAzB,EAAIF,EAAK,OAAS,EAItB,KAHIyB,EAAAzB,EAAKE,CAAC,IAAN,YAAAuB,EAAS,UAAW,SACjBvB,GAAA,GAEHyB,IAAS,EAAG,CAER,KAAA,CAAE,OAAAC,EAAQ,MAAAC,EAAO,KAAAC,GAAS9B,EAAKE,CAAC,GAAK,CAAC,EACxC,GAAA0B,IAAW,QAAaC,IAAU,OACpC,OAGI,KAAA,CAAE,MAAAhC,EAAO,KAAAhC,EAAM,IAAA4C,CAAA,EAAQG,EAAcgB,EAAQC,EAAOC,CAAI,EAExDJ,EAAU,CAAC,GAAG1B,CAAI,EACxB0B,EAAQxB,CAAC,EAAI,CAAE,GAAGF,EAAKE,CAAC,EAAG,OAAQL,EAAO,MAAOhC,EAAM,KAAM4C,CAAI,EACjEU,EAAU,CAAE,GAAGD,EAAQ,KAAMQ,EAAS,CAAA,KACjC,CAEC,KAAA,CAAE,OAAAK,EAAQ,MAAAC,EAAO,KAAAC,GAASjC,EAAKE,CAAC,GAAK,CAAC,EACxC,GAAA6B,IAAW,QAAaC,IAAU,OACpC,OAGI,KAAA,CAAE,MAAAnC,EAAO,KAAAhC,EAAM,IAAA4C,CAAA,EAAQG,EAAcmB,EAAQC,EAAOC,CAAI,EAExDP,EAAU,CAAC,GAAG1B,CAAI,EACxB0B,EAAQxB,CAAC,EAAI,CAAE,GAAGF,EAAKE,CAAC,EAAG,OAAQL,EAAO,MAAOhC,EAAM,KAAM4C,CAAI,EACjEU,EAAU,CAAE,GAAGD,EAAQ,KAAMQ,EAAS,CAAA,CAE1C,EA+FE,SA5FgBQ,GAA4C,OAE5D,KAAIT,EAAAzB,EAAKA,EAAK,OAAS,CAAC,IAApB,YAAAyB,EAAuB,UAAW,OACpC,OAGI,MAAAC,EAAU,CAAC,GAAG1B,CAAI,EAClB,CAAE,OAAA4B,EAAQ,MAAAC,EAAO,OAAAE,EAAQ,MAAAC,CAAA,EAAUhC,EAAKA,EAAK,OAAS,CAAC,GAAK,CAAC,EAE7D,CACJ,MAAOmC,EACP,KAAMC,EACN,IAAKN,CAAA,EACH1B,EACF,CAAE,GAAG3B,EAAQ,CAAC,EAAG,KAAMyD,EAAM,CAAC,CAAE,EAChC,CAAE,GAAGzD,EAAQ,CAAC,EAAG,KAAMyD,EAAM,CAAC,CAAE,EAChCN,GAAU,EACVC,GAAS,CACX,EACM,CACJ,MAAOQ,EACP,KAAMC,EACN,IAAKL,EAAA,EACH7B,EACF,CAAE,GAAG3B,EAAQ,CAAC,EAAG,KAAMyD,EAAM,CAAC,CAAE,EAChC,CAAE,GAAGzD,EAAQ,CAAC,EAAG,KAAMyD,EAAM,CAAC,CAAE,EAChCH,GAAU,EACVC,GAAS,CACX,EAEQN,EAAA1B,EAAK,OAAS,CAAC,EAAI,CACzB,GAAGA,EAAKA,EAAK,OAAS,CAAC,EACvB,OAAQmC,EACR,MAAOC,EACP,KAAAN,EACA,OAAQO,EACR,MAAOC,EACP,KAAAL,EACF,EAEA,MAAMM,EAAgD,CAAC,EAAG,EAAG,EAAG,CAAC,EACzD9D,EAAA,QAAQ,CAAChD,GAAKyE,IAAM,CAGvBA,IAAM,GAAKzB,EAAQ,CAAC,EAAE,MAAQ,GAC9ByB,IAAM,GAAKzB,EAAQ,CAAC,EAAE,MAAQ,IAKrB8D,EAAArC,CAAC,GAAK,KAAK,IACrBgC,EAAMhC,CAAC,EAAIzE,GAAI,IACfyE,IAAM,GAAKA,IAAM,EAAIkC,GAAY,EAAIE,GAAY,CACnD,EAAA,CACD,EAESnB,EAAA,CACR,GAAGD,EACH,KAAMQ,EACN,OAAQ5E,EAAQ,GAAK,EACrB,QAAS,CAAC7B,EAAYA,EAAYA,EAAYA,CAAU,EACxD,SAAUsH,CAAA,CACX,CACH,EA8BE,QA5Bc,IAAM,CACpB,KAAM,CAAE,OAAAX,EAAQ,MAAAC,GAAU7B,EAAKA,EAAK,OAAS,CAAC,EACxC,CAAE,OAAA+B,EAAQ,MAAAC,GAAUhC,EAAKA,EAAK,OAAS,CAAC,EACxCwC,EACHZ,IAAWG,IAAWF,GAAS,IAAMG,GAAS,KAC9CJ,GAAU,IAAMG,GAAU,GACnBZ,EAAA,CACR,GAAGD,EACH,KAAM,CAAC,EACP,QAAS,CAACjG,EAAYA,EAAYA,EAAYA,CAAU,EACxD,MAAOqG,GAASkB,EAAY,EAAI,GAChC,MAAOjB,GAASiB,EAAY,EAAI,EAAA,CACjC,CACH,CAgBA,CACF,EC7IMC,GAAS,CAAC,CAAE,SAAA1F,EAAU,SAAAsE,EAAU,MAAAC,EAAO,MAAAC,CAAA,IAEzCjF,EAAA,KAAAoG,WAAA,CAAA,SAAA,CAACpG,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAF,MAAC0C,EAAW,CAAA,QAAQ,KAAK,UAAU,KAAK,SAExC,QAAA,QACC6D,GAAW,CAAA,CAAA,CAAA,EACd,EACAvG,EAAAA,IAAC,KAAG,CAAA,cAAW,EAAC,CAAA,EAChBE,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAF,EAAA,IAACwG,EAAA,CACC,aAASC,EAAQ,CAAA,SAAA9F,EAAS,CAAC,EAAIA,EAAS,CAAC,EAAE,EAC3C,MAAOuE,GAASC,EAAQ,UAAY,QACpC,MAAOD,CAAA,CACT,EACAlF,EAAA,IAACwG,EAAA,CACC,OAASxG,EAAAA,IAAAyG,EAAA,CAAO,SAAE,IAAA,CAAA,EAClB,MAAO,GAAG9F,EAAS,CAAC,CAAC,IAAIsE,EAAS,CAAC,CAAC,MAAMtE,EAAS,CAAC,CAAC,IAAIsE,EAAS,CAAC,CAAC,MAAMtE,EAAS,CAAC,CAAC,IAAIsE,EAAS,CAAC,CAAC,MAAMtE,EAAS,CAAC,CAAC,IAAIsE,EAAS,CAAC,CAAC,EAAA,CACtI,EACAjF,EAAA,IAACwG,EAAA,CACC,aAASC,EAAQ,CAAA,SAAA9F,EAAS,CAAC,EAAIA,EAAS,CAAC,EAAE,EAC3C,MAAOwE,GAASD,EAAQ,UAAY,QACpC,MAAOC,CAAA,CAAA,CACT,CACF,CAAA,CAAA,EACF,EC9BIuB,GAASC,EAAM,KAAK,IAAM,iBACxB,KAAA,CAEJ,KAAA/C,EACA,SAAAjD,EAEA,SAAAsE,EACA,MAAAC,EACA,MAAAC,EAEA,QAAAyB,EAEA,MAAAlG,EACA,QAAA2B,EACA,OAAAwE,EACA,WAAAC,EACA,SAAAC,GACErC,GAAU,EAGV,IAAAZ,EAAIF,EAAK,OAAS,IAClByB,EAAAzB,EAAKE,CAAC,IAAN,YAAAuB,EAAS,UAAW,SACjBvB,GAAA,GAGP,MAAM0B,IAASwB,EAAApD,EAAKE,CAAC,IAAN,YAAAkD,EAAS,SAAU,EAC5BvB,IAAQwB,EAAArD,EAAKE,CAAC,IAAN,YAAAmD,EAAS,QAAS,EAC1BtB,IAASuB,EAAAtD,EAAKE,CAAC,IAAN,YAAAoD,EAAS,SAAU,EAC5BtB,IAAQhG,EAAAgE,EAAKE,CAAC,IAAN,YAAAlE,EAAS,QAAS,EAE1BuH,EAAO3B,EAAS,GAAKC,GAASE,EAAS,GAAKC,GAC5CzG,EAAagI,EAAO,EAAI,KAAK,MAAMA,EAAO,GAAG,EAAI,KAAK,KAAKA,EAAO,GAAG,EAE3E,OAEIjH,EAAA,KAAAoG,WAAA,CAAA,SAAA,CAAAtG,EAAA,IAACqG,GAAA,CACC,SAAA1F,EACA,SAAAsE,EACA,MAAAC,EACA,MAAAC,CAAA,CACF,EACCK,GAAU,KAAOG,GAAU,IAC1B3F,EAAA,IAACkC,EAAA,CACC,UAAS,GACT,MAAM,QACN,QAAS0E,EACT,QAAQ,YACR,GAAI,CAAE,UAAW,CAAE,EACpB,SAAA,OAAA,CAAA,EAID5G,EAAA,IAACsD,GAAA,CACC,WAAAnE,EACA,MAAAuB,EACA,SAAAC,EACA,QAAA0B,EACA,cAAa+E,EAAAxD,EAAK,CAAC,IAAN,YAAAwD,EAAS,UAAW,OACjC,UAAWP,EACX,UAAWC,EACX,YAAaC,CAAA,CACf,EAEF/G,EAAAA,IAAC2D,GAAW,CAAA,SAAAhD,EAAoB,KAAAiD,CAAY,CAAA,CAAA,EAC9C,CAEJ,CAAC,EAED8C,GAAO,YAAc"}