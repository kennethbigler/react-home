{"version":3,"file":"index-6da0238b.js","sources":["../../src/images/ken.webp","../../src/components/resume/summary/Info.tsx","../../src/components/resume/summary/Skills.tsx","../../src/components/resume/summary/EducationSeg.tsx","../../src/components/resume/summary/Education.tsx","../../src/components/resume/summary/Summary.tsx"],"sourcesContent":["export default \"__VITE_ASSET__fd54cc58__\"","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Grid from \"@mui/material/Grid\";\nimport ExpandableCard from \"../../common/expandable-card\";\nimport photo from \"../../../images/ken.webp\";\nimport workExp, { Job } from \"../../../constants/work\";\n\nconst imageStyles: React.CSSProperties = {\n  width: \"95%\",\n  display: \"block\",\n  margin: \"auto\",\n  marginBottom: \"1em\",\n};\n\nexport const getJob = (job: Job): string => {\n  const parent = job.parent ? ` (${job.parent})` : \"\";\n  return `${job.title}, ${job.company}${parent}`;\n};\n\nconst handleClick = (): void => {\n  window.open(\"https://www.linkedin.com/in/kennethbigler\", \"linkedIn\");\n};\n\nconst Info: React.FC = React.memo(() => (\n  <Grid container spacing={1}>\n    <Grid item md={4} xs={12}>\n      <img\n        alt=\"Kenneth Bigler\"\n        onClick={handleClick}\n        src={photo}\n        style={imageStyles}\n      />\n    </Grid>\n    <Grid item md={8} xs={12}>\n      <ExpandableCard title={getJob(workExp[0])}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Location</TableCell>\n              <TableCell>Mountain View, CA</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Role</TableCell>\n              <TableCell>Accessibility Engineer Leader</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Volunteer Work</TableCell>\n              <TableCell>Second Harvest Food Bank</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell colSpan={2} align=\"center\">\n                Licenses\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <p>Driver License (C &amp; M1)</p>\n                <p>GoKart Racing License</p>\n                <p>Range Safety Certified</p>\n                <p>\n                  CPR, AED, &amp; First Aid Certified (Adult, Child, &amp; Baby)\n                </p>\n              </TableCell>\n              <TableCell>\n                <p>Ordained Minister</p>\n                <p>Former Magician&apos;s Assistant</p>\n                <p>Former Salsa Dance Instructor</p>\n                <p>Former Salsa Dance Choreographer</p>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </ExpandableCard>\n    </Grid>\n  </Grid>\n));\n\nexport default Info;\n","import * as React from \"react\";\nimport Chip from \"@mui/material/Chip\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandableCard from \"../../common/expandable-card\";\nimport { techSummary, skillSummary } from \"../../../constants/work\";\n\nconst chipStyles: React.CSSProperties = { marginRight: 5, marginTop: 5 };\nconst sidePadding: React.CSSProperties = { paddingLeft: 20, paddingRight: 20 };\n\nconst getCSV = (arr: string[]): React.ReactNodeArray =>\n  arr.map((tech) => <Chip key={tech} label={tech} style={chipStyles} />);\n\nconst Skills: React.FC = React.memo(() => (\n  <ExpandableCard title=\"Skills\">\n    <div style={sidePadding}>\n      <Typography variant=\"h3\" component=\"h2\">\n        Summary of Skills:\n      </Typography>\n      <ul>\n        <li>\n          <Typography>\n            Developing useful, multi-platform software tools and creating user\n            interfaces\n          </Typography>\n        </li>\n        <li>\n          <Typography>\n            Managing international team members, strong communication skills,\n            team player, and detail-oriented\n          </Typography>\n        </li>\n        <li>\n          <Typography>\n            Gathering requirements, scheduling, prioritizing goals, documenting\n            processes, and creating project standards\n          </Typography>\n        </li>\n        <li>\n          <Typography>\n            Designing, building, and overseeing production of large and small\n            Internet and Intranet sites\n          </Typography>\n        </li>\n      </ul>\n      <hr />\n      <Typography variant=\"h3\" component=\"h2\">\n        Technologies:\n      </Typography>\n      {getCSV(techSummary)}\n      <hr />\n      <Typography variant=\"h3\" component=\"h2\">\n        Skills:\n      </Typography>\n      {getCSV(skillSummary)}\n    </div>\n  </ExpandableCard>\n));\n\nexport default Skills;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { School } from \"../../../constants/classes\";\n\nconst EducationSeg: React.FC<School> = React.memo(\n  ({\n    degree,\n    gpa,\n    graduation,\n    honors,\n    location,\n    major,\n    minor,\n    school,\n  }: School) => (\n    <div>\n      <Typography variant=\"h4\" component=\"h3\">{`${school || \"\"}, ${\n        location || \"\"\n      }`}</Typography>\n      <Typography variant=\"h5\" component=\"h4\">\n        {degree + (major ? ` in ${major}` : \"\")}\n      </Typography>\n      <ul>\n        {minor && (\n          <li>\n            <Typography>{minor}</Typography>\n          </li>\n        )}\n        {honors && (\n          <li>\n            <Typography>{honors}</Typography>\n          </li>\n        )}\n        {graduation && (\n          <li>\n            <Typography>{`Completion: ${graduation}`}</Typography>\n          </li>\n        )}\n        {gpa && (\n          <li>\n            <Typography>{`GPA: ${gpa}`}</Typography>\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n);\n\nexport default EducationSeg;\n","import * as React from \"react\";\nimport ExpandableCard from \"../../common/expandable-card\";\nimport classes, { School } from \"../../../constants/classes\";\nimport EducationSeg from \"./EducationSeg\";\n\nconst Education: React.FC = React.memo(() => (\n  <ExpandableCard title=\"Education\">\n    <div style={{ paddingLeft: 20, paddingRight: 20 }}>\n      {classes.map((d: School, i: number): React.ReactNode => {\n        if (d.school) {\n          return (\n            <div key={i}>\n              {i !== 0 && <hr />}\n              <EducationSeg {...d} />\n            </div>\n          );\n        }\n        return null;\n      })}\n    </div>\n  </ExpandableCard>\n));\n\nexport default Education;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Info from \"./Info\";\nimport Skills from \"./Skills\";\nimport Education from \"./Education\";\nimport TimelineCard from \"../../common/timeline-card\";\n\n/* Summary  ->  Info\n *         |->  Skills\n *         |->  Education */\nconst Summary = React.memo(() => (\n  <>\n    <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n      Summary\n    </Typography>\n    <Info />\n    <TimelineCard />\n    <Skills />\n    <Education />\n  </>\n));\n\nexport default Summary;\n"],"names":["photo","imageStyles","getJob","job","parent","handleClick","Info","React.memo","Grid","jsx","ExpandableCard","workExp","Table","TableBody","jsxs","TableRow","TableCell","chipStyles","sidePadding","getCSV","arr","tech","Chip","Skills","Typography","techSummary","skillSummary","EducationSeg","degree","gpa","graduation","honors","location","major","minor","school","Education","classes","d","i","Summary","Fragment","TimelineCard","Summary$1"],"mappings":"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"}