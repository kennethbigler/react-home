{"version":3,"file":"index-BN-3Fozw.js","sources":["../../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../../node_modules/@mui/material/DialogContentText/DialogContentText.js","../../src/recoil/stock-atom.ts","../../src/recoil/comp-calculator-state.ts","../../src/apis/usdFormatter.tsx","../../src/components/resume/comp-calc/CompEntryDisplay.tsx","../../src/components/resume/comp-calc/CompEntryDialog.tsx","../../src/components/resume/comp-calc/StockDialog.tsx","../../src/components/resume/comp-calc/StockDisplay.tsx","../../src/components/resume/comp-calc/graphs/CompGraph.tsx","../../src/components/resume/comp-calc/graphs/BreakdownGraph.tsx","../../src/components/resume/comp-calc/graphs/Graphs.tsx","../../src/components/resume/comp-calc/CompCalculator.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport { getDialogContentTextUtilityClass } from \"./dialogContentTextClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return {\n    ...classes,\n    // forward classes to the Typography\n    ...composedClasses\n  };\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n    children,\n    className,\n    ...ownerState\n  } = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, {\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ...props,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import { atom } from \"recoil\";\n\nexport interface StockState {\n  [key: string]: number;\n}\n\nconst initialState: StockState = {};\n\nconst stockAtom = atom({\n  key: \"stockAtom\",\n  default:\n    (JSON.parse(localStorage.getItem(\"stock-atom\") || \"null\") as StockState) ||\n    initialState,\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"stock-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\nexport default stockAtom;\n","import { atom, selector } from \"recoil\";\nimport stockAtom from \"./stock-atom\";\nimport dateHelper, { DateObj } from \"../apis/DateHelper\";\n\n/** Compensation Calculator\n *\n * -----     SALARY     -----\n * Date {string}\n * Salary {number}\n * Bonus {number}\n * Stock (Adj) {number} - calculated\n * Stock {number} - calculated\n * Total {number} - calculated\n * Total (Adj) {number} - calculated\n * Net {number} - calculated\n *\n * -----     STOCK     -----\n * Stock Tick {string}\n * Price Now {number}\n * Grant Qty {number} - STOCKS\n * Grant Duration {number} - YEARS\n * Grant Then - calculated\n * Grant Now - calculated\n */\nexport interface CompEntry {\n  entryDate: string;\n  salary: number;\n  bonus: number;\n  stockTick: string;\n  priceThen: number;\n  grantDuration: number; // YEARS\n  grantQty: number; // STOCKS\n}\n\nexport interface CompCalcEntry {\n  stock: number;\n  stockAdj: number;\n  total: number;\n  totalAdj: number;\n  netDiff: number;\n  grantThen: number;\n  grantNow: number;\n}\n\ninterface PrevStock {\n  cs: number;\n  csa: number;\n  exp: DateObj;\n}\ninterface PrevStockAcc {\n  [key: string]: PrevStock[];\n}\n\ntype CompCalcState = CompEntry[];\n\nexport const compCalcAtom = atom({\n  key: \"compCalcAtom\",\n  default:\n    (JSON.parse(\n      localStorage.getItem(\"comp-calc-atom\") || \"null\",\n    ) as CompCalcState) || [],\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"comp-calc-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\nexport const compCalcReadOnlyState = selector({\n  key: \"compCalcReadOnlyState\",\n  get: ({ get }) => {\n    // access state\n    const compEntries = get(compCalcAtom);\n    const stockEntries = get(stockAtom);\n\n    const prevStockAcc: PrevStockAcc = {};\n\n    const compCalcEntriesNoNet: Omit<CompCalcEntry, \"netDiff\">[] =\n      compEntries.map(\n        ({\n          bonus,\n          entryDate,\n          grantDuration,\n          grantQty,\n          priceThen,\n          salary,\n          stockTick,\n        }) => {\n          const priceNow = stockEntries[stockTick] || 0;\n          const cs = (priceThen * grantQty) / grantDuration;\n          let stock = 0;\n          let stockAdj = 0;\n\n          const csa = (priceNow * grantQty) / grantDuration;\n          const exp = dateHelper(entryDate);\n          exp.year += grantDuration;\n\n          if (!prevStockAcc[stockTick]) {\n            prevStockAcc[stockTick] = [];\n          }\n          if (cs > 0) {\n            prevStockAcc[stockTick].push({ cs, csa, exp });\n          }\n          prevStockAcc[stockTick].forEach((s) => {\n            if (dateHelper(entryDate).diff(s.exp, \"days\") < 0) {\n              stock += s.cs;\n              stockAdj += s.csa;\n            }\n          });\n\n          const total = salary + bonus + stock;\n          const totalAdj = salary + bonus + stockAdj;\n          const grantThen = priceThen * grantQty;\n          const grantNow = priceNow * grantQty;\n\n          return {\n            stock,\n            stockAdj,\n            total,\n            totalAdj,\n            grantThen,\n            grantNow,\n          };\n        },\n      );\n\n    const compCalcEntries: CompCalcEntry[] = compCalcEntriesNoNet.map(\n      ({ totalAdj, ...rest }, i) => {\n        const netDiff =\n          i === 0 ? 0 : totalAdj - compCalcEntriesNoNet[i - 1].totalAdj;\n\n        return { totalAdj, netDiff, ...rest };\n      },\n    );\n\n    return compCalcEntries;\n  },\n});\n\nexport default compCalcAtom;\n","/** use the usDollar.format() function to format a number into a USD string */\nconst usDollar = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nexport default usDollar;\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid2\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  CompCalcEntry,\n  CompEntry,\n} from \"../../../recoil/comp-calculator-state\";\nimport dateObj from \"../../../apis/DateHelper\";\nimport usDollar from \"../../../apis/usdFormatter\";\n\ninterface CompEntryDisplayProps {\n  compEntries: CompEntry[];\n  compCalcEntries: CompCalcEntry[];\n  onClick: (i: number) => () => void;\n}\n\nconst CompEntryDisplay: React.FC<CompEntryDisplayProps> = ({\n  compEntries,\n  compCalcEntries,\n  onClick,\n}) => (\n  <Grid container spacing={1}>\n    <Grid size={12}>\n      <Typography>*value computed from latest stock price above</Typography>\n    </Grid>\n    {compEntries\n      .map((compEntry, i) => {\n        const {\n          entryDate,\n          salary,\n          bonus,\n          stockTick,\n          priceThen,\n          grantDuration,\n          grantQty,\n        } = compEntry;\n        const {\n          stock,\n          stockAdj,\n          total,\n          totalAdj,\n          netDiff,\n          grantThen,\n          grantNow,\n        } = compCalcEntries[i];\n        return (\n          <Grid\n            size={{\n              xs: 12,\n              md: 6,\n              lg: 4,\n              xl: 3,\n              // @ts-expect-error - custom breakpoints\n              xxl: compEntries.length > 4 ? 2 : undefined,\n              xxxl: compEntries.length > 6 ? 1 : undefined,\n            }}\n            key={`comp-calc-entry-${i}`}\n          >\n            <Card>\n              <CardActionArea onClick={onClick(i)}>\n                <Grid container>\n                  <Grid size={stockTick ? 6 : 12}>\n                    <CardHeader title=\"Salary\" />\n                    <CardContent>\n                      <Typography>\n                        Date: {dateObj(entryDate).format(\"MMMM Y\")}\n                      </Typography>\n                      <Typography>Salary: {usDollar.format(salary)}</Typography>\n                      <Typography>Bonus: {usDollar.format(bonus)}</Typography>\n                      <Divider aria-hidden />\n                      <Typography>Stock: {usDollar.format(stock)}</Typography>\n                      <Typography>\n                        *Stock: {usDollar.format(stockAdj)}\n                      </Typography>\n                      <Divider aria-hidden />\n                      <Typography>Total: {usDollar.format(total)}</Typography>\n                      <Typography sx={{ display: \"inline\" }}>\n                        *Total:\n                      </Typography>\n                      <Typography\n                        fontWeight=\"fontWeightBold\"\n                        sx={{ display: \"inline\", marginLeft: 1 }}\n                      >\n                        {usDollar.format(totalAdj)}\n                      </Typography>\n                      {netDiff !== 0 && (\n                        <>\n                          <Divider aria-hidden />\n                          <Typography sx={{ display: \"inline\" }}>\n                            Net:\n                          </Typography>\n                          <Typography\n                            color={netDiff > 0 ? \"success\" : \"error\"}\n                            fontWeight=\"fontWeightBold\"\n                            sx={{ display: \"inline\", marginLeft: 1 }}\n                          >\n                            {usDollar.format(netDiff)}\n                          </Typography>\n                        </>\n                      )}\n                    </CardContent>\n                  </Grid>\n                  {stockTick && (\n                    <Grid size={6}>\n                      <CardHeader title=\"Stock Grant\" />\n                      <CardContent>\n                        <Typography>Ticker: {stockTick}</Typography>\n                        {grantQty > 0 && (\n                          <>\n                            <Typography>\n                              Price: {usDollar.format(priceThen)}\n                            </Typography>\n                            <Typography>Grant Qty: {grantQty}</Typography>\n                            <Typography>\n                              Duration: {grantDuration} years\n                            </Typography>\n                            <Divider aria-hidden />\n                            <Typography>\n                              Grant: {usDollar.format(grantThen)}\n                            </Typography>\n                            <Typography>\n                              *Grant: {usDollar.format(grantNow)}\n                            </Typography>\n                          </>\n                        )}\n                      </CardContent>\n                    </Grid>\n                  )}\n                </Grid>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        );\n      })\n      .reverse()}\n  </Grid>\n);\n\nexport default CompEntryDisplay;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport TextField from \"@mui/material/TextField\";\nimport { TextFieldProps, SelectChangeEvent } from \"@mui/material\";\nimport dateHelper, { months } from \"../../../apis/DateHelper\";\nimport { CompEntry } from \"../../../recoil/comp-calculator-state\";\n\nconst tfProps: TextFieldProps = {\n  variant: \"standard\",\n  fullWidth: true,\n  margin: \"dense\",\n};\n\nconst currentYear = new Date().getFullYear() - 2000;\nconst years: number[] = [];\nfor (let i = 0; i <= currentYear; i += 1) {\n  years.push(2000 + i);\n}\nyears.reverse();\n\ninterface CompEntryDialogProps {\n  open: boolean;\n  compEntry?: CompEntry;\n  onClose: () => void;\n  addCompEntry: (n: CompEntry) => void;\n}\n\nconst CompEntryDialog: React.FC<CompEntryDialogProps> = ({\n  open,\n  compEntry,\n  onClose,\n  addCompEntry,\n}) => {\n  const [entryDateMonth, setEntryDateMonth] = React.useState(\"1\");\n  const [entryDateYear, setEntryDateYear] = React.useState(years[0].toString());\n  const [salary, setSalary] = React.useState(0);\n  const [bonus, setBonus] = React.useState(0);\n  const [stockTick, setStockTick] = React.useState(\"\");\n  const [priceThen, setPriceThen] = React.useState(0);\n  const [grantDuration, setGrantDuration] = React.useState(4);\n  const [grantQty, setGrantQty] = React.useState(0);\n\n  const resetState = () => {\n    setEntryDateMonth(\"1\");\n    setEntryDateYear(years[0].toString());\n    setSalary(0);\n    setBonus(0);\n    setStockTick(\"\");\n    setPriceThen(0);\n    setGrantDuration(4);\n    setGrantQty(0);\n  };\n\n  React.useEffect(() => {\n    if (compEntry) {\n      const { month, year } = dateHelper(compEntry.entryDate);\n      setEntryDateMonth((month + 1).toString());\n      setEntryDateYear(year.toString());\n      setSalary(compEntry.salary);\n      setBonus(compEntry.bonus);\n      setStockTick(compEntry.stockTick);\n      setPriceThen(compEntry.priceThen);\n      setGrantDuration(compEntry.grantDuration);\n      setGrantQty(compEntry.grantQty);\n    } else {\n      resetState();\n    }\n  }, [compEntry, compEntry?.salary]);\n\n  const handleChange =\n    (func: (n: number) => void) => (e: React.ChangeEvent<HTMLInputElement>) =>\n      func(parseFloat(e.target.value));\n  const handleStockTick = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setStockTick(e.target.value);\n  const handleSelectMonth = (e: SelectChangeEvent<string>) =>\n    setEntryDateMonth(e.target.value);\n  const handleSelectYear = (e: SelectChangeEvent<string>) =>\n    setEntryDateYear(e.target.value);\n\n  const handleSubmit = () => {\n    addCompEntry({\n      entryDate: `${entryDateYear}-${entryDateMonth.length < 2 ? \"0\" : \"\"}${entryDateMonth}`,\n      salary,\n      bonus,\n      stockTick,\n      priceThen,\n      grantDuration,\n      grantQty,\n    });\n    resetState();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>{compEntry ? \"Edit\" : \"New\"} Comp Entry</DialogTitle>\n      <DialogContent>\n        <div style={{ display: \"flex\", marginTop: 5 }}>\n          <FormControl fullWidth>\n            <InputLabel id=\"month-select\">Month</InputLabel>\n            <Select\n              labelId=\"month-select\"\n              label=\"Month\"\n              value={entryDateMonth}\n              onChange={handleSelectMonth}\n            >\n              {months.map((month, i) => (\n                <MenuItem value={i + 1} key={i}>\n                  {month}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth>\n            <InputLabel id=\"year-select\">Year</InputLabel>\n            <Select\n              labelId=\"year-select\"\n              label=\"Year\"\n              value={entryDateYear}\n              onChange={handleSelectYear}\n            >\n              {years.map((year) => (\n                <MenuItem value={year} key={year}>\n                  {year}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <TextField\n          label=\"Salary\"\n          value={salary}\n          type=\"number\"\n          onChange={handleChange(setSalary)}\n          slotProps={{ input: { startAdornment: \"$\" } }}\n          {...tfProps}\n        />\n        <TextField\n          label=\"Bonus\"\n          value={bonus}\n          type=\"number\"\n          onChange={handleChange(setBonus)}\n          slotProps={{ input: { startAdornment: \"$\" } }}\n          {...tfProps}\n        />\n        <DialogContentText variant=\"h6\" component=\"h4\" sx={{ marginTop: 7 }}>\n          Stock\n        </DialogContentText>\n        <TextField\n          label=\"Stock Ticker\"\n          value={stockTick}\n          onChange={handleStockTick}\n          {...tfProps}\n        />\n        <TextField\n          label=\"Grant Quantity\"\n          value={grantQty}\n          type=\"number\"\n          onChange={handleChange(setGrantQty)}\n          {...tfProps}\n        />\n        <TextField\n          label=\"Grant Duration\"\n          value={grantDuration}\n          type=\"number\"\n          onChange={handleChange(setGrantDuration)}\n          {...tfProps}\n        />\n        <TextField\n          label=\"Stock Price Then\"\n          value={priceThen}\n          type=\"number\"\n          onChange={handleChange(setPriceThen)}\n          slotProps={{ input: { startAdornment: \"$\" } }}\n          {...tfProps}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button type=\"submit\" onClick={handleSubmit}>\n          {compEntry ? \"Update\" : \"Add\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CompEntryDialog;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport TextField from \"@mui/material/TextField\";\nimport { TextFieldProps } from \"@mui/material\";\n\nconst tfProps: TextFieldProps = {\n  variant: \"standard\",\n  fullWidth: true,\n  margin: \"dense\",\n};\n\ninterface StockDialogProps {\n  open: boolean;\n  price?: number;\n  stock?: string;\n  onClose: () => void;\n  addStockEntry: (s: string, n: number) => void;\n  removeStockEntry: (s: string) => () => void;\n}\n\nconst StockDialog: React.FC<StockDialogProps> = ({\n  open,\n  price: exPrice,\n  stock: exStock,\n  onClose,\n  addStockEntry,\n  removeStockEntry,\n}) => {\n  const [price, setPrice] = React.useState(0);\n  const [stock, setStock] = React.useState(\"\");\n\n  const resetState = () => {\n    setPrice(0);\n    setStock(\"\");\n  };\n\n  React.useEffect(() => {\n    if (exStock && exPrice !== undefined) {\n      setPrice(exPrice);\n      setStock(exStock);\n    } else {\n      resetState();\n    }\n  }, [exPrice, exStock]);\n\n  const handleStockChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setStock(e.target.value);\n\n  const handlePriceChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setPrice(parseFloat(e.target.value));\n\n  const handleSubmit = () => {\n    addStockEntry(stock, price);\n    resetState();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>{exStock ? \"Edit\" : \"New\"} Stock Entry</DialogTitle>\n      <DialogContent>\n        <div style={{ marginTop: 5 }}>\n          <TextField\n            label=\"Stock\"\n            value={stock}\n            onChange={handleStockChange}\n            {...tfProps}\n          />\n          <TextField\n            label=\"Price Now\"\n            value={price}\n            type=\"number\"\n            onChange={handlePriceChange}\n            slotProps={{ input: { startAdornment: \"$\" } }}\n            {...tfProps}\n          />\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={removeStockEntry(stock)} color=\"error\">\n          Delete\n        </Button>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button type=\"submit\" onClick={handleSubmit}>\n          {exStock ? \"Update\" : \"Add\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default StockDialog;\n","import * as React from \"react\";\nimport Chip from \"@mui/material/Chip\";\nimport usDollar from \"../../../apis/usdFormatter\";\nimport { StockState } from \"../../../recoil/stock-atom\";\n\ninterface StockEntryProps {\n  stockEntries: StockState;\n  openStockModal: (s: string) => () => void;\n}\n\nconst StockDisplay: React.FC<StockEntryProps> = ({\n  stockEntries,\n  openStockModal,\n}) => (\n  <div>\n    {Object.keys(stockEntries).map((stockKey, i) => (\n      <Chip\n        key={`stock-entry-${i}`}\n        color=\"primary\"\n        label={`${stockKey}: ${usDollar.format(stockEntries[stockKey])}`}\n        onClick={openStockModal(stockKey)}\n        sx={{ margin: 0.5 }}\n      />\n    ))}\n  </div>\n);\n\nexport default StockDisplay;\n","import * as React from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport highchartsAccessibility from \"highcharts/modules/accessibility\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useRecoilState } from \"recoil\";\nimport themeAtom from \"../../../../recoil/theme-atom\";\nimport {\n  CompCalcEntry,\n  CompEntry,\n} from \"../../../../recoil/comp-calculator-state\";\n\nhighchartsAccessibility(Highcharts); // initiate accessibility module\n\nconst STOCK = 0;\nconst BONUS = 1;\nconst SALARY = 2;\n\ninterface CompChartProps {\n  compCalcEntries: CompCalcEntry[];\n  compEntries: CompEntry[];\n  onClick: (e: Highcharts.SeriesClickEventObject) => void;\n}\n\nconst CompChart: React.FC<CompChartProps> = ({\n  compCalcEntries,\n  compEntries,\n  onClick,\n}) => {\n  const [theme] = useRecoilState(themeAtom);\n  const color = theme.mode === \"light\" ? \"black\" : \"white\";\n\n  const compChartData: number[][] = [[], [], []];\n  compEntries.forEach((cEntry, i) => {\n    compChartData[STOCK].push(\n      compCalcEntries[i].stockAdj || compCalcEntries[i].stock,\n    );\n    compChartData[BONUS].push(cEntry.bonus);\n    compChartData[SALARY].push(cEntry.salary);\n  });\n\n  const options = {\n    chart: { type: \"area\", backgroundColor: null },\n    credits: { enabled: false },\n    legend: { enabled: false },\n    title: { text: \"Total Comp\", style: { color } },\n    xAxis: { visible: false },\n    yAxis: { labels: { style: { color } }, title: { enabled: false } },\n    tooltip: {\n      shared: true,\n      headerFormat: \"<h3>Compensation</h3><br />\",\n      pointFormat:\n        '<span style=\"color:{series.color}\">\\u25CF</span> {series.name}: <b>${point.y:,.2f}</b><br />',\n      footerFormat: \"\\u25CF Total: $<b>{point.total:,.2f}</b>\",\n    },\n    plotOptions: {\n      area: {\n        stacking: \"normal\",\n        lineColor: color,\n        lineWidth: 1,\n        marker: { lineWidth: 1, lineColor: color },\n      },\n      series: { cursor: \"pointer\", events: { click: onClick } },\n    },\n    series: [\n      { name: \"Stock\", data: [...compChartData[STOCK]] },\n      { name: \"Bonus\", data: [...compChartData[BONUS]] },\n      { name: \"Salary\", data: [...compChartData[SALARY]] },\n    ],\n  };\n\n  return (\n    <figure style={{ margin: 0, width: \"100%\" }}>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </figure>\n  );\n};\n\nexport default CompChart;\n","import * as React from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport highchartsAccessibility from \"highcharts/modules/accessibility\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useRecoilState } from \"recoil\";\nimport themeAtom from \"../../../../recoil/theme-atom\";\n\nhighchartsAccessibility(Highcharts); // initiate accessibility module\n\ninterface BreakdownChartProps {\n  bonus: number;\n  salary: number;\n  stock: number;\n}\n\nconst BreakdownChart: React.FC<BreakdownChartProps> = ({\n  bonus,\n  salary,\n  stock,\n}) => {\n  const [theme] = useRecoilState(themeAtom);\n  const color = theme.mode === \"light\" ? \"black\" : \"white\";\n\n  const options = {\n    chart: { type: \"pie\", backgroundColor: null },\n    credits: { enabled: false },\n    legend: { enabled: false },\n    title: { text: \"Comp Breakdown\", style: { color } },\n    tooltip: { pointFormat: \"<b>${point.y:,.2f}</b>\" },\n    plotOptions: {\n      series: {\n        allowPointSelect: true,\n        cursor: \"pointer\",\n        dataLabels: [\n          { enabled: true, format: \"{point.name}\" },\n          {\n            enabled: true,\n            distance: -30,\n            format: \"{point.percentage:.0f}%\",\n            style: { fontSize: \"1em\" },\n          },\n        ],\n      },\n    },\n    series: [\n      {\n        data: [\n          { name: \"Stock\", y: stock },\n          { name: \"Bonus\", y: bonus },\n          { name: \"Salary\", y: salary },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <figure style={{ margin: 0, width: \"100%\" }}>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </figure>\n  );\n};\n\nexport default BreakdownChart;\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid2\";\nimport CompChart from \"./CompGraph\";\nimport BreakdownChart from \"./BreakdownGraph\";\nimport {\n  CompCalcEntry,\n  CompEntry,\n} from \"../../../../recoil/comp-calculator-state\";\nimport { SeriesClickEventObject } from \"highcharts\";\n\ninterface GraphsProps {\n  compCalcEntries: CompCalcEntry[];\n  compEntries: CompEntry[];\n}\n\nconst Graphs: React.FC<GraphsProps> = ({ compEntries, compCalcEntries }) => {\n  const { stock, stockAdj } = compCalcEntries[compCalcEntries.length - 1];\n  const { bonus, salary } = compEntries[compEntries.length - 1];\n\n  const [cStock, setStock] = React.useState(stockAdj || stock);\n  const [cBonus, setBonus] = React.useState(bonus);\n  const [cSalary, setSalary] = React.useState(salary);\n\n  React.useEffect(() => {\n    setStock(stockAdj || stock);\n    setBonus(bonus);\n    setSalary(salary);\n  }, [stockAdj, stock, bonus, salary]);\n\n  const handleClick = (e: SeriesClickEventObject) => {\n    const { stock, stockAdj } = compCalcEntries[e.point.index];\n    const { bonus, salary } = compEntries[e.point.index];\n    setStock(stockAdj || stock);\n    setBonus(bonus);\n    setSalary(salary);\n  };\n\n  return (\n    <Grid container>\n      <Grid size={{ xs: 12, md: 6, lg: 8, xl: 9 }}>\n        <CompChart\n          compCalcEntries={compCalcEntries}\n          compEntries={compEntries}\n          onClick={handleClick}\n        />\n      </Grid>\n      <Grid size={{ xs: 12, md: 6, lg: 4, xl: 3 }}>\n        <BreakdownChart stock={cStock} bonus={cBonus} salary={cSalary} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Graphs;\n","import * as React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport compCalcState, {\n  CompEntry,\n  compCalcReadOnlyState,\n} from \"../../../recoil/comp-calculator-state\";\nimport CompEntryDisplay from \"./CompEntryDisplay\";\nimport CompEntryDialog from \"./CompEntryDialog\";\nimport StockDialog from \"./StockDialog\";\nimport stockAtom from \"../../../recoil/stock-atom\";\nimport StockDisplay from \"./StockDisplay\";\nimport Graphs from \"./graphs/Graphs\";\n\nconst CompCalculator = () => {\n  const [compEntries, setCompEntries] = useRecoilState(compCalcState);\n  const compCalcEntries = useRecoilValue(compCalcReadOnlyState);\n  const [stockEntries, setStockEntries] = useRecoilState(stockAtom);\n  const [openEntry, setOpenEntry] = React.useState(false);\n  const [openStock, setOpenStock] = React.useState(false);\n  const [editEntryIdx, setEditEntryIdx] = React.useState(-1);\n  const [editStockTick, setEditStockTick] = React.useState(\"\");\n\n  // entry open/closers\n  const closeEntryModal = () => setOpenEntry(false);\n  const openNewEntry = () => {\n    setEditEntryIdx(-1);\n    setOpenEntry(true);\n  };\n  const openEditEntry = (i: number) => () => {\n    setEditEntryIdx(i);\n    setOpenEntry(true);\n  };\n\n  // stock open/closers\n  const closeStockModal = () => setOpenStock(false);\n  const openNewStock = () => {\n    setEditStockTick(\"\");\n    setOpenStock(true);\n  };\n  const openEditStock = (s: string) => () => {\n    setEditStockTick(s);\n    setOpenStock(true);\n  };\n\n  const addCompEntry = (compEntry: CompEntry) => {\n    const newCompEntries = [...compEntries];\n    if (editEntryIdx === -1) {\n      newCompEntries.push(compEntry);\n    } else {\n      newCompEntries[editEntryIdx] = compEntry;\n    }\n    setCompEntries(newCompEntries);\n    closeEntryModal();\n  };\n\n  const addStockEntry = (stock: string, price: number) => {\n    const newStockEntries = { ...stockEntries };\n    newStockEntries[stock] = price;\n    setStockEntries(newStockEntries);\n    closeStockModal();\n  };\n\n  const removeStockEntry = (stock: string) => () => {\n    const newStockEntries = { ...stockEntries };\n    delete newStockEntries[stock];\n    setStockEntries(newStockEntries);\n    closeStockModal();\n  };\n\n  return (\n    <>\n      <Typography variant=\"h2\" component=\"h1\">\n        Comp Calculator\n      </Typography>\n      <div\n        className=\"flex-container\"\n        style={{ marginTop: 10, marginBottom: 10 }}\n      >\n        <StockDisplay\n          stockEntries={stockEntries}\n          openStockModal={openEditStock}\n        />\n        <div>\n          <Button onClick={openNewStock}>+ Stock</Button>\n          <Button onClick={openNewEntry}>+ Entry</Button>\n        </div>\n      </div>\n      {compEntries.length > 0 && (\n        <>\n          <Graphs compEntries={compEntries} compCalcEntries={compCalcEntries} />\n          <CompEntryDisplay\n            compEntries={compEntries}\n            compCalcEntries={compCalcEntries}\n            onClick={openEditEntry}\n          />\n        </>\n      )}\n      <StockDialog\n        open={openStock}\n        price={editStockTick ? stockEntries[editStockTick] : undefined}\n        stock={editStockTick}\n        onClose={closeStockModal}\n        addStockEntry={addStockEntry}\n        removeStockEntry={removeStockEntry}\n      />\n      <CompEntryDialog\n        open={openEntry}\n        compEntry={editEntryIdx !== -1 ? compEntries[editEntryIdx] : undefined}\n        onClose={closeEntryModal}\n        addCompEntry={addCompEntry}\n      />\n    </>\n  );\n};\n\nexport default CompCalculator;\n"],"names":["getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","useUtilityClasses","ownerState","classes","composedClasses","composeClasses","DialogContentTextRoot","styled","Typography","prop","rootShouldForwardProp","props","styles","DialogContentText","React.forwardRef","inProps","ref","useDefaultProps","children","className","clsx","initialState","stockAtom","atom","onSet","state","compCalcAtom","compCalcReadOnlyState","selector","get","compEntries","stockEntries","prevStockAcc","compCalcEntriesNoNet","bonus","entryDate","grantDuration","grantQty","priceThen","salary","stockTick","priceNow","cs","stock","stockAdj","csa","exp","dateHelper","s","total","totalAdj","grantThen","grantNow","rest","i","netDiff","usDollar","CompEntryDisplay","compCalcEntries","onClick","jsxs","Grid","jsx","compEntry","Card","CardActionArea","CardHeader","CardContent","dateObj","Divider","Fragment","tfProps","currentYear","years","CompEntryDialog","open","onClose","addCompEntry","entryDateMonth","setEntryDateMonth","React.useState","entryDateYear","setEntryDateYear","setSalary","setBonus","setStockTick","setPriceThen","setGrantDuration","setGrantQty","resetState","React.useEffect","month","year","handleChange","func","e","handleStockTick","handleSelectMonth","handleSelectYear","handleSubmit","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","Select","months","MenuItem","TextField","DialogActions","Button","StockDialog","exPrice","exStock","addStockEntry","removeStockEntry","price","setPrice","setStock","handleStockChange","handlePriceChange","StockDisplay","openStockModal","stockKey","Chip","highchartsAccessibility","Highcharts","STOCK","BONUS","SALARY","CompChart","theme","useRecoilState","themeAtom","color","compChartData","cEntry","options","HighchartsReact","BreakdownChart","Graphs","cStock","cBonus","cSalary","handleClick","CompCalculator","setCompEntries","compCalcState","useRecoilValue","setStockEntries","openEntry","setOpenEntry","openStock","setOpenStock","editEntryIdx","setEditEntryIdx","editStockTick","setEditStockTick","closeEntryModal","openNewEntry","openEditEntry","closeStockModal","openNewStock","openEditStock","newCompEntries","newStockEntries"],"mappings":"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","x_google_ignoreList":[0,1]}