{"version":3,"file":"Degree-OxVQXJpt.js","sources":["../../src/components/common/edu-cards/Class.tsx","../../src/components/common/edu-cards/Quarter.tsx","../../src/components/common/edu-cards/Year.tsx","../../src/components/common/edu-cards/Degree.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nexport interface ClassProps {\n  name: string;\n  catalog?: string;\n}\n\n/** Degree  -> Year  ->  Quarter  ->  Class */\nconst Class: React.FC<ClassProps> = React.memo(\n  ({ name, catalog }: ClassProps) => (\n    <li>\n      <Typography>\n        {catalog && <strong>{`${catalog} - `}</strong>}\n        {name}\n      </Typography>\n    </li>\n  ),\n);\n\nClass.displayName = \"Class\";\n\nexport default Class;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Class, { ClassProps } from \"./Class\";\n\nexport interface QuarterType {\n  classes: ClassProps[];\n  quarter: string;\n}\ninterface QuarterProps {\n  quarter: QuarterType;\n}\n\n/** Degree  -> Year  ->  Quarter  ->  Class */\nconst Quarter: React.FC<QuarterProps> = ({ quarter }: QuarterProps) => (\n  <>\n    <Typography variant=\"h5\" component=\"h3\">\n      {quarter.quarter}\n    </Typography>\n    <ul>\n      {quarter.classes.map((c) => (\n        <Class key={c.name} name={c.name} catalog={c.catalog} />\n      ))}\n    </ul>\n  </>\n);\n\nexport default Quarter;\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid2\";\nimport Typography from \"@mui/material/Typography\";\nimport Quarter, { QuarterType } from \"./Quarter\";\n\nexport interface YearType {\n  year: string;\n  quarters: QuarterType[];\n}\ninterface YearProps {\n  len: number;\n  year: YearType;\n}\n\n/** Degree  -> Year  ->  Quarter  ->  Class */\nconst Year: React.FC<YearProps> = ({ year, len }: YearProps) => (\n  <Grid size={{ xs: 12, md: Math.ceil(12 / len) }}>\n    <Typography variant=\"h4\" component=\"h2\">\n      {year.year}\n    </Typography>\n    <hr aria-hidden />\n    {year.quarters.map((quarter, i) => (\n      <Quarter key={`${quarter.quarter}-${i}`} quarter={quarter} />\n    ))}\n  </Grid>\n);\n\nexport default Year;\n","import * as React from \"react\";\nimport Year, { YearType } from \"./Year\";\nimport ExpandableCard from \"../expandable-card\";\n\nexport interface DegreeType {\n  school?: string;\n  major?: string;\n  minor?: string;\n  degree: string;\n  subtitle?: string;\n  color?: string;\n  years: YearType[];\n}\ninterface DegreeProps {\n  degree: DegreeType;\n}\n\nconst getTitles = (degree: DegreeType): { title: string; subtitle: string } => {\n  const school = degree.school ? `${degree.school} - ` : \"\";\n  const major = degree.major ? ` in ${degree.major}` : \"\";\n  const minor = degree.minor ? `, ${degree.minor}` : \"\";\n  const title = `${school}${degree.degree}${major}${minor}`;\n  const subtitle = degree.subtitle || \"\";\n\n  return { title, subtitle };\n};\n\n/** Degree  -> Year  ->  Quarter  ->  Class */\nconst Degree: React.FC<DegreeProps> = (props: DegreeProps) => {\n  const { degree } = props;\n  const { title, subtitle } = getTitles(degree);\n\n  return (\n    <ExpandableCard\n      backgroundColor={degree.color && degree.color}\n      subtitle={subtitle}\n      title={title}\n    >\n      {degree.years.map((year) => (\n        <Year key={year.year} len={degree.years.length} year={year} />\n      ))}\n    </ExpandableCard>\n  );\n};\n\nexport default Degree;\n"],"names":["Class","React.memo","name","catalog","jsx","Typography","Quarter","quarter","jsxs","Fragment","c","Year","year","len","Grid","i","getTitles","degree","school","major","minor","title","subtitle","Degree","props","ExpandableCard"],"mappings":"iLASA,MAAMA,EAA8BC,EAAM,KACxC,CAAC,CAAE,KAAAC,EAAM,QAAAC,KACNC,MAAA,KAAA,CACC,gBAACC,EACE,CAAA,SAAA,CAAAF,GAAYC,EAAAA,IAAA,SAAA,CAAQ,SAAG,GAAAD,CAAO,MAAM,EACpCD,CAAA,CAAA,CACH,CACF,CAAA,CAEJ,EAEAF,EAAM,YAAc,QCPpB,MAAMM,EAAkC,CAAC,CAAE,QAAAC,CAAA,IAEvCC,EAAAA,KAAAC,EAAAA,SAAA,CAAA,SAAA,CAAAL,MAACC,GAAW,QAAQ,KAAK,UAAU,KAChC,WAAQ,QACX,QACC,KACE,CAAA,SAAAE,EAAQ,QAAQ,IAAKG,GACnBN,EAAAA,IAAAJ,EAAA,CAAmB,KAAMU,EAAE,KAAM,QAASA,EAAE,SAAjCA,EAAE,IAAwC,CACvD,EACH,CAAA,EACF,ECRIC,EAA4B,CAAC,CAAE,KAAAC,EAAM,IAAAC,CAAI,WAC5CC,EAAK,CAAA,KAAM,CAAE,GAAI,GAAI,GAAI,KAAK,KAAK,GAAKD,CAAG,CAC1C,EAAA,SAAA,CAAAT,MAACC,GAAW,QAAQ,KAAK,UAAU,KAChC,WAAK,KACR,EACAD,EAAAA,IAAC,KAAG,CAAA,cAAW,EAAC,CAAA,EACfQ,EAAK,SAAS,IAAI,CAACL,EAASQ,IAC3BX,EAAAA,IAACE,EAAwC,CAAA,QAAAC,CAAA,EAA3B,GAAGA,EAAQ,OAAO,IAAIQ,CAAC,EAAsB,CAC5D,CAAA,EACH,ECPIC,EAAaC,GAA4D,CAC7E,MAAMC,EAASD,EAAO,OAAS,GAAGA,EAAO,MAAM,MAAQ,GACjDE,EAAQF,EAAO,MAAQ,OAAOA,EAAO,KAAK,GAAK,GAC/CG,EAAQH,EAAO,MAAQ,KAAKA,EAAO,KAAK,GAAK,GAC7CI,EAAQ,GAAGH,CAAM,GAAGD,EAAO,MAAM,GAAGE,CAAK,GAAGC,CAAK,GACjDE,EAAWL,EAAO,UAAY,GAE7B,MAAA,CAAE,MAAAI,EAAO,SAAAC,EAClB,EAGMC,EAAiCC,GAAuB,CACtD,KAAA,CAAE,OAAAP,CAAW,EAAAO,EACb,CAAE,MAAAH,EAAO,SAAAC,CAAS,EAAIN,EAAUC,CAAM,EAG1C,OAAAb,EAAA,IAACqB,EAAA,CACC,gBAAiBR,EAAO,OAASA,EAAO,MACxC,SAAAK,EACA,MAAAD,EAEC,SAAOJ,EAAA,MAAM,IAAKL,GAChBR,EAAAA,IAAAO,EAAA,CAAqB,IAAKM,EAAO,MAAM,OAAQ,KAAAL,CAArC,EAAAA,EAAK,IAA4C,CAC7D,CAAA,CAAA,CAGP"}