{"version":3,"file":"index-CFPKbYsN.js","sources":["../../src/jotai/spades-atom.ts","../../src/components/games/spades/control-bar/AddBidPlayer.tsx","../../src/components/games/spades/control-bar/AddBid.tsx","../../src/components/games/spades/control-bar/AddPenalty.tsx","../../src/components/games/spades/control-bar/AddScorePlayer.tsx","../../src/components/games/spades/control-bar/AddScore.tsx","../../src/components/games/spades/control-bar/StatsBagsChart.tsx","../../src/components/games/spades/spadesHelpers.ts","../../src/components/games/spades/control-bar/StatsNilsChart.tsx","../../src/components/games/spades/control-bar/ShowStats.tsx","../../src/components/games/spades/control-bar/ControlBar.tsx","../../src/components/games/spades/ScoreTable.tsx","../../src/components/games/spades/useSpades.ts","../../src/components/games/spades/Header.tsx","../../src/components/games/spades/Spades.tsx"],"sourcesContent":["import { atomWithStorage } from \"jotai/utils\";\n\nexport const MIN_BID = 0;\nexport const MAX_BID = 13;\n\ninterface Bid {\n  bid: number;\n  blind: boolean;\n  train: boolean;\n}\n/** each Bid contains bid: number; blind: boolean; train: boolean; */\nexport type Bids = [Bid, Bid, Bid, Bid];\n/** player nils [bid, blind, won] */\nexport type NilMetrics = [\n  [number, number, number],\n  [number, number, number],\n  [number, number, number],\n  [number, number, number],\n];\n\nexport interface ScoreRow {\n  /** initial of who went first */\n  start: string;\n  /** Bids converted to a string */\n  bid: string;\n  /** team 1's score */\n  score1?: number;\n  /** team 1's bags */\n  bags1?: number;\n  /** team 1's lost point modifiers */\n  mod1?: string;\n  /** team 2's score */\n  score2?: number;\n  /** team 2's bags */\n  bags2?: number;\n  /** team 2's lost point modifiers */\n  mod2?: string;\n}\n\ninterface SpadesState {\n  /** score table, updates on +Score & +Bid, resets over games */\n  data: ScoreRow[];\n  /** 0, 1, 2, 3, updates on +Score, persists over games */\n  first: number;\n  /** recent bids */\n  lastBid: Bids;\n  /** over bid tracker over time */\n  lifeBags: [number, number, number, number, number];\n  /** over bid tracker over time */\n  missedBids: [number, number, number, number];\n  /** team 1 wins */\n  wins1: number;\n  /** team 2 wins */\n  wins2: number;\n  /** team 1 running total */\n  total1: number;\n  /** team 2 running total */\n  total2: number;\n  /** player nils [bid, blind, won] */\n  nils: NilMetrics;\n}\n\nexport const defaultBid: Bid = { bid: 3, blind: false, train: false };\nconst initialState: SpadesState = {\n  data: [],\n  first: 0,\n  lastBid: [defaultBid, defaultBid, defaultBid, defaultBid],\n  lifeBags: [0, 0, 0, 0, 0],\n  missedBids: [0, 0, 0, 0],\n  wins1: 0,\n  wins2: 0,\n  total1: 0,\n  total2: 0,\n  nils: [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0],\n  ],\n};\n\nconst spadesAtom = atomWithStorage(\"spadesAtom\", initialState);\n\nexport default spadesAtom;\n","import * as React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Switch from \"@mui/material/Switch\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Add from \"@mui/icons-material/Add\";\nimport Remove from \"@mui/icons-material/Remove\";\nimport { MAX_BID, MIN_BID } from \"../../../../jotai/spades-atom\";\n\ninterface AddBidPlayerProps {\n  id: string;\n  blindTrade: number;\n  canTrain?: boolean;\n  bid: number;\n  blind: boolean;\n  train: boolean;\n  onBid: (bid: number, blind: boolean, train: boolean) => void;\n}\n\nconst AddBidPlayer = ({\n  id,\n  blindTrade,\n  canTrain,\n  bid,\n  blind,\n  train,\n  onBid,\n}: AddBidPlayerProps) => {\n  const decrBid = () => onBid(Math.max(bid - 1, MIN_BID), false, false);\n  const incrBid = () => onBid(Math.min(bid + 1, MAX_BID), false, false);\n\n  const handleBlind = (\n    _e: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean,\n  ) => onBid(bid, checked, false);\n\n  const handleTrain = (\n    _e: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean,\n  ) => onBid(bid, false, checked);\n\n  return (\n    <TableRow>\n      <TableCell>{id}</TableCell>\n      <TableCell align=\"center\">\n        <IconButton onClick={decrBid} disabled={bid <= MIN_BID}>\n          <Remove />\n        </IconButton>\n        {bid}\n        <IconButton onClick={incrBid} disabled={bid >= MAX_BID}>\n          <Add />\n        </IconButton>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Switch\n          checked={blind}\n          slotProps={{ input: { \"aria-label\": `P${id} Blind Nil` } }}\n          onChange={handleBlind}\n          size=\"small\"\n        />\n        {blindTrade || blind ? blindTrade : \"\"}\n      </TableCell>\n      <TableCell align=\"right\">\n        {canTrain ? (\n          <Switch\n            checked={train}\n            slotProps={{ input: { \"aria-label\": `P${id} Trains` } }}\n            onChange={handleTrain}\n            size=\"small\"\n          />\n        ) : null}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default AddBidPlayer;\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport InfoPopup from \"../../../common/info-popover/InfoPopup\";\nimport AddBidPlayer from \"./AddBidPlayer\";\nimport { Bids, defaultBid } from \"../../../../jotai/spades-atom\";\n\ninterface AddBidProps {\n  blindTrade: number;\n  first: number;\n  initials: string;\n  onBidSave: (bids: Bids) => void;\n}\n\nconst getBlindTrade = (blindTrade: number, n: number) =>\n  (blindTrade < 0 && (n === 0 || n === 2)) ||\n  (blindTrade > 0 && (n === 1 || n === 3))\n    ? Math.min(Math.abs(blindTrade), 3)\n    : 0;\n\nconst AddBid = ({ blindTrade, first, initials, onBidSave }: AddBidProps) => {\n  const [bids, setBids] = React.useState<Bids>([\n    defaultBid,\n    defaultBid,\n    defaultBid,\n    defaultBid,\n  ]);\n\n  const a = (first + 0) % 4;\n  const b = (first + 1) % 4;\n  const c = (first + 2) % 4;\n  const d = (first + 3) % 4;\n\n  const handleBid =\n    (n: number) => (bid: number, blind: boolean, train: boolean) => {\n      let newBid = { bid, blind, train };\n      if (blind) {\n        newBid = { bid: 0, blind, train: false };\n      } else if (train) {\n        let trainBid = 10;\n        switch (n) {\n          case a:\n            trainBid -= bids[c].bid;\n            break;\n          case b:\n            trainBid -= bids[d].bid;\n            break;\n          case c:\n            trainBid -= bids[a].bid;\n            break;\n          case d:\n          default:\n            trainBid -= bids[b].bid;\n        }\n        newBid = {\n          bid: trainBid,\n          blind: false,\n          train,\n        };\n      } else {\n        newBid = { bid, blind: false, train: false };\n      }\n      const newBids: Bids = [...bids];\n      newBids[n] = newBid;\n      setBids(newBids);\n    };\n\n  const handleSave = () => {\n    onBidSave(bids);\n    setBids([defaultBid, defaultBid, defaultBid, defaultBid]);\n  };\n\n  const bags = bids.reduce((acc, bid) => acc - bid.bid, 13);\n\n  return (\n    <InfoPopup title=\"+ Bid\" onSave={handleSave}>\n      <Table aria-label=\"Bid Table\" padding=\"none\">\n        <TableHead>\n          <TableRow>\n            <TableCell width={\"20%\"}>P</TableCell>\n            <TableCell width={\"40%\"} align=\"center\">\n              Bid ({bags} 💰)\n            </TableCell>\n            <TableCell width={\"20%\"} align=\"center\">\n              🦮\n            </TableCell>\n            <TableCell width={\"20%\"} align=\"center\">\n              🚂\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <AddBidPlayer\n            id={initials[a] + \" 🥇\"}\n            {...bids[a]}\n            onBid={handleBid(a)}\n            blindTrade={getBlindTrade(blindTrade, a)}\n          />\n          <AddBidPlayer\n            id={initials[b]}\n            {...bids[b]}\n            onBid={handleBid(b)}\n            blindTrade={getBlindTrade(blindTrade, b)}\n          />\n          <AddBidPlayer\n            canTrain={0 < bids[a].bid && bids[a].bid < 10}\n            id={initials[c]}\n            {...bids[c]}\n            blindTrade={getBlindTrade(blindTrade, c)}\n            onBid={handleBid(c)}\n          />\n          <AddBidPlayer\n            canTrain={0 < bids[b].bid && bids[b].bid < 10}\n            id={initials[d] + \" 🃏\"}\n            {...bids[d]}\n            blindTrade={getBlindTrade(blindTrade, d)}\n            onBid={handleBid(d)}\n          />\n        </TableBody>\n      </Table>\n    </InfoPopup>\n  );\n};\n\nexport default AddBid;\n","import Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport InfoPopup from \"../../../common/info-popover/InfoPopup\";\n\ninterface AddPenaltyProps {\n  initials: string;\n  onPenalty: (team: number) => () => void;\n}\n\nconst AddPenalty = ({ initials, onPenalty }: AddPenaltyProps) => (\n  <InfoPopup title=\"Penalty\" buttonVariant=\"outlined\" buttonColor=\"error\">\n    <Grid container spacing={2}>\n      <Grid size={6}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"error\"\n          onClick={onPenalty(0)}\n        >\n          Team {initials[0] + initials[2]}\n        </Button>\n      </Grid>\n      <Grid size={6}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"error\"\n          onClick={onPenalty(1)}\n        >\n          Team {initials[1] + initials[3]}\n        </Button>\n      </Grid>\n    </Grid>\n  </InfoPopup>\n);\n\nexport default AddPenalty;\n","import * as React from \"react\";\nimport Add from \"@mui/icons-material/Add\";\nimport Grid from \"@mui/material/Grid\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Remove from \"@mui/icons-material/Remove\";\nimport Typography from \"@mui/material/Typography\";\nimport { MAX_BID, MIN_BID } from \"../../../../jotai/spades-atom\";\n\ninterface AddScorePlayerProps {\n  initial: string;\n  lastBid: number;\n  made: number;\n  setMade: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst AddScorePlayer = ({\n  initial,\n  lastBid,\n  made,\n  setMade,\n}: AddScorePlayerProps) => {\n  const decrMade = () => setMade(Math.max(made - 1, MIN_BID));\n  const incrMade = () => setMade(Math.min(made + 1, MAX_BID));\n\n  return (\n    <Grid size={6}>\n      <Typography>\n        {initial} Bid: {lastBid}\n      </Typography>\n      <div>\n        Made:\n        <IconButton onClick={decrMade} disabled={made <= MIN_BID}>\n          <Remove aria-label=\"decrease\" />\n        </IconButton>\n        {made}\n        <IconButton onClick={incrMade} disabled={made >= MAX_BID}>\n          <Add aria-label=\"increase\" />\n        </IconButton>\n      </div>\n    </Grid>\n  );\n};\n\nexport default AddScorePlayer;\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport InfoPopup from \"../../../common/info-popover/InfoPopup\";\nimport { Bids } from \"../../../../jotai/spades-atom\";\nimport AddScorePlayer from \"./AddScorePlayer\";\n\ninterface AddScoreProps {\n  initials: string;\n  lastBid: Bids;\n  onScoreSave: (mades: [number, number, number, number]) => void;\n}\n\nconst AddScore = ({ initials, lastBid, onScoreSave }: AddScoreProps) => {\n  const [made0, setMade0] = React.useState(3);\n  const [made1, setMade1] = React.useState(3);\n  const [made2, setMade2] = React.useState(3);\n  const [made3, setMade3] = React.useState(3);\n\n  const total = made0 + made1 + made2 + made3;\n\n  const handleAddScore = () => {\n    onScoreSave([made0, made1, made2, made3]);\n    setMade0(3);\n    setMade1(3);\n    setMade2(3);\n    setMade3(3);\n  };\n\n  const handleSave = total === 13 ? handleAddScore : undefined;\n\n  return (\n    <InfoPopup title=\"+ Score\" onSave={handleSave}>\n      <Typography\n        color={total === 13 ? \"success\" : \"warning\"}\n        align=\"center\"\n        marginBottom={1}\n      >\n        {total !== 13 && \"⚠️\"} Tricks: {total}\n      </Typography>\n      <Grid container spacing={2}>\n        <AddScorePlayer\n          initial={initials[0]}\n          lastBid={lastBid[0].bid}\n          made={made0}\n          setMade={setMade0}\n        />\n        <AddScorePlayer\n          initial={initials[1]}\n          lastBid={lastBid[1].bid}\n          made={made1}\n          setMade={setMade1}\n        />\n        <AddScorePlayer\n          initial={initials[2]}\n          lastBid={lastBid[2].bid}\n          made={made2}\n          setMade={setMade2}\n        />\n        <AddScorePlayer\n          initial={initials[3]}\n          lastBid={lastBid[3].bid}\n          made={made3}\n          setMade={setMade3}\n        />\n      </Grid>\n    </InfoPopup>\n  );\n};\n\nexport default AddScore;\n","import * as React from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport \"highcharts/modules/accessibility\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nexport interface StatsBagsChartProps {\n  initials: string;\n  lifeBags: [number, number, number, number, number];\n  missedBids: [number, number, number, number];\n  color: string;\n}\n\nconst StatsBagsChart = React.memo(\n  ({ initials, lifeBags, missedBids, color }: StatsBagsChartProps) => {\n    const expBid = Math.round(lifeBags[lifeBags.length - 1]);\n\n    const options = {\n      accessibility: { enabled: true },\n      chart: {\n        zooming: { type: \"xy\" },\n        height: 340,\n        backgroundColor: null,\n      },\n      credits: { enabled: false },\n      legend: { enabled: false },\n      plotOptions: {\n        column: { pointPadding: 0 },\n        series: { marker: { enabled: false }, lineWidth: 2 },\n      },\n      title: { text: \"Bags\", style: { color } },\n      tooltip: { shared: true },\n      xAxis: {\n        crosshair: true,\n        categories: initials.split(\"\"),\n        lineColor: color,\n        labels: { style: { color } },\n      },\n      yAxis: {\n        floor: 0,\n        gridLineDashStyle: \"Dot\",\n        allowDecimals: false,\n        title: { text: undefined },\n        lineColor: color,\n        labels: { style: { color } },\n      },\n      series: [\n        {\n          name: \"💰\",\n          type: \"column\",\n          data: lifeBags.slice(0, -1),\n        },\n        {\n          name: \"🎰\",\n          type: \"column\",\n          data: missedBids,\n        },\n        {\n          name: \"✅\",\n          type: \"spline\",\n          data: [expBid, expBid, expBid, expBid],\n          color: color,\n          lineWidth: 5,\n        },\n      ],\n    };\n\n    return (\n      <figure style={{ margin: 0, width: \"100%\" }}>\n        <HighchartsReact highcharts={Highcharts} options={options} />\n      </figure>\n    );\n  },\n);\n\nStatsBagsChart.displayName = \"StatsBagsChart\";\n\nexport default StatsBagsChart;\n","import { Bids, NilMetrics } from \"../../../jotai/spades-atom\";\n\n/** defined in spades-atom\n * bid: number;\n * blind: boolean;\n * train: boolean;\n * made: number;\n */\ninterface ScoreData {\n  bid: number;\n  blind: boolean;\n  train: boolean;\n  made: number;\n}\n\n/** convert Bids to string for smaller storage */\nexport const bidsToString = (bids: Bids): string =>\n  bids.reduce((acc, b) => {\n    if (b.train) {\n      return acc + \"🚂\";\n    } else if (b.blind) {\n      return acc + \"🦮\";\n    } else if (b.bid === 0) {\n      return acc + \"🚫\";\n    } else if (b.bid >= 10) {\n      return acc + `,${b.bid},`;\n    } else {\n      return acc + b.bid.toString();\n    }\n  }, \"\");\n\n/** get and update score from Bids and made values */\nexport const getScore = (\n  p1: ScoreData,\n  p2: ScoreData,\n  score: number,\n  bags: number,\n): { score: number; bags: number; mod?: string } => {\n  let newScore = 0;\n  let newBags = 0;\n  let mod = \"\";\n\n  // double blind nil\n  if (p1.blind && p2.blind) {\n    if (p1.made === 0 && p2.made === 0) {\n      // win\n      newScore = 80;\n    } else {\n      // lose\n      newBags = p1.made + p2.made;\n      mod = \"🚫🚫\";\n    }\n    // double nil\n  } else if (p1.bid === 0 && p2.bid === 0) {\n    // 1 blind 1 normal\n    if (p1.blind || p2.blind) {\n      if (p1.made === 0 && p2.made === 0) {\n        // win\n        newScore = 60;\n      } else if ((p1.blind && p1.made === 0) || (p2.blind && p2.made === 0)) {\n        // blind win\n        newScore = 30;\n        newBags = p1.made + p2.made;\n        mod = \"🚫\";\n      } else if (p1.made === 0 || p2.made === 0) {\n        // normal win\n        newBags = p1.made + p2.made;\n        mod = \"🚫\";\n      } else {\n        // lose\n        newScore = -30;\n        newBags = p1.made + p2.made;\n        mod = \"🚫🚫\";\n      }\n      // 2 normal\n    } else if (p1.made === 0 && p2.made === 0) {\n      // win\n      newScore = 40;\n    } else if (p1.made === 0 || p2.made === 0) {\n      // half win\n      newBags = p1.made + p2.made;\n      mod = \"🚫\";\n    } else {\n      // lose\n      newScore = -20;\n      newBags = p1.made + p2.made;\n      mod = \"🚫🚫\";\n    }\n    // trains\n  } else if (p1.train || p2.train) {\n    if (p1.made + p2.made >= 10) {\n      // win\n      newScore = 20;\n      newBags = p1.made + p2.made - 10;\n    } else {\n      // lose\n      newScore = -20;\n      mod = \"🚂\";\n    }\n  } else {\n    // eval nils\n    if (p1.bid === 0) {\n      if (p1.made === 0) {\n        // win\n        newScore += p1.blind ? 20 : 10;\n      } else {\n        // lose\n        newScore -= 10;\n        newBags += p1.made;\n        mod = \"🚫\";\n      }\n    } else if (p2.bid === 0) {\n      if (p2.made === 0) {\n        // win\n        newScore += p2.blind ? 20 : 10;\n      } else {\n        // lose\n        newScore -= 10;\n        newBags += p2.made;\n        mod = \"🚫\";\n      }\n    }\n    // eval group score\n    const teamBid = p1.bid + p2.bid;\n    const teamMade = (p1.bid > 0 ? p1.made : 0) + (p2.bid > 0 ? p2.made : 0);\n    if (teamMade >= teamBid) {\n      // win\n      newScore += teamBid;\n      newBags += teamMade - teamBid;\n    } else {\n      // lose\n      newScore -= teamBid;\n      mod += \"🎰\";\n    }\n  }\n  // check for bag out\n  while (bags + newBags >= 10) {\n    newScore -= 9;\n    newBags -= 10;\n    mod += \"💰\";\n  }\n  // return\n  return { score: score + newScore, bags: bags + newBags, mod };\n};\n\n/** add the penalty then handle bag out if needed */\nexport const penaltyHelper = (s: number, b: number, m?: string) => {\n  // add bags\n  let bags = b + 3;\n  let mod = (m || \"\") + \"😈\";\n  let score = s;\n  // check for bag out\n  if (bags >= 10) {\n    score -= 9;\n    bags -= 10;\n    mod += \"💰\";\n  }\n  // return;\n  return { score, bags, mod };\n};\n\nexport const getChipColor = (a: number, b: number) => {\n  if (a === b) {\n    return \"default\";\n  }\n  return a > b ? \"success\" : \"error\";\n};\n\n/** Get Metrics, and return new lifeBags and Nils */\nexport const getMetrics = (\n  nils: NilMetrics,\n  lifeBags: [number, number, number, number, number],\n  first: number,\n  lastBid: Bids,\n  mades: [number, number, number, number],\n  missedBids: [number, number, number, number],\n) => {\n  // New variables stored to state\n  const newNils: NilMetrics = [...nils];\n  const newMissedBids: [number, number, number, number] = [...missedBids];\n  const newLifeBags: [number, number, number, number, number] = [...lifeBags];\n  // get order relative to first\n  const a = first;\n  const b = (first + 1) % 4;\n  const c = (first + 2) % 4;\n  const d = (first + 3) % 4;\n  // check if 2nd partner was nil\n  const cWasNil = lastBid[c].bid === 0 && !lastBid[c].blind;\n  const dWasNil = lastBid[d].bid === 0 && !lastBid[d].blind;\n  // check if stopped\n  const acStopped = lastBid[a].bid + lastBid[c].bid > mades[a] + mades[c];\n  const bdStopped = lastBid[b].bid + lastBid[d].bid > mades[b] + mades[d];\n\n  // Iterate over bids\n  lastBid.forEach((bid, i) => {\n    // Nil Tracker, [bid, blind, won]\n    newNils[i][0] += bid.bid === 0 ? 1 : 0;\n    newNils[i][1] += bid.blind ? 1 : 0;\n    newNils[i][2] += bid.bid === 0 && mades[i] === 0 ? 1 : 0;\n\n    // Missed Bid Tracker\n    // partner index\n    const p = (i + 2) % 4;\n    // team bids vs made tricks\n    const teamMiss = bid.bid + lastBid[p].bid - (mades[i] + mades[p]);\n    const iMiss = bid.bid - mades[i];\n    // add to missed bid tracker\n    if (bid.bid > 2 && teamMiss > 0 && iMiss > 0) {\n      newMissedBids[i] += Math.min(iMiss, teamMiss);\n    }\n\n    // Bag Tracker\n    const partnerNil2nd = (i === a && cWasNil) || (i === b && dWasNil);\n    const stoppedEnemy =\n      ((i === a || i === c) && bdStopped) ||\n      ((i === b || i === d) && acStopped);\n    // don't count certain bag situations for bag tracker\n    if (partnerNil2nd || stoppedEnemy || bid.train || lastBid[p].train) {\n      return;\n    }\n    // add the team or personal bags, whatever is lower\n    if (-teamMiss > 0 && -iMiss > 0) {\n      newLifeBags[i] += Math.min(-iMiss, -teamMiss);\n    }\n  });\n  // increment expected bags by 0.25\n  newLifeBags[lastBid.length] += 0.25;\n\n  return { newNils, newMissedBids, newLifeBags };\n};\n","import * as React from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport \"highcharts/modules/accessibility\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { NilMetrics } from \"../../../../jotai/spades-atom\";\n\nexport interface StatsNilChartProps {\n  color: string;\n  initials: string;\n  nils: NilMetrics;\n}\n\nconst StatsNilChart = React.memo(\n  ({ color, initials, nils }: StatsNilChartProps) => {\n    const options = {\n      accessibility: { enabled: true },\n      chart: {\n        type: \"column\",\n        height: 340,\n        backgroundColor: null,\n      },\n      credits: { enabled: false },\n      legend: { padding: 0, itemStyle: { color } },\n      plotOptions: { column: { stacking: \"normal\", pointPadding: 0 } },\n      title: { text: \"Nils\", style: { color } },\n      xAxis: {\n        categories: initials.split(\"\"),\n        lineColor: color,\n        labels: { style: { color } },\n      },\n      yAxis: {\n        floor: 0,\n        gridLineDashStyle: \"Dot\",\n        allowDecimals: false,\n        title: { text: undefined },\n        lineColor: color,\n        labels: { style: { color } },\n      },\n      series: [\n        {\n          name: \"🚫\",\n          data: nils.map((n) => n[0] - n[1]),\n          stack: \"Nils\",\n        },\n        {\n          name: \"🦮\",\n          data: nils.map((n) => n[1]),\n          stack: \"Nils\",\n        },\n        {\n          name: \"🏅\",\n          data: nils.map((n) => n[2]),\n          stack: \"Wins\",\n        },\n      ],\n    };\n\n    return (\n      <figure style={{ margin: 0, width: \"100%\" }}>\n        <HighchartsReact highcharts={Highcharts} options={options} />\n      </figure>\n    );\n  },\n);\n\nStatsNilChart.displayName = \"StatsNilChart\";\n\nexport default StatsNilChart;\n","import { useAtomValue } from \"jotai\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Chip from \"@mui/material/Chip\";\nimport Typography from \"@mui/material/Typography\";\nimport InfoPopup from \"../../../common/info-popover/InfoPopup\";\nimport StatsBagsChart from \"./StatsBagsChart\";\nimport themeAtom from \"../../../../jotai/theme-atom\";\nimport { getChipColor } from \"../spadesHelpers\";\nimport spadesAtom from \"../../../../jotai/spades-atom\";\nimport StatsNilChart from \"./StatsNilsChart\";\n\ninterface ShowStatsProps {\n  initials: string;\n}\n\nconst ShowStats = ({ initials }: ShowStatsProps) => {\n  const theme = useAtomValue(themeAtom);\n  const { total1, total2, nils, lifeBags, missedBids } =\n    useAtomValue(spadesAtom);\n  const color = theme.mode === \"light\" ? \"black\" : \"white\";\n\n  return (\n    <InfoPopup title=\"Stats\" buttonVariant=\"outlined\" buttonColor=\"success\">\n      <>\n        <div className=\"flex-container\" style={{ paddingBottom: 15 }}>\n          <Typography>Totals:</Typography>\n          <Chip\n            avatar={<Avatar>{initials[0] + initials[2]}</Avatar>}\n            color={getChipColor(total1, total2)}\n            label={total1}\n          />\n          <Chip\n            avatar={<Avatar>{initials[1] + initials[3]}</Avatar>}\n            color={getChipColor(total2, total1)}\n            label={total2}\n          />\n        </div>\n        <StatsBagsChart\n          color={color}\n          initials={initials}\n          lifeBags={lifeBags}\n          missedBids={missedBids}\n        />\n        <StatsNilChart color={color} initials={initials} nils={nils} />\n      </>\n    </InfoPopup>\n  );\n};\n\nexport default ShowStats;\n","import { Bids } from \"../../../../jotai/spades-atom\";\nimport AddBid from \"./AddBid\";\nimport AddPenalty from \"./AddPenalty\";\nimport AddScore from \"./AddScore\";\nimport ShowStats from \"./ShowStats\";\n\ninterface ControlBarProps {\n  blindTrade: number;\n  first: number;\n  initials: string;\n  lastBid: Bids;\n  showPenalty: boolean;\n  onBidSave: (bids: Bids) => void;\n  onPenalty: (team: number) => () => void;\n  onScoreSave: (mades: [number, number, number, number]) => void;\n}\n\nconst ControlBar = ({\n  blindTrade,\n  first,\n  initials,\n  lastBid,\n  showPenalty,\n  onBidSave,\n  onPenalty,\n  onScoreSave,\n}: ControlBarProps) => (\n  <div className=\"flex-container\" style={{ margin: \"20px 0\" }}>\n    <AddBid\n      blindTrade={blindTrade}\n      first={first}\n      initials={initials}\n      onBidSave={onBidSave}\n    />\n    {showPenalty && <AddPenalty initials={initials} onPenalty={onPenalty} />}\n    <ShowStats initials={initials} />\n    <AddScore initials={initials} lastBid={lastBid} onScoreSave={onScoreSave} />\n  </div>\n);\n\nexport default ControlBar;\n","import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { ScoreRow } from \"../../../jotai/spades-atom\";\n\ninterface ScoreTableProps {\n  initials: string;\n  data: ScoreRow[];\n}\n\nconst getScoreText = (score?: number, comp?: number) => {\n  if (score === undefined || comp === undefined || score === 0) {\n    return \"\";\n  } else if (score > 0) {\n    return `${score >= 100 && score >= comp ? \"🎉 \" : \"\"}${score}`;\n  } else {\n    return `${score}0 + `;\n  }\n};\n\nconst ScoreTable = ({ initials, data }: ScoreTableProps) => (\n  <Table aria-label=\"Bid Table\">\n    <TableHead>\n      <TableRow>\n        <TableCell width={\"10%\"}>🥇</TableCell>\n        <TableCell>\n          Bid\n          <br />({initials[0] + initials[1] + initials[2] + initials[3]})\n        </TableCell>\n        <TableCell>{initials[0] + initials[2]}</TableCell>\n        <TableCell>{initials[1] + initials[3]}</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {data.map((s, i) => (\n        <TableRow key={i}>\n          <TableCell\n            padding={i === data.length - 1 ? \"none\" : undefined}\n            align=\"center\"\n          >\n            {s.start}\n            {i === data.length - 1 && (s.score1 ? \"🃏\" : \"🥇\")}\n          </TableCell>\n          <TableCell>{s.bid}</TableCell>\n          <TableCell>\n            {getScoreText(s.score1, s.score2)}\n            {s.bags1}\n            {s.mod1 && ` (${s.mod1})`}\n          </TableCell>\n          <TableCell>\n            {getScoreText(s.score2, s.score1)}\n            {s.bags2}\n            {s.mod2 && ` (${s.mod2})`}\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n);\n\nexport default ScoreTable;\n","import { useAtom, useAtomValue } from \"jotai\";\nimport playerAtom from \"../../../jotai/player-atom\";\nimport spadesAtom, { Bids, defaultBid } from \"../../../jotai/spades-atom\";\nimport {\n  bidsToString,\n  getMetrics,\n  getScore,\n  penaltyHelper,\n} from \"./spadesHelpers\";\n\nconst useSpades = () => {\n  const players = useAtomValue(playerAtom);\n  const [spades, setSpades] = useAtom(spadesAtom);\n\n  const {\n    data,\n    first,\n    lastBid,\n    lifeBags,\n    missedBids,\n    wins1,\n    wins2,\n    total1,\n    total2,\n    nils,\n  } = spades;\n  const initials = players.reduce((a, p, i) => (i < 4 ? a + p.name[0] : a), \"\");\n\n  /** sets a new data entry with first and bid info of data, updates first */\n  const addBid = (bids: Bids) => {\n    const last = data.length - 1;\n    // edit score if exists\n    if (data[last] && data[last]?.score1 === undefined) {\n      const newData = [...data];\n      newData[last].bid = bidsToString(bids);\n      setSpades({ ...spades, data: newData, lastBid: bids });\n      return;\n    }\n    // convert bid to storage data format\n    const newData = [...data];\n    newData.push({ start: initials[first], bid: bidsToString(bids) });\n    // update first player and add data entry\n    setSpades({ ...spades, data: newData, lastBid: bids });\n  };\n\n  const addPenalty = (team: number) => () => {\n    let last = data.length - 1;\n    if (data[last]?.score1 === undefined) {\n      last -= 1;\n    }\n    if (team === 0) {\n      // verify data\n      const { score1, bags1, mod1 } = data[last] || {};\n      if (score1 === undefined || bags1 === undefined) {\n        return;\n      }\n      // add 3 bags\n      const { score, bags, mod } = penaltyHelper(score1, bags1, mod1);\n      // update data\n      const newData = [...data];\n      newData[last] = { ...data[last], score1: score, bags1: bags, mod1: mod };\n      setSpades({ ...spades, data: newData });\n    } else {\n      // verify data\n      const { score2, bags2, mod2 } = data[last] || {};\n      if (score2 === undefined || bags2 === undefined) {\n        return;\n      }\n      // add 3 bags\n      const { score, bags, mod } = penaltyHelper(score2, bags2, mod2);\n      // update data\n      const newData = [...data];\n      newData[last] = { ...data[last], score2: score, bags2: bags, mod2: mod };\n      setSpades({ ...spades, data: newData });\n    }\n  };\n\n  /** calculates and adds score1 and score2 finishing data entry */\n  const addScore = (mades: [number, number, number, number]) => {\n    const last = data.length - 1;\n    // can't add scores if no bid exists\n    if (data[last]?.score1 !== undefined) {\n      return;\n    }\n\n    // convert made tricks to scores\n    const newData = [...data];\n    const { score1, bags1, score2, bags2 } = data[last - 1] || {};\n\n    // calculate scores\n    const {\n      score: scoreA,\n      bags: bagsA,\n      mod: mod1,\n    } = getScore(\n      { ...lastBid[0], made: mades[0] },\n      { ...lastBid[2], made: mades[2] },\n      score1 || 0,\n      bags1 || 0,\n    );\n    const {\n      score: scoreB,\n      bags: bagsB,\n      mod: mod2,\n    } = getScore(\n      { ...lastBid[1], made: mades[1] },\n      { ...lastBid[3], made: mades[3] },\n      score2 || 0,\n      bags2 || 0,\n    );\n    // update scores in data entry\n    newData[last] = {\n      ...data[last],\n      score1: scoreA,\n      bags1: bagsA,\n      mod1,\n      score2: scoreB,\n      bags2: bagsB,\n      mod2,\n    };\n\n    const { newNils, newMissedBids, newLifeBags } = getMetrics(\n      nils,\n      lifeBags,\n      first,\n      lastBid,\n      mades,\n      missedBids,\n    );\n\n    // update state\n    setSpades({\n      ...spades,\n      data: newData,\n      first: (first + 1) % 4,\n      lastBid: [defaultBid, defaultBid, defaultBid, defaultBid],\n      lifeBags: newLifeBags,\n      missedBids: newMissedBids,\n      nils: newNils,\n    });\n  };\n\n  const newGame = () => {\n    const { score1, bags1, score2, bags2 } = data[data.length - 1];\n    const is1Winner =\n      (score1 === score2 && (bags1 || 0) > (bags2 || 0)) ||\n      (score1 || 0) > (score2 || 0);\n    setSpades({\n      ...spades,\n      data: [],\n      lastBid: [defaultBid, defaultBid, defaultBid, defaultBid],\n      wins1: wins1 + (is1Winner ? 1 : 0),\n      wins2: wins2 + (is1Winner ? 0 : 1),\n      total1: total1 + (score1 || 0) * 10 + (bags1 || 0),\n      total2: total2 + (score2 || 0) * 10 + (bags2 || 0),\n    });\n  };\n\n  return {\n    // data\n    data,\n    first,\n    initials,\n    lastBid,\n    lifeBags,\n    wins1,\n    wins2,\n    // functions\n    addBid,\n    addPenalty,\n    addScore,\n    newGame,\n  };\n};\n\nexport default useSpades;\n","import Avatar from \"@mui/material/Avatar\";\nimport Chip from \"@mui/material/Chip\";\nimport Typography from \"@mui/material/Typography\";\nimport PlayerMenu from \"../../common/header/PlayerMenu\";\nimport { getChipColor } from \"./spadesHelpers\";\n\ninterface HeaderProps {\n  initials: string;\n  wins1: number;\n  wins2: number;\n}\n\nconst Header = ({ initials, wins1, wins2 }: HeaderProps) => (\n  <>\n    <div className=\"flex-container\">\n      <Typography variant=\"h2\" component=\"h1\">\n        ♠️🧮\n      </Typography>\n      <Chip\n        avatar={<Avatar>{initials[0] + initials[2]}</Avatar>}\n        color={getChipColor(wins1, wins2)}\n        label={wins1}\n      />\n      <Chip\n        avatar={<Avatar>{initials[1] + initials[3]}</Avatar>}\n        color={getChipColor(wins2, wins1)}\n        label={wins2}\n      />\n      <PlayerMenu />\n    </div>\n  </>\n);\n\nexport default Header;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ControlBar from \"./control-bar/ControlBar\";\nimport ScoreTable from \"./ScoreTable\";\nimport useSpades from \"./useSpades\";\nimport Header from \"./Header\";\n\nconst Spades = React.memo(() => {\n  const {\n    // Shared\n    data,\n    initials,\n    // Header\n    wins1,\n    wins2,\n    // Reset Button\n    newGame,\n    // ControlBar\n    first,\n    lastBid,\n    addBid,\n    addPenalty,\n    addScore,\n  } = useSpades();\n\n  // ControlBar doesn't have access to data, calculate out here\n  let i = data.length - 1;\n  if (data[i]?.score1 === undefined) {\n    i -= 1;\n  }\n  // set vars\n  const score1 = data[i]?.score1 || 0;\n  const bags1 = data[i]?.bags1 || 0;\n  const score2 = data[i]?.score2 || 0;\n  const bags2 = data[i]?.bags2 || 0;\n  // see if blind trade is possible\n  const diff = score1 * 10 + bags1 - (score2 * 10 + bags2);\n  const blindTrade = diff > 0 ? Math.floor(diff / 100) : Math.ceil(diff / 100);\n\n  return (\n    <>\n      <Header initials={initials} wins1={wins1} wins2={wins2} />\n      {score1 >= 100 || score2 >= 100 ? (\n        <Button\n          fullWidth\n          color=\"error\"\n          onClick={newGame}\n          variant=\"contained\"\n          sx={{ marginTop: 2 }}\n        >\n          Reset\n        </Button>\n      ) : (\n        <ControlBar\n          blindTrade={blindTrade}\n          first={first}\n          initials={initials}\n          lastBid={lastBid}\n          showPenalty={data[0]?.score1 !== undefined}\n          onBidSave={addBid}\n          onPenalty={addPenalty}\n          onScoreSave={addScore}\n        />\n      )}\n      <ScoreTable initials={initials} data={data} />\n    </>\n  );\n});\n\nSpades.displayName = \"Spades\";\n\nexport default Spades;\n"],"names":["MIN_BID","MAX_BID","defaultBid","initialState","spadesAtom","atomWithStorage","AddBidPlayer","id","blindTrade","canTrain","bid","blind","train","onBid","decrBid","incrBid","handleBlind","_e","checked","handleTrain","TableRow","jsx","TableCell","jsxs","IconButton","Remove","Add","Switch","getBlindTrade","n","AddBid","first","initials","onBidSave","bids","setBids","React.useState","a","b","c","d","handleBid","newBid","trainBid","newBids","handleSave","bags","acc","InfoPopup","Table","TableHead","TableBody","AddPenalty","onPenalty","Grid","Button","AddScorePlayer","initial","lastBid","made","setMade","decrMade","incrMade","Typography","AddScore","onScoreSave","made0","setMade0","made1","setMade1","made2","setMade2","made3","setMade3","total","StatsBagsChart","React.memo","lifeBags","missedBids","color","expBid","options","HighchartsReact","Highcharts","bidsToString","getScore","p1","p2","score","newScore","newBags","mod","teamBid","teamMade","penaltyHelper","s","m","getChipColor","getMetrics","nils","mades","newNils","newMissedBids","newLifeBags","cWasNil","dWasNil","acStopped","bdStopped","p","teamMiss","iMiss","StatsNilChart","ShowStats","theme","useAtomValue","themeAtom","total1","total2","Fragment","Chip","Avatar","ControlBar","showPenalty","getScoreText","comp","ScoreTable","data","i","useSpades","players","playerAtom","spades","setSpades","useAtom","wins1","wins2","last","newData","team","score1","bags1","mod1","score2","bags2","mod2","scoreA","bagsA","scoreB","bagsB","is1Winner","Header","PlayerMenu","Spades","newGame","addBid","addPenalty","addScore","diff"],"mappings":"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"}