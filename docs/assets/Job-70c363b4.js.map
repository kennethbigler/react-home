{"version":3,"file":"Job-70c363b4.js","sources":["../../src/components/resume/work/Job.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Chip from \"@mui/material/Chip\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport dateObj, { DateObj } from \"../../../apis/DateHelper\";\nimport { FORMAT } from \"../../common/timeline-card/Timeline\";\nimport ExpandableCard from \"../../common/expandable-card\";\nimport { Job as JobType } from \"../../../constants/work\";\n\ninterface JobProps {\n  job: JobType;\n}\n\nconst imgStyle: React.CSSProperties = {\n  width: \"100%\",\n  maxWidth: \"12em\",\n  height: \"auto\",\n  float: \"right\",\n};\n\nexport const getCSV = (arr: string[] = []): React.ReactNodeArray => {\n  const style = { marginRight: 5, marginBottom: 5 };\n  return arr.map((item) => <Chip key={item} label={item} style={style} />);\n};\n\nexport const showRange = (s: DateObj, e: DateObj, notes = \"\"): string => {\n  // start date\n  const start = s.format(FORMAT);\n  // end date, check if it is the present\n  const end = dateObj().diff(e, \"days\") < 1 ? \"Present\" : e.format(FORMAT);\n\n  // get the time range in years, months\n  const mon = (e.diff(s, \"months\") + 1) % 12;\n  const yr = e.diff(s, \"years\") + (mon === 0 ? 1 : 0);\n  const yRange = yr ? `${yr} year${yr > 1 ? \"s\" : \"\"}` : null;\n  const mRange = mon ? `${mon} month${mon > 1 ? \"s\" : \"\"}` : 0;\n  const range = yRange ? yRange + (mRange ? `, ${mRange}` : \"\") : mRange;\n\n  // return string for output\n  return `${start} - ${end} (${range}) ${notes}`;\n};\n\nconst Job: React.FC<JobProps> = (props: JobProps) => {\n  const { job } = props;\n\n  const parent = job.parent ? ` (${job.parent})` : \"\";\n  const title = `${job.company}${parent}, ${job.location}`;\n\n  return (\n    <ExpandableCard\n      backgroundColor={job.color}\n      subtitle={job.title}\n      inverted={job.inverted}\n      title={title}\n    >\n      <Grid item sm={9} xs={12}>\n        <Typography>{showRange(job.start, job.end, job.notes)}</Typography>\n        {job.expr && (\n          <ul>\n            {job.expr.map((desc, i) => (\n              <li key={`desc${i}`}>\n                <Typography>{desc}</Typography>\n              </li>\n            ))}\n          </ul>\n        )}\n        {job.tech && job.tech.length !== 0 && (\n          <>\n            <hr />\n            <Typography display=\"inline\">Technologies:&nbsp;</Typography>\n            {getCSV(job.tech)}\n          </>\n        )}\n        {job.skills && job.skills.length !== 0 && (\n          <>\n            <hr />\n            <Typography display=\"inline\">Skills:&nbsp;</Typography>\n            {getCSV(job.skills)}\n          </>\n        )}\n      </Grid>\n      {job.src && (\n        <Grid item sm={3} xs={12}>\n          <img alt={job.alt} src={job.src} style={imgStyle} />\n        </Grid>\n      )}\n    </ExpandableCard>\n  );\n};\n\nexport default Job;\n"],"names":["imgStyle","getCSV","arr","style","item","jsx","Chip","showRange","s","e","notes","start","FORMAT","end","dateObj","mon","yr","yRange","mRange","range","Job","props","job","parent","title","jsxs","ExpandableCard","Grid","Typography","desc","i","Fragment"],"mappings":"0QAaA,MAAMA,EAAgC,CACpC,MAAO,OACP,SAAU,OACV,OAAQ,OACR,MAAO,OACT,EAEaC,EAAS,CAACC,EAAgB,KAA6B,CAClE,MAAMC,EAAQ,CAAE,YAAa,EAAG,aAAc,CAAE,EACzC,OAAAD,EAAI,IAAKE,GAASC,EAAAA,IAACC,GAAgB,MAAOF,EAAM,MAAAD,GAAnBC,CAAiC,CAAE,CACzE,EAEaG,EAAY,CAACC,EAAYC,EAAYC,EAAQ,KAAe,CAEjE,MAAAC,EAAQH,EAAE,OAAOI,CAAM,EAEvBC,EAAMC,IAAU,KAAKL,EAAG,MAAM,EAAI,EAAI,UAAYA,EAAE,OAAOG,CAAM,EAGjEG,GAAON,EAAE,KAAKD,EAAG,QAAQ,EAAI,GAAK,GAClCQ,EAAKP,EAAE,KAAKD,EAAG,OAAO,GAAKO,IAAQ,EAAI,EAAI,GAC3CE,EAASD,EAAK,GAAGA,SAAUA,EAAK,EAAI,IAAM,KAAO,KACjDE,EAASH,EAAM,GAAGA,UAAYA,EAAM,EAAI,IAAM,KAAO,EACrDI,EAAQF,EAASA,GAAUC,EAAS,KAAKA,IAAW,IAAMA,EAGzD,MAAA,GAAGP,OAAWE,MAAQM,MAAUT,GACzC,EAEMU,EAA2BC,GAAoB,CAC7C,KAAA,CAAE,IAAAC,CAAQ,EAAAD,EAEVE,EAASD,EAAI,OAAS,KAAKA,EAAI,UAAY,GAC3CE,EAAQ,GAAGF,EAAI,UAAUC,MAAWD,EAAI,WAG5C,OAAAG,EAAA,KAACC,EAAA,CACC,gBAAiBJ,EAAI,MACrB,SAAUA,EAAI,MACd,SAAUA,EAAI,SACd,MAAAE,EAEA,SAAA,CAAAC,OAACE,GAAK,KAAI,GAAC,GAAI,EAAG,GAAI,GACpB,SAAA,CAACtB,EAAAA,IAAAuB,EAAA,CAAY,WAAUN,EAAI,MAAOA,EAAI,IAAKA,EAAI,KAAK,CAAE,CAAA,EACrDA,EAAI,MACHjB,MAAC,MACE,SAAIiB,EAAA,KAAK,IAAI,CAACO,EAAMC,IAClBzB,EAAAA,IAAA,KAAA,CACC,eAACuB,EAAY,CAAA,SAAAC,CAAA,CAAK,GADX,OAAOC,GAEhB,CACD,CACH,CAAA,EAEDR,EAAI,MAAQA,EAAI,KAAK,SAAW,GAE7BG,EAAA,KAAAM,WAAA,CAAA,SAAA,CAAA1B,EAAA,IAAC,KAAG,EAAA,EACHA,EAAA,IAAAuB,EAAA,CAAW,QAAQ,SAAS,SAAmB,iBAAA,EAC/C3B,EAAOqB,EAAI,IAAI,CAAA,EAClB,EAEDA,EAAI,QAAUA,EAAI,OAAO,SAAW,GAEjCG,EAAA,KAAAM,WAAA,CAAA,SAAA,CAAA1B,EAAA,IAAC,KAAG,EAAA,EACHA,EAAA,IAAAuB,EAAA,CAAW,QAAQ,SAAS,SAAa,WAAA,EACzC3B,EAAOqB,EAAI,MAAM,CAAA,EACpB,CAAA,EAEJ,EACCA,EAAI,KACFjB,MAAAsB,EAAA,CAAK,KAAI,GAAC,GAAI,EAAG,GAAI,GACpB,eAAC,MAAI,CAAA,IAAKL,EAAI,IAAK,IAAKA,EAAI,IAAK,MAAOtB,EAAU,CACpD,CAAA,CAAA,CAAA,CAAA,CAIR"}