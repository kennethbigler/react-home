{"version":3,"file":"index-dc92d58a.js","sources":["../../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","../../node_modules/@mui/base/useSnackbar/useSnackbar.js","../../src/recoil/git-atom.ts","../../node_modules/@mui/icons-material/Clear.js","../../src/recoil/git-selector.ts","../../node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js","../../node_modules/@mui/material/SnackbarContent/SnackbarContent.js","../../node_modules/@mui/material/Snackbar/snackbarClasses.js","../../node_modules/@mui/material/Snackbar/Snackbar.js","../../src/components/resume/git-tools/CopyTextDisplay.tsx","../../src/components/resume/git-tools/BranchName.tsx","../../src/components/resume/git-tools/useCommitText.ts","../../src/components/resume/git-tools/CommitText.tsx","../../src/components/resume/git-tools/DeployBranch.tsx","../../src/components/resume/git-tools/Header.tsx","../../src/components/resume/git-tools/helpers.tsx","../../src/components/resume/git-tools/GitTools.tsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base/react-click-away-listener/components-api/#click-away-listener)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport default ClickAwayListener;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport extractEventHandlers from '../utils/extractEventHandlers';\n\n/**\n * The basic building block for creating custom snackbar.\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base/react-snackbar/#hook)\n *\n * API:\n *\n * - [useSnackbar API](https://mui.com/base/react-snackbar/hooks-api/#use-snackbar)\n */\nexport default function useSnackbar(parameters) {\n  const {\n    autoHideDuration = null,\n    disableWindowBlurListener = false,\n    onClose,\n    open,\n    ref,\n    resumeHideDuration\n  } = parameters;\n  const timerAutoHide = React.useRef();\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Blink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          onClose == null ? void 0 : onClose(nativeEvent, 'escapeKeyDown');\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose]);\n  const handleClose = useEventCallback((event, reason) => {\n    onClose == null ? void 0 : onClose(event, reason);\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n  const handleClickAway = event => {\n    onClose == null ? void 0 : onClose(event, 'clickaway');\n  };\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  };\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const createHandleBlur = otherHandlers => event => {\n    const onBlurCallback = otherHandlers.onBlur;\n    onBlurCallback == null ? void 0 : onBlurCallback(event);\n    handleResume();\n  };\n  const createHandleFocus = otherHandlers => event => {\n    const onFocusCallback = otherHandlers.onFocus;\n    onFocusCallback == null ? void 0 : onFocusCallback(event);\n    handlePause();\n  };\n  const createMouseEnter = otherHandlers => event => {\n    const onMouseEnterCallback = otherHandlers.onMouseEnter;\n    onMouseEnterCallback == null ? void 0 : onMouseEnterCallback(event);\n    handlePause();\n  };\n  const createMouseLeave = otherHandlers => event => {\n    const onMouseLeaveCallback = otherHandlers.onMouseLeave;\n    onMouseLeaveCallback == null ? void 0 : onMouseLeaveCallback(event);\n    handleResume();\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  const getRootProps = (otherHandlers = {}) => {\n    const propsEventHandlers = extractEventHandlers(parameters);\n    const externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);\n    return _extends({\n      ref,\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      role: 'presentation'\n    }, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onMouseEnter: createMouseEnter(externalEventHandlers),\n      onMouseLeave: createMouseLeave(externalEventHandlers)\n    });\n  };\n  return {\n    getRootProps,\n    onClickAway: handleClickAway\n  };\n}","import { atom } from \"recoil\";\n\nexport const branchPrefixes = [\"chores\", \"epics\", \"features\", \"fixes\"] as const;\nexport type BranchPrefixes = (typeof branchPrefixes)[number];\n\nexport interface GitState {\n  branchMessage: string;\n  branchPrefix: BranchPrefixes;\n}\n\nconst initialState: GitState = {\n  branchMessage: \"\",\n  branchPrefix: \"features\",\n};\n\nconst gitAtom = atom({\n  key: \"gitAtom\",\n  default:\n    (JSON.parse(localStorage.getItem(\"git-atom\") || \"null\") as GitState) ||\n    initialState,\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"git-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\nexport const storyIdGitAtom = atom({\n  key: \"storyIdGitAtom\",\n  default: JSON.parse(\n    localStorage.getItem(\"story-id-git-atom\") || '\"\"'\n  ) as string,\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"story-id-git-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\nexport const commitPrefixGitAtom = atom({\n  key: \"commitPrefixGitAtom\",\n  default: JSON.parse(\n    localStorage.getItem(\"commit-prefix-git-atom\") || \"true\"\n  ) as boolean,\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"commit-prefix-git-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\nexport default gitAtom;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexports.default = _default;","import { selector } from \"recoil\";\nimport gitAtom, { storyIdGitAtom } from \"./git-atom\";\n\n/** function to generate the branch name from inputs\n * @return {string} format prefix/<story_id>_name_lower_cased */\nconst branchNameGitSelector = selector({\n  key: \"branchNameGitSelector\",\n  get: ({ get }) => {\n    const { branchMessage, branchPrefix } = get(gitAtom);\n    const storyID = get(storyIdGitAtom);\n\n    const prefix = branchPrefix ? `${branchPrefix}/` : \"\";\n    return `${prefix}${storyID}${branchMessage}`;\n  },\n});\n\nexport default branchNameGitSelector;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSnackbarContentUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbarContent', slot);\n}\nconst snackbarContentClasses = generateUtilityClasses('MuiSnackbarContent', ['root', 'message', 'action']);\nexport default snackbarContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"className\", \"message\", \"role\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getSnackbarContentUtilityClass } from './snackbarContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\nconst SnackbarContentRoot = styled(Paper, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return _extends({}, theme.typography.body2, {\n    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),\n    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  });\n});\nconst SnackbarContentMessage = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n  const {\n      action,\n      className,\n      message,\n      role = 'alert'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      ownerState: ownerState,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default SnackbarContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSnackbarUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbar', slot);\n}\nconst snackbarClasses = generateUtilityClasses('MuiSnackbar', ['root', 'anchorOriginTopCenter', 'anchorOriginBottomCenter', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft']);\nexport default snackbarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n  _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport useSnackbar from '@mui/base/useSnackbar';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.anchorOrigin.horizontal === 'right' && {\n      right: 24,\n      left: 'auto'\n    })\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      action,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      } = {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      autoHideDuration = null,\n      children,\n      className,\n      ClickAwayListenerProps,\n      ContentProps,\n      disableWindowBlurListener = false,\n      message,\n      open,\n      TransitionComponent = Grow,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps: {\n        onEnter,\n        onExited\n      } = {}\n    } = props,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    autoHideDuration,\n    disableWindowBlurListener,\n    TransitionComponent,\n    transitionDuration\n  });\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, ownerState, {\n    ref\n  }));\n  const [exited, setExited] = React.useState(true);\n  const rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState,\n    className: [classes.root, className]\n  });\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: onClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","import * as React from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Chip from \"@mui/material/Chip\";\nimport useOpenState from \"../../../hooks/useOpenState\";\n\ninterface CopyTextDisplayProps {\n  copyText?: string;\n  text: string;\n}\n\nconst chipStyles: React.CSSProperties = {\n  height: \"auto\",\n  paddingTop: 7,\n  paddingBottom: 7,\n};\n\nconst CopyTextDisplay: React.FC<CopyTextDisplayProps> = (\n  props: CopyTextDisplayProps\n) => {\n  const [isOpen, handleOpen, handleClose] = useOpenState(false);\n  const { copyText, text } = props;\n\n  /** copies text to clipboard and opens prompt to tell the user */\n  const handleCopyText = React.useCallback((): void => {\n    handleOpen();\n    navigator?.clipboard\n      ?.writeText(copyText || text)\n      ?.catch(() => console.warn(\"Failed to copy\"));\n  }, [copyText, handleOpen, text]);\n\n  return (\n    <>\n      <Chip\n        onClick={handleCopyText}\n        style={chipStyles}\n        label={<div>{text}</div>}\n        aria-label={`copy to clipboard ${text}`}\n      />\n      <Snackbar\n        action={[\n          <IconButton\n            key=\"close\"\n            onClick={handleClose}\n            size=\"large\"\n            aria-label=\"close copy to clipboard confirmation\"\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n        autoHideDuration={4000}\n        message=\"Copied Commit Text to clipboard!\"\n        onClose={handleClose}\n        open={isOpen}\n      />\n    </>\n  );\n};\n\nexport default CopyTextDisplay;\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport Input from \"@mui/material/Input\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Clear from \"@mui/icons-material/Clear\";\nimport Grid from \"@mui/material/Grid\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport gitSelector from \"../../../recoil/git-selector\";\nimport CopyTextDisplay from \"./CopyTextDisplay\";\nimport gitAtom, {\n  branchPrefixes,\n  BranchPrefixes,\n} from \"../../../recoil/git-atom\";\n\ninterface BranchNameProps {\n  getSelectOptions: (arr: string[]) => React.ReactNode;\n  gitTheme: string;\n}\n\nconst wrapperStyles: React.CSSProperties = {\n  paddingLeft: 20,\n  paddingRight: 20,\n  width: \"100%\",\n};\nconst topSpacing: React.CSSProperties = { marginTop: 12 };\n\nconst BranchName: React.FC<BranchNameProps> = (props: BranchNameProps) => {\n  const [state, setState] = useRecoilState(gitAtom);\n  const branchName = useRecoilValue(gitSelector);\n\n  const { getSelectOptions, gitTheme } = props;\n  const { branchMessage, branchPrefix } = state;\n\n  /** function to update text state based on value */\n  const handleBranchMessageChange: React.ChangeEventHandler<\n    HTMLInputElement | HTMLTextAreaElement\n  > = (e) => setState({ ...state, branchMessage: e.target.value });\n  /** function to clear text state based on value */\n  const handleBranchMessageClear = (): void =>\n    setState({ ...state, branchMessage: \"\" });\n  /** function to update text state based on value */\n  const setBranchPrefix = (newBranchPrefix: BranchPrefixes): void =>\n    setState({ ...state, branchPrefix: newBranchPrefix });\n\n  /** function to generate select items for branch prefixes */\n  const getBranchPrefixOptions = (): React.ReactNode =>\n    getSelectOptions([...branchPrefixes]);\n\n  /** function to update select state based on value */\n  const handleBranchPrefixSelect = (e: SelectChangeEvent): void =>\n    setBranchPrefix(e.target.value as BranchPrefixes);\n\n  const gitThemeStyles: React.CSSProperties = React.useMemo(\n    () => ({ color: gitTheme }),\n    [gitTheme]\n  );\n\n  return (\n    <div style={wrapperStyles}>\n      <Grid container spacing={2} style={{ marginBottom: 16 }}>\n        <Grid item md={3} sm={5} xs={12} style={{ marginTop: 16 }}>\n          <FormControl fullWidth>\n            <InputLabel htmlFor=\"branch-prefix\" style={gitThemeStyles}>\n              Branch Prefix\n            </InputLabel>\n            <Select\n              input={<Input id=\"branch-prefix\" />}\n              onChange={handleBranchPrefixSelect}\n              value={branchPrefix}\n            >\n              {getBranchPrefixOptions() || (\n                <MenuItem value=\"features\">features</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item md={8} sm={6} xs={10} style={{ marginTop: 16 }}>\n          <TextField\n            fullWidth\n            InputLabelProps={{ style: gitThemeStyles }}\n            label=\"Branch Name\"\n            multiline\n            onChange={handleBranchMessageChange}\n            placeholder=\"Summary of User Story\"\n            value={branchMessage}\n          />\n        </Grid>\n        <Grid item sm={1} xs={2} style={{ marginTop: 16 }}>\n          <IconButton\n            onClick={handleBranchMessageClear}\n            style={topSpacing}\n            size=\"large\"\n            aria-label=\"Clear Branch Name\"\n          >\n            <Clear />\n          </IconButton>\n        </Grid>\n      </Grid>\n      <CopyTextDisplay text={branchName} />\n    </div>\n  );\n};\n\nexport default BranchName;\n","import * as React from \"react\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\n\ninterface UseCommitTextReturns {\n  commitPrefix: string;\n  commitMessage: string;\n  commitDescription: string;\n  finishes: boolean;\n  getCommitText: () => string;\n  handleCommitPrefixSelect: (\n    event: SelectChangeEvent,\n    child: React.ReactNode\n  ) => void;\n  handleCommitMessageChange: React.ChangeEventHandler;\n  handleCommitDescriptionChange: React.ChangeEventHandler;\n  clearCommitMessage: React.MouseEventHandler;\n  clearCommitDescription: React.MouseEventHandler;\n  handleFinishesToggle: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => void;\n}\n\nfunction useCommitText(\n  storyID?: string,\n  hasCommitPrefix?: boolean\n): UseCommitTextReturns {\n  const [commitPrefix, setLocalCommitPrefix] = React.useState(\"feat\");\n  const [commitMessage, setCommitMessage] = React.useState(\"\");\n  const [commitDescription, setCommitDescription] = React.useState(\"\");\n  const [finishes, setFinishes] = React.useState(false);\n\n  /** function to generate the commit message from inputs\n   * @return {string} format Prefix: Message [?Finishes? ID] */\n  const getCommitText = (): string => {\n    // prefix\n    const prefix = `${commitPrefix}: `;\n\n    // description\n    let desc = \" \";\n    if (commitDescription && storyID) {\n      desc = `\\n\\n${commitDescription}\\n\\n`;\n    } else if (commitDescription) {\n      desc = `\\n\\n${commitDescription}`;\n    }\n\n    // postfix\n    let postfix = \"\";\n    if (finishes && storyID) {\n      postfix = `[${storyID} #finish]`;\n    } else if (storyID) {\n      postfix = `[${storyID}]`;\n    }\n\n    // compile all components together\n    const gitMessage = `${prefix}${commitMessage}${desc}${postfix}`;\n\n    // add syntax wrapper\n    return hasCommitPrefix ? `git commit -m \"${gitMessage}\"` : gitMessage;\n  };\n\n  /** function to update select state based on value */\n  const handleCommitPrefixSelect = (e: SelectChangeEvent): void => {\n    setLocalCommitPrefix(e.target.value);\n  };\n\n  /** function to update text state based on value */\n  const handleCommitMessageChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    setCommitMessage(e.target.value);\n  };\n\n  const handleCommitDescriptionChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    setCommitDescription(e.target.value);\n  };\n\n  /** function to update text state based on value */\n  const clearCommitMessage = (): void => {\n    setCommitMessage(\"\");\n  };\n\n  const clearCommitDescription = (): void => {\n    setCommitDescription(\"\");\n  };\n\n  const handleFinishesToggle = (\n    _e: React.ChangeEvent<HTMLInputElement>,\n    isC: boolean\n  ): void => {\n    setFinishes(isC);\n  };\n\n  return {\n    commitPrefix,\n    commitMessage,\n    commitDescription,\n    finishes,\n    getCommitText,\n    handleCommitPrefixSelect,\n    handleCommitMessageChange,\n    handleCommitDescriptionChange,\n    clearCommitMessage,\n    clearCommitDescription,\n    handleFinishesToggle,\n  };\n}\n\nexport default useCommitText;\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Input from \"@mui/material/Input\";\nimport Select from \"@mui/material/Select\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Clear from \"@mui/icons-material/Clear\";\nimport Grid from \"@mui/material/Grid\";\nimport nl2br from \"react-newline-to-break\";\nimport { useRecoilState } from \"recoil\";\nimport CopyTextDisplay from \"./CopyTextDisplay\";\nimport { commitPrefixGitAtom } from \"../../../recoil/git-atom\";\nimport useCommitText from \"./useCommitText\";\n\ninterface CommitTextProps {\n  getSelectOptions: (arr: string[]) => React.ReactNode;\n  gitTheme: string;\n  storyID?: string;\n}\n\nconst wrapperStyles: React.CSSProperties = {\n  paddingLeft: 20,\n  paddingRight: 20,\n  width: \"100%\",\n};\nconst marginTopStyles: React.CSSProperties = { marginTop: 12 };\n\nconst CommitText: React.FC<CommitTextProps> = (props: CommitTextProps) => {\n  const [hasCommitPrefix, setHasCommitPrefix] =\n    useRecoilState(commitPrefixGitAtom);\n\n  const { getSelectOptions, storyID, gitTheme } = props;\n\n  const {\n    commitPrefix,\n    commitMessage,\n    commitDescription,\n    finishes,\n    getCommitText,\n    handleCommitPrefixSelect,\n    handleCommitMessageChange,\n    handleCommitDescriptionChange,\n    clearCommitMessage,\n    clearCommitDescription,\n    handleFinishesToggle,\n  } = useCommitText(storyID, hasCommitPrefix);\n\n  /** function to generate select items based of input */\n  const getCommitPrefixOptions = React.useCallback(\n    (): React.ReactNode =>\n      getSelectOptions([\n        \"build\",\n        \"chore\",\n        \"ci\",\n        \"docs\",\n        \"feat\",\n        \"fix\",\n        \"perf\",\n        \"refactor\",\n        \"revert\",\n        \"style\",\n        \"test\",\n      ]),\n    [getSelectOptions]\n  );\n\n  const handleGitCommitToggle = (\n    _e: React.ChangeEvent<HTMLInputElement>,\n    isC: boolean\n  ): void => {\n    setHasCommitPrefix(isC);\n  };\n\n  const commitText = getCommitText();\n  const displayText = commitText && nl2br(getCommitText());\n\n  return (\n    <div style={wrapperStyles}>\n      <Grid container spacing={2} style={{ marginBottom: 16 }}>\n        <Grid item sm={4} xs={12} style={{ marginTop: 16 }}>\n          <FormControl fullWidth>\n            <InputLabel htmlFor=\"commit-prefix\" style={{ color: gitTheme }}>\n              Commit Prefix\n            </InputLabel>\n            <Select\n              input={<Input id=\"commit-prefix\" />}\n              onChange={handleCommitPrefixSelect}\n              value={commitPrefix}\n            >\n              {getCommitPrefixOptions()}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item sm={4} xs={12} style={{ marginTop: 16 }}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={finishes}\n                onChange={handleFinishesToggle}\n                value=\"Finishes User Story\"\n              />\n            }\n            label=\"Finishes User Story\"\n          />\n        </Grid>\n        <Grid item sm={4} xs={12} style={{ marginTop: 16 }}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={hasCommitPrefix}\n                onChange={handleGitCommitToggle}\n                value=\"Add git commit -m\"\n              />\n            }\n            label=\"Add git commit -m\"\n          />\n        </Grid>\n        <Grid item sm={5} xs={10}>\n          <TextField\n            fullWidth\n            InputLabelProps={{ style: { color: gitTheme } }}\n            label=\"Commit Message\"\n            onChange={handleCommitMessageChange}\n            placeholder=\"Summary of Work Done (Message)\"\n            value={commitMessage}\n          />\n        </Grid>\n        <Grid item sm={1} xs={2}>\n          <IconButton\n            onClick={clearCommitMessage}\n            style={marginTopStyles}\n            size=\"large\"\n            aria-label=\"Clear Commit Message\"\n          >\n            <Clear />\n          </IconButton>\n        </Grid>\n        <Grid item sm={5} xs={10}>\n          <TextField\n            fullWidth\n            InputLabelProps={{ style: { color: gitTheme } }}\n            label=\"Commit Description\"\n            multiline\n            onChange={handleCommitDescriptionChange}\n            placeholder=\"Summary of Work Done (Description)\"\n            value={commitDescription}\n          />\n        </Grid>\n        <Grid item sm={1} xs={2}>\n          <IconButton\n            onClick={clearCommitDescription}\n            style={marginTopStyles}\n            size=\"large\"\n            aria-label=\"Clear Commit Description\"\n          >\n            <Clear />\n          </IconButton>\n        </Grid>\n      </Grid>\n      <CopyTextDisplay copyText={commitText} text={displayText} />\n    </div>\n  );\n};\n\nexport default CommitText;\n","import * as React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport Input from \"@mui/material/Input\";\nimport Grid from \"@mui/material/Grid\";\nimport { useRecoilValue } from \"recoil\";\nimport gitSelector from \"../../../recoil/git-selector\";\nimport CopyTextDisplay from \"./CopyTextDisplay\";\n\ninterface DeployBranchProps {\n  getSelectOptions: (arr: string[]) => React.ReactNode;\n  gitTheme: string;\n}\n\nconst DeployBranch: React.FC<DeployBranchProps> = React.memo(\n  (props: DeployBranchProps) => {\n    const branchName = useRecoilValue(gitSelector);\n    const [targetBranch, setTargetBranch] = React.useState(\"test-pipeline\");\n\n    const { gitTheme, getSelectOptions } = props;\n    const handleSelect = (e: SelectChangeEvent): void =>\n      setTargetBranch(e.target.value);\n\n    return (\n      <div style={{ paddingLeft: 20, paddingRight: 20, width: \"100%\" }}>\n        <Grid\n          container\n          spacing={1}\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <Grid item sm={3} xs={12} style={{ marginTop: 16 }}>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"target-branch\" style={{ color: gitTheme }}>\n                Target Branch\n              </InputLabel>\n              <Select\n                input={<Input id=\"target-branch\" />}\n                onChange={handleSelect}\n                value={targetBranch}\n              >\n                {getSelectOptions([\"test-pipeline\", \"sandbox-pipeline\"])}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item sm={9} xs={12} style={{ marginTop: 16 }}>\n            <CopyTextDisplay\n              text={`git push -f origin ${branchName}:${targetBranch}`}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n);\n\nexport default DeployBranch;\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface HeaderProps {\n  gitTheme: string;\n  onIdChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  storyID?: string;\n}\n\nconst validId = /[A-Z]{4}-[a-zA-Z0-9]+/;\n\nconst Header: React.FC<HeaderProps> = React.memo((props: HeaderProps) => {\n  const { onIdChange, storyID, gitTheme } = props;\n\n  const isIdValid = storyID && validId.test(storyID);\n\n  return (\n    <>\n      <Typography variant=\"h2\" component=\"h1\">\n        Git Tools\n      </Typography>\n      <TextField\n        InputLabelProps={{ style: { color: gitTheme } }}\n        label=\"User Story ID\"\n        onChange={onIdChange}\n        placeholder=\"GNAP-12345\"\n        style={{ marginLeft: 20 }}\n        value={storyID}\n        error={!isIdValid}\n      />\n      <br />\n    </>\n  );\n});\n\nexport default Header;\n","import * as React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nexport const validTypingId = /[A-Z]{1,4}-?[a-zA-Z0-9]*/;\n\n/** function to generate select items based of input */\nexport const getSelectOptions = (arr: string[]): React.ReactNode =>\n  arr.map((t, i) => (\n    <MenuItem key={i} value={t}>\n      {t}\n    </MenuItem>\n  ));\n","import * as React from \"react\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { useRecoilState } from \"recoil\";\nimport { storyIdGitAtom } from \"../../../recoil/git-atom\";\nimport BranchName from \"./BranchName\";\nimport CommitText from \"./CommitText\";\nimport DeployBranch from \"./DeployBranch\";\nimport Header from \"./Header\";\nimport ExpandableCard from \"../../common/expandable-card\";\n\nimport { getSelectOptions, validTypingId } from \"./helpers\";\n\nconst gitTheme = deepOrange[900];\n\n/* GitTools  ->  Header\n *          |->  BranchName    -|\n *          |->  CommitText    -|->  CopyTextDisplay\n *          |->  DeployBranch  -|    */\nconst GitTools: React.FC = () => {\n  const [storyID, setStoryId] = useRecoilState(storyIdGitAtom);\n\n  /** function to update text state based on value */\n  const handleIDChange: React.ChangeEventHandler<\n    HTMLInputElement | HTMLTextAreaElement\n  > = (e) => {\n    const [value] = validTypingId.exec(e.target.value) || [\"\"];\n    setStoryId(value);\n  };\n\n  return (\n    <>\n      <Header\n        gitTheme={gitTheme}\n        onIdChange={handleIDChange}\n        storyID={storyID}\n      />\n      <ExpandableCard backgroundColor={gitTheme} title=\"Create Branch Name\">\n        <BranchName getSelectOptions={getSelectOptions} gitTheme={gitTheme} />\n      </ExpandableCard>\n      <ExpandableCard backgroundColor={gitTheme} title=\"Create Commit Message\">\n        <CommitText\n          getSelectOptions={getSelectOptions}\n          gitTheme={gitTheme}\n          storyID={storyID}\n        />\n      </ExpandableCard>\n      <ExpandableCard\n        backgroundColor={gitTheme}\n        title=\"Deploy to Test Pipelines\"\n      >\n        <DeployBranch getSelectOptions={getSelectOptions} gitTheme={gitTheme} />\n      </ExpandableCard>\n    </>\n  );\n};\n\nexport default GitTools;\n"],"names":["mapEventPropToEvent","eventProp","clickedRootScrollbar","event","doc","ClickAwayListener","props","children","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React.useRef","nodeRef","activatedRef","syntheticEventRef","React.useEffect","handleRef","useForkRef","handleClickAway","useEventCallback","insideReactTree","ownerDocument","insideDOM","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","mappedMouseEvent","_jsx","React.Fragment","React.cloneElement","useSnackbar","parameters","autoHideDuration","disableWindowBlurListener","onClose","open","ref","resumeHideDuration","timerAutoHide","handleKeyDown","nativeEvent","handleClose","reason","setAutoHideTimer","autoHideDurationParam","handlePause","handleResume","React.useCallback","createHandleBlur","otherHandlers","onBlurCallback","createHandleFocus","onFocusCallback","createMouseEnter","onMouseEnterCallback","createMouseLeave","onMouseLeaveCallback","propsEventHandlers","extractEventHandlers","externalEventHandlers","_extends","branchPrefixes","initialState","gitAtom","atom","onSet","state","storyIdGitAtom","commitPrefixGitAtom","_interopRequireDefault","require$$0","Clear","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","branchNameGitSelector","selector","get","branchMessage","branchPrefix","storyID","getSnackbarContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","composeClasses","SnackbarContentRoot","styled","Paper","styles","theme","emphasis","backgroundColor","emphasize","SnackbarContentMessage","SnackbarContentAction","SnackbarContent","React.forwardRef","inProps","useThemeProps","action","className","message","role","other","_objectWithoutPropertiesLoose","_jsxs","clsx","SnackbarContent$1","getSnackbarUtilityClass","_excluded2","anchorOrigin","slots","capitalize","SnackbarRoot","center","Snackbar","useTheme","defaultTransitionDuration","vertical","horizontal","ClickAwayListenerProps","ContentProps","TransitionComponent","Grow","transitionDuration","onEnter","onExited","TransitionProps","getRootProps","exited","setExited","React.useState","rootProps","useSlotProps","handleExited","node","handleEnter","isAppearing","Snackbar$1","chipStyles","CopyTextDisplay","isOpen","handleOpen","useOpenState","copyText","text","handleCopyText","_b","_a","jsxs","Fragment","jsx","Chip","IconButton","CloseIcon","wrapperStyles","topSpacing","BranchName","setState","useRecoilState","branchName","useRecoilValue","gitSelector","getSelectOptions","gitTheme","handleBranchMessageChange","e","handleBranchMessageClear","setBranchPrefix","newBranchPrefix","getBranchPrefixOptions","handleBranchPrefixSelect","gitThemeStyles","React.useMemo","Grid","FormControl","InputLabel","Select","Input","MenuItem","TextField","useCommitText","hasCommitPrefix","commitPrefix","setLocalCommitPrefix","commitMessage","setCommitMessage","commitDescription","setCommitDescription","finishes","setFinishes","prefix","desc","postfix","gitMessage","_e","isC","marginTopStyles","CommitText","setHasCommitPrefix","getCommitText","handleCommitPrefixSelect","handleCommitMessageChange","handleCommitDescriptionChange","clearCommitMessage","clearCommitDescription","handleFinishesToggle","getCommitPrefixOptions","handleGitCommitToggle","commitText","displayText","nl2br","FormControlLabel","Switch","DeployBranch","React.memo","targetBranch","setTargetBranch","handleSelect","validId","Header","onIdChange","isIdValid","Typography","validTypingId","arr","t","i","deepOrange","GitTools","setStoryId","handleIDChange","value","ExpandableCard","GitTools$1"],"mappings":"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","x_google_ignoreList":[0,1,3,5,6,7,8]}