import{M as I,O as F,W as M,A as H,j as w}from"./index-CU8sobOX.js";import{t as S,G as W,a as _,D as k}from"./GameTable-DZnP-0Ud.js";import{p as D,P as U,d as A}from"./PlayerMenu-BTXAJKSD.js";import{T as $}from"./Header-BGNfi7hJ.js";import"./Card-D_O2GNOm.js";import"./Slider-CtnNW-MN.js";import"./visuallyHidden-Dan1xhjv.js";import"./Select-D4zszyki.js";import"./isMuiElement-DslzYmVv.js";import"./useSlotProps-C1ck_29O.js";import"./useId-Dn5Ln3Gn.js";import"./blueGrey-BeTiP1I_.js";import"./Button-CdxfLeDu.js";import"./Grid2-DpXVUpeL.js";import"./useThemeProps-CO57GVQj.js";import"./TextField-By1kkt5p.js";const P=(a,t)=>{if(t.includes(4))return 7;const e=t.includes(3),r=t.indexOf(2),n=r!==-1;if(e&&n)return 6;if(e)return 3;if(n&&t.includes(2,r+1))return 2;if(n)return 1;const s=t.lastIndexOf(1)-t.indexOf(1)===4||t[12]&&t[0]&&t[1]&&t[2]&&t[3];let o=!0;for(let d=0;d<a.length;d+=1)if(a[d].suit!==a[0].suit){o=!1;break}return s&&o?8:o?5:s?4:0},T=a=>{const t=[0,0,0,0,0,0,0,0,0,0,0,0,0];return a.forEach(e=>{e&&(t[e.weight-2]+=1)}),t},J=a=>{const t=T(a),e=P(a,t),r=["0","0","0","0","0"];let n=0,s=4,o=0,d=-1;for(;n<5;){const h=t.indexOf(s,d+1);h===-1?(s-=1,d=-1):(r[o]=h.toString(14),o+=1,n+=s,d=h)}return`${e}${r.reduce((h,g)=>`${h}${g}`)}`},x=(a,t,e)=>{const r=[],n=[t.indexOf(1)];for(let s=1;s<a;s+=1)n[s]=t.indexOf(1,n[s-1]+1);for(let s=0;s<e.length;s+=1)for(let o=0;o<n.length;o+=1)if(e[s].weight-2===n[o]){r.push(s);break}return r},B=async(a,t)=>{if(a.hands.length<1)return a;try{const e=a.hands[0].cards,r=T(e);switch(P(e,r)){case 0:{const s=r.lastIndexOf(1)>=11?x(4,r,e):[0,1,2,3,4];return await t(s,a)}case 1:{const s=x(3,r,e);return await t(s,a)}case 2:case 3:{const s=x(1,r,e);return await t(s,a)}case 4:case 5:case 6:case 7:case 8:default:break}}catch(e){console.error(e)}return a},V=a=>{let t={val:0,id:0};a.forEach(e=>{var n;if(((n=e.hands[0])==null?void 0:n.cards.length)<1)return;const r=parseInt(J(e.hands[0].cards),14);r>t.val&&(t={val:r,id:e.id})}),a.forEach((e,r)=>{if(e.id===t.id){const n={...e,status:"win",money:e.money+20};a[r]=n}else{const n={...e,status:"lose",money:e.money-5};a[r]=n}})};var m=(a=>(a.DISCARD_CARDS="Discard Cards",a.END_TURN="End Turn",a.NEW_GAME="New Game",a.START_GAME="Start Game",a))(m||{});const E=()=>({gameFunctions:["Start Game"],cardsToDiscard:[],hideHands:!0,gameOver:!1}),C=I({key:"pokerAtom",default:JSON.parse(localStorage.getItem("poker-atom")||"null")||E(),effects:[({onSet:a})=>{a(t=>{localStorage.setItem("poker-atom",JSON.stringify(t))})}]}),q=F({key:"pokerState",get:({get:a})=>{const t=a(C),e=a(S),r=a(D).slice(0,5);return{poker:t,turn:e,players:r}},set:({get:a,set:t},e)=>{if(!(e instanceof M)){const{poker:r,turn:n,players:s}=e,o=a(D);t(C,r),t(S,n),t(D,[...s,o[5],o[6]])}}}),le=()=>{const[{poker:a,turn:t,players:e},r]=H(q),{cardsToDiscard:n,gameFunctions:s,gameOver:o,hideHands:d}=a,h=async(i,c)=>{const{hands:u}=c,l={...c},f=[...u[0].cards];try{const p=await k.deal(i.length);i.forEach((b,j)=>{f[b]=p[j]}),f.sort(k.rankSort);const{weight:y,soft:v}=A(f);l.hands=[{cards:f,weight:y,soft:v}]}catch(p){console.error(p)}return l},g=async()=>{var i;try{if(!d&&!o&&((i=e[t.player])!=null&&i.isBot)){const c=[...e];await _(e,async(u,l)=>{if(t.player<=l){const f=await B(u,h);c[l]=f}}),V(c),r({poker:{cardsToDiscard:n,gameFunctions:[m.NEW_GAME],gameOver:!0,hideHands:d},players:c,turn:{player:0,hand:0}})}}catch(c){console.error(c)}},R=async()=>{await k.shuffle().then(async()=>{const i=[...e];await _(e,async c=>{const u=await k.deal(5);u.sort(k.rankSort);const{weight:l,soft:f}=A(),p=e.findIndex(y=>y.id===c.id);if(p!==-1){const y={...i[p],hands:[{cards:u,weight:l,soft:f}]};i[p]=y}}),r({players:i,turn:t,poker:{cardsToDiscard:n,gameFunctions:[m.DISCARD_CARDS],gameOver:o,hideHands:!1}})}).catch(i=>{console.error(i)})},N=async(i,c,u)=>{try{const l=[...e],f=await h(u,i[c]);l[c]=f,r({poker:{cardsToDiscard:[],gameFunctions:[m.END_TURN],gameOver:o,hideHands:d},turn:t,players:l})}catch(l){console.error(l)}},O=async i=>{try{const c=[];switch(i){case m.DISCARD_CARDS:await N(e,t.player,n);break;case m.END_TURN:r({poker:{cardsToDiscard:[],gameFunctions:[m.DISCARD_CARDS],gameOver:o,hideHands:d},turn:{player:t.player+1,hand:0},players:e});break;case m.NEW_GAME:e.forEach(u=>c.push({...u,status:"",hands:[],bet:5})),r({poker:E(),turn:{player:0,hand:0},players:c});break;case m.START_GAME:await R();break;default:console.error("Unknown Game Function: ",i)}}catch(c){console.error(c)}},G=(i,c,u)=>{const l=[...n],f=l.indexOf(u);f===-1?l.push(u):l.splice(f,1),r({poker:{cardsToDiscard:l,gameFunctions:s,gameOver:o,hideHands:d},turn:t,players:e})};return g().catch(()=>{console.error("check update failed")}),w.jsxs(w.Fragment,{children:[w.jsxs("div",{className:"flex-container",children:[w.jsx($,{variant:"h2",component:"h1",gutterBottom:!0,children:"5 Card Draw Poker"}),w.jsx(U,{})]}),w.jsx(W,{cardClickHandler:G,cardsToDiscard:n,gameFunctions:s,onClick:O,gameOver:o,hideHands:d,isBlackJack:!1,players:e,turn:t})]})};export{le as default};
//# sourceMappingURL=index-J0WmUCOJ.js.map
