{"version":3,"file":"index-BSupF179.js","sources":["../../src/components/resume/cars/timeline-card/Segment.tsx","../../src/components/resume/cars/timeline-card/YearMarkers.tsx","../../src/components/resume/cars/timeline-card/Row.tsx","../../src/components/resume/cars/timeline-card/timelineHelpers.ts","../../src/components/resume/cars/timeline-card/TimelineCard.tsx","../../src/images/cars/07_toyota_prius.png","../../src/images/cars/97_plymouth_voyager.png","../../src/images/cars/93_pontiac_bonneville.webp","../../src/images/cars/10_chevrolet_impala.webp","../../src/images/cars/10_chevy_equinox.png","../../src/images/cars/15_mustang_gt_premium.png","../../src/images/cars/16_tesla_x.webp","../../src/images/cars/05_jaguar_xj8l.png","../../src/images/cars/18_corvette_zo6_3lz.png","../../src/images/cars/15_jaguar_f_type.webp","../../src/images/cars/20_ford_mustang.png","../../src/images/cars/21_porsche_panamera.png","../../src/images/cars/21_ford_bronco.webp","../../src/images/cars/22_honda_grom.webp","../../src/images/cars/19_porsche_cayenne.webp","../../src/images/cars/25_rivian_r1s.webp","../../src/constants/cars.ts","../../src/components/resume/cars/CarChartControls.tsx","../../src/components/resume/cars/graphs/CarChart.tsx","../../src/components/resume/cars/graphs/CarSankeyGraph.tsx","../../src/components/resume/cars/graphs/CarSpeedoGraph.tsx","../../src/components/resume/cars/graphs/CurrentCarStats.tsx","../../src/components/resume/cars/graphs/CarGraphs.tsx","../../src/components/resume/cars/CarCard.tsx","../../src/components/resume/cars/CarDisplay.tsx","../../src/components/resume/cars/Cars.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { grey } from \"@mui/material/colors\";\nimport { SegmentType } from \"./timelineHelpers\";\n\nconst bodyStyles: React.CSSProperties = {\n  cursor: \"default\",\n  paddingTop: \"5px\",\n  paddingBottom: \"5px\",\n  textAlign: \"center\",\n  borderRadius: 2,\n};\n\nconst Segment = React.memo(\n  ({ body, width, color, title, inverted }: SegmentType) => {\n    const {\n      palette: { mode },\n    } = useTheme();\n\n    // variables for empty segment\n    let style: React.CSSProperties = {\n      display: \"inline-block\",\n      width: `${width}%`,\n      color: inverted ? \"black\" : grey[50],\n    };\n    if (body) {\n      style = {\n        ...style,\n        ...bodyStyles,\n        backgroundColor: color,\n        boxShadow: `2px 3px 4px 1px ${mode !== \"dark\" ? grey[400] : grey[700]}`,\n      };\n    }\n\n    return (\n      <div style={style} title={title}>\n        {body || <br />}\n      </div>\n    );\n  },\n);\n\nSegment.displayName = \"Segment\";\n\nexport default Segment;\n","import * as React from \"react\";\nimport { grey } from \"@mui/material/colors\";\n\ninterface YearMarkersProps {\n  body?: string;\n  width: number;\n}\n\nconst boxStyles: React.CSSProperties = {\n  cursor: \"default\",\n  height: 500,\n  marginBottom: -500,\n  minWidth: 1,\n};\nconst markerStyles: React.CSSProperties = {\n  ...boxStyles,\n  backgroundColor: grey[200],\n  width: \"100%\",\n  maxWidth: 2.5,\n};\nconst labelStyles: React.CSSProperties = {\n  position: \"relative\",\n  right: 22,\n};\n\nconst YearMarkers = React.memo(({ body, width }: YearMarkersProps) => {\n  // variables for empty segment\n  const style: React.CSSProperties = {\n    display: \"inline-block\",\n    width: `${width}%`,\n  };\n\n  return !body ? (\n    <div title=\"year\" style={style}>\n      <br />\n    </div>\n  ) : (\n    <div style={{ ...style, ...boxStyles }} title={body}>\n      <div style={markerStyles} title=\"year-marker\">\n        <div style={labelStyles}>{body}</div>\n      </div>\n    </div>\n  );\n});\n\nYearMarkers.displayName = \"YearMarkers\";\n\nexport default YearMarkers;\n","import * as React from \"react\";\nimport Segment from \"./Segment\";\nimport YearMarkers from \"./YearMarkers\";\nimport { SegmentType } from \"./timelineHelpers\";\n\ninterface RowProps {\n  segments: SegmentType[];\n  yearMarkers?: boolean;\n  first?: boolean;\n}\n\nconst smMarginTop: React.CSSProperties = { marginTop: 10 };\nconst lgMarginTop: React.CSSProperties = { marginTop: 20 };\nconst noStyle: React.CSSProperties = { height: 0 };\n\nconst Row = ({ segments, yearMarkers = false, first = false }: RowProps) => {\n  let style = smMarginTop;\n  if (yearMarkers) {\n    style = noStyle;\n  } else if (first) {\n    style = lgMarginTop;\n  }\n\n  return (\n    <div style={style} title=\"timeline-row\">\n      {segments.map((data, j) =>\n        yearMarkers ? (\n          <YearMarkers key={j} body={data.body} width={data.width} />\n        ) : (\n          <Segment key={j} {...data} />\n        ),\n      )}\n    </div>\n  );\n};\n\nexport default Row;\n","import dateObj, { DateObj } from \"../../../../apis/DateHelper\";\nimport { CarEntry } from \"../../../../constants/cars\";\n\n/* *************************     Types     ************************* */\nexport interface SegmentType {\n  color?: string;\n  body?: string;\n  title?: string;\n  width: number;\n  inverted?: boolean;\n}\n\n/* *************************     Constants     ************************* */\nexport const START = dateObj(\"2008-03\");\nexport const END = dateObj();\n\nconst WIDTH = 99;\nconst MIN_TEXT_WIDTH = 85;\nconst MIN_SHORT_WIDTH = 54;\nconst YEAR_WIDTH = 0.3;\nconst YEAR_MARK_FREQ = 3;\n\n/* *************************     Local Functions     ************************* */\n/** function to add empty space between start and elm segment */\nconst addEmptySegment = (segments: SegmentType[], width: number): void => {\n  if (width > 0) {\n    segments.push({ width });\n  }\n};\n\n/** Get the width from the beginning of the graph to this bar */\nconst getTimeFromStart = (val: DateObj): number => {\n  // get max length\n  const totalDuration = END.diff(START, \"months\");\n  const timeFromStart = val.diff(START, \"months\");\n  const width = Math.floor((timeFromStart / totalDuration) * WIDTH);\n  return width > 0 ? width : 0;\n};\n\n/** function to add elm segment */\nconst addSegment = (\n  segments: SegmentType[],\n  elm: CarEntry,\n  beginning: number,\n  ending: number,\n): void => {\n  const { color, inverted, title, car, char } = elm;\n  const width = ending - beginning;\n  const textWidth = (width * (window.innerWidth - 64)) / WIDTH;\n  const payload = { color, inverted, width, title };\n  // check if name has room\n  if (textWidth < MIN_SHORT_WIDTH) {\n    segments.push({ body: char || elm.car[0], ...payload });\n  } else if (textWidth < MIN_TEXT_WIDTH) {\n    segments.push({ body: car.substring(0, 5), ...payload });\n  } else {\n    segments.push({ body: elm.car, ...payload });\n  }\n};\n\n/* *************************     Export Functions     ************************* */\n/** adds gray lines to indicate years */\nexport const getYearMarkers = () => {\n  const startYear = Number(START.format(\"YYYY\"));\n  const endYear = Number(END.format(\"YYYY\"));\n\n  const years = [];\n  for (let year = startYear + 1; year <= endYear; year += YEAR_MARK_FREQ) {\n    years.push(dateObj(`${year}`));\n  }\n\n  const marker = { width: YEAR_WIDTH, body: years[0].format(\"'YY\") };\n  const yearMarkers = [\n    { width: getTimeFromStart(years[0]) - YEAR_WIDTH },\n    marker,\n  ];\n\n  for (let i = 1; i < years.length; i += 1) {\n    const previousYear = getTimeFromStart(years[i - 1]);\n    const thisYear = getTimeFromStart(years[i]);\n    yearMarkers.push({ width: thisYear - previousYear - YEAR_WIDTH });\n    yearMarkers.push({ width: YEAR_WIDTH, body: years[i].format(\"'YY\") });\n  }\n\n  return yearMarkers;\n};\n\nconst getStart = (data: CarEntry, useKStart: boolean, useFStart: boolean) =>\n  useFStart\n    ? data.fStart || data.start\n    : useKStart\n      ? data.kStart || data.start\n      : data.start;\nconst getEnd = (data: CarEntry, useKStart: boolean, useFStart: boolean) =>\n  useFStart\n    ? data.kStart || data.end\n    : useKStart\n      ? data.fStart || data.end\n      : data.end;\n\n/** break data up into segments */\nexport const getSegments = (\n  data: CarEntry[],\n  added: boolean[],\n  useKStart: boolean,\n  useFStart: boolean,\n  elm: CarEntry,\n  i: number,\n): SegmentType[] => {\n  // skip if added already\n  if (added[i]) {\n    return [];\n  }\n\n  // local variables\n  const segments: SegmentType[] = [];\n  const segStart: DateObj = getStart(elm, useKStart, useFStart);\n  const segEnd: DateObj = getEnd(elm, useKStart, useFStart);\n\n  let beginning = getTimeFromStart(segStart);\n  let ending = getTimeFromStart(segEnd);\n\n  // add main segments\n  addEmptySegment(segments, beginning);\n  addSegment(segments, elm, beginning, ending);\n  // track that segments have been added\n  added[i] = true;\n\n  // find any other segments that will fit\n  data.forEach((entry, j) => {\n    // skip if added already\n    if (!added[j]) {\n      // test segment\n      beginning = getTimeFromStart(getStart(entry, useKStart, useFStart));\n      // if start is after end of main segment\n      if (beginning >= ending) {\n        // add filler in between end/start\n        addEmptySegment(segments, beginning - ending);\n        // add next segment\n        ending = getTimeFromStart(getEnd(entry, useKStart, useFStart));\n        addSegment(segments, entry, beginning, ending);\n        // mark as already added\n        added[j] = true;\n      }\n    }\n  });\n\n  // get last segment\n  addEmptySegment(segments, WIDTH - ending);\n\n  return [...segments];\n};\n","import { FormatOutput } from \"../../../../apis/DateHelper\";\nimport ExpandableCard from \"../../../common/expandable-card\";\nimport Row from \"./Row\";\nimport { START, END, getYearMarkers, getSegments } from \"./timelineHelpers\";\nimport { CarEntry } from \"../../../../constants/cars\";\n\ninterface TimelineCardProps {\n  /** reads \"car\" from each array entry and creates segments */\n  data: CarEntry[];\n  useFStart: boolean;\n  useKStart: boolean;\n}\n\nconst DATE_FORMAT: FormatOutput = \"MMMM Y\";\n/** Sorting function by month */\nconst monthSort = (a: CarEntry, b: CarEntry): number =>\n  a.start.diff(b.start, \"months\");\nconst kMonthSort = (a: CarEntry, b: CarEntry): number =>\n  (a.kStart || a.start).diff(b.kStart || b.start, \"months\");\nconst fMonthSort = (a: CarEntry, b: CarEntry): number =>\n  (a.fStart || a.start).diff(b.fStart || b.start, \"months\");\n\n/** TimelineCard  ->  Timeline  ->  Row  ->  Segment\n **                                     |->  YearMarkers */\nconst TimelineCard = ({\n  data: propsData,\n  useFStart,\n  useKStart,\n}: TimelineCardProps) => {\n  // get immutable data from props and sort by start date\n  const data: CarEntry[] = [...propsData].sort(\n    useFStart ? fMonthSort : useKStart ? kMonthSort : monthSort,\n  );\n  // track elements added already\n  const added: boolean[] = [];\n\n  return (\n    <ExpandableCard\n      backgroundColor=\"black\"\n      title=\"Ken's Cars\"\n      subtitle={`${START.format(DATE_FORMAT)} - ${END.format(DATE_FORMAT)}`}\n    >\n      <div style={{ width: \"100%\", paddingBottom: 7 }}>\n        <Row key={data.length} segments={getYearMarkers()} yearMarkers />\n        {data.map((elm, i) => {\n          const segments = getSegments(\n            data,\n            added,\n            useKStart,\n            useFStart,\n            elm,\n            i,\n          );\n          return segments.length ? (\n            <Row key={i} segments={segments} first={i === 0} />\n          ) : null;\n        })}\n      </div>\n    </ExpandableCard>\n  );\n};\n\nexport default TimelineCard;\n","export default \"__VITE_ASSET__1aPuPoEG__\"","export default \"__VITE_ASSET__CXiU5eYR__\"","export default \"__VITE_ASSET__iI3KQYEv__\"","export default \"__VITE_ASSET__BdD3CmSb__\"","export default \"__VITE_ASSET__BgknciWA__\"","export default \"__VITE_ASSET__BFjnMYRr__\"","export default \"__VITE_ASSET__Do38p6$V__\"","export default \"__VITE_ASSET__CWD_kgJB__\"","export default \"__VITE_ASSET__89nL3QfP__\"","export default \"__VITE_ASSET__C64Pj2UN__\"","export default \"__VITE_ASSET__B6TYYAvW__\"","export default \"__VITE_ASSET__DlXqSicP__\"","export default \"__VITE_ASSET__BxSsY9wx__\"","export default \"__VITE_ASSET__BBJ6reDp__\"","export default \"__VITE_ASSET__BndwefjE__\"","export default \"__VITE_ASSET__CIoeNH7F__\"","import {\n  amber,\n  indigo,\n  grey,\n  red,\n  yellow,\n  teal,\n  orange,\n} from \"@mui/material/colors\";\nimport dateObj, { DateObj } from \"../apis/DateHelper\";\n\nimport prius07 from \"../images/cars/07_toyota_prius.png\";\nimport voyager97 from \"../images/cars/97_plymouth_voyager.png\";\nimport pontiac93 from \"../images/cars/93_pontiac_bonneville.webp\";\nimport impala10 from \"../images/cars/10_chevrolet_impala.webp\";\nimport equinox10 from \"../images/cars/10_chevy_equinox.png\";\nimport mustang15 from \"../images/cars/15_mustang_gt_premium.png\";\nimport tesla16 from \"../images/cars/16_tesla_x.webp\";\nimport xj8l05 from \"../images/cars/05_jaguar_xj8l.png\";\nimport corvette18 from \"../images/cars/18_corvette_zo6_3lz.png\";\nimport ftype15 from \"../images/cars/15_jaguar_f_type.webp\";\nimport mustang20 from \"../images/cars/20_ford_mustang.png\";\nimport panamera21 from \"../images/cars/21_porsche_panamera.png\";\nimport bronco21 from \"../images/cars/21_ford_bronco.webp\";\nimport grom22 from \"../images/cars/22_honda_grom.webp\";\nimport porsche19 from \"../images/cars/19_porsche_cayenne.webp\";\nimport r1s25 from \"../images/cars/25_rivian_r1s.webp\";\n\nexport interface CarEntry {\n  color: string;\n  title: string;\n  start: DateObj;\n  kStart?: DateObj;\n  fStart?: DateObj;\n  end: DateObj;\n  inverted?: boolean;\n  car: string;\n  char?: string;\n  nickname?: string;\n  src: string;\n  transmission: string;\n  horsepower: number;\n  MPG: number;\n  torque: number;\n  weight: number;\n  zTo60: number;\n}\n\n// --------------------------------------------------     Past Shared Cars     -------------------------------------------------- //\n\nconst irene = {\n  color: grey[400],\n  start: dateObj(\"2010-12\"),\n  fStart: dateObj(\"2015-02\"),\n  end: dateObj(\"2015-06\"),\n  car: \"Impala\",\n  nickname: \"Irene\",\n  title: \"Chevrolet Impala LS (2010)\",\n  inverted: true,\n\n  story:\n    \"After selling my first car, my parents purchased a 2010 Chevrolet Impala LS for me to drive. It was a used Hertz rental car.\",\n  src: impala10,\n  transmission: \"Automatic\",\n\n  horsepower: 211,\n  MPG: 22,\n  torque: 216,\n  weight: 3555,\n  zTo60: 8.3,\n};\n\nconst tesla = {\n  color: grey[50],\n  start: dateObj(\"2016-03\"),\n  kStart: dateObj(\"2025-01\"),\n  end: dateObj(\"2025-06\"),\n  car: \"Model X\",\n  char: \"X\",\n  title: \"Tesla Model X 90D (2016)\",\n  inverted: true,\n\n  story:\n    \"My Father got a 2016 Tesla Model X 90D while I was working at Tesla. My dad and I traded cars in January 2025 so I could try all electric and he could try a plug-in hybrid.\",\n  src: tesla16,\n  transmission: \"Direct\",\n\n  horsepower: 417,\n  MPG: 92,\n  torque: 485,\n  weight: 5271,\n  zTo60: 4.8,\n};\n\n// --------------------------------------------------     Present Shared Cars     -------------------------------------------------- //\n\nconst camilla = {\n  color: yellow[500],\n  start: dateObj(\"2019-01\"),\n  fStart: dateObj(\"2021-10\"),\n  end: dateObj(),\n  car: \"Corvette\",\n  nickname: \"Camilla\",\n  title: \"Chevrolet Corvette Z06 (2018)\",\n  inverted: true,\n\n  story:\n    \"To replace my Mustang I purchased a 2018 Chevrolet Corvette Z06 3LZ with the Z07 Track Package used from the Ron Fellows Performance Driving School. My parents purchased my car in October 2021 to keep it in the family.\",\n  src: corvette18,\n  transmission: \"Manual\",\n\n  horsepower: 650,\n  MPG: 18,\n  torque: 650,\n  weight: 3524,\n  zTo60: 3.1,\n};\n\nconst cheyenne = {\n  color: grey[50],\n  start: dateObj(\"2023-08\"),\n  fStart: dateObj(\"2025-01\"),\n  end: dateObj(),\n  car: \"Cayenne\",\n  nickname: \"Cheyenne\",\n  title: \"Porsche Cayenne E-Hybrid (2019)\",\n  inverted: true,\n\n  story:\n    \"I bought a plug-in 2019 Porsche Cayenne E-Hybrid as a bit of an upgrade to my old Bronco. My dad and I traded cars in January 2025 so I could try all electric and he could try a plug-in hybrid.\",\n  src: porsche19,\n  transmission: \"Automatic\",\n\n  horsepower: 455,\n  MPG: 46,\n  torque: 516,\n  weight: 5060,\n  zTo60: 4.7,\n};\n\n// --------------------------------------------------     Cars     -------------------------------------------------- //\n\nconst pastFamilyCarsNoRepeats: CarEntry[] = [\n  {\n    color: grey[50],\n    start: dateObj(\"2008-03\"),\n    end: dateObj(\"2010-02\"),\n    car: \"Voyager\",\n    title: \"Plymouth Voyager (1997)\",\n    inverted: true,\n    src: voyager97,\n    transmission: \"Automatic\",\n\n    horsepower: 158,\n    MPG: 21,\n    torque: 203,\n    weight: 3696,\n    zTo60: 10.1,\n  },\n  {\n    color: indigo[500],\n    start: dateObj(\"2008-03\"),\n    end: dateObj(\"2016-08\"),\n    car: \"Prius\",\n    title: \"Toyota Prius (2007)\",\n    src: prius07,\n    transmission: \"Automatic\",\n\n    horsepower: 110,\n    MPG: 46,\n    torque: 82,\n    weight: 2932,\n    zTo60: 10.4,\n  },\n  {\n    color: amber[200],\n    inverted: true,\n    start: dateObj(\"2017-10\"),\n    end: dateObj(\"2021-08\"),\n    car: \"Jag XJ8-L\",\n    char: \"JX\",\n    title: \"Jaguar XJ8-L (2005)\",\n    src: xj8l05,\n    transmission: \"Automatic\",\n\n    horsepower: 294,\n    MPG: 19,\n    torque: 303,\n    weight: 3777,\n    zTo60: 6.3,\n  },\n  {\n    color: indigo[900],\n    start: dateObj(\"2020-03\"),\n    end: dateObj(\"2022-10\"),\n    car: \"MustangB\",\n    char: \"Mb\",\n    nickname: \"Miranda Jr\",\n    title: \"Ford Mustang GT Premium (2020)\",\n    src: mustang20,\n    transmission: \"Manual\",\n\n    horsepower: 460,\n    MPG: 18,\n    torque: 420,\n    weight: 3705,\n    zTo60: 4.5,\n  },\n];\n\nconst currentFamilyCars: CarEntry[] = [\n  {\n    color: yellow[200],\n    inverted: true,\n    start: dateObj(\"2010-02\"),\n    end: dateObj(),\n    car: \"Equinox\",\n    title: \"Chevrolet Equinox LTZ (2010)\",\n    src: equinox10,\n    transmission: \"Automatic\",\n\n    horsepower: 182,\n    MPG: 26,\n    torque: 172,\n    weight: 3838,\n    zTo60: 8.7,\n  },\n  {\n    color: grey[50],\n    start: dateObj(\"2021-08\"),\n    end: dateObj(),\n    car: \"Panamera\",\n    char: \"PP\",\n    title: \"Porsche Panamera 4 E-Hybrid (2021)\",\n    inverted: true,\n    src: panamera21,\n    transmission: \"Automatic\",\n\n    horsepower: 455,\n    MPG: 22,\n    torque: 516,\n    weight: 4967,\n    zTo60: 4.3,\n  },\n  camilla,\n  cheyenne,\n];\n\nconst pastKensCarsNoRepeats: CarEntry[] = [\n  {\n    color: grey[800],\n    start: dateObj(\"2008-03\"),\n    end: dateObj(\"2010-12\"),\n    car: \"Bonneville\",\n    char: \"PB\",\n    nickname: \"Petunia\",\n    title: \"Pontiac Bonneville (1993)\",\n    src: pontiac93,\n    transmission: \"Automatic\",\n\n    horsepower: 205,\n    MPG: 18,\n    torque: 260,\n    weight: 3607,\n    zTo60: 8.5,\n  },\n  irene,\n  {\n    color: red[900],\n    start: dateObj(\"2015-02\"),\n    end: dateObj(\"2019-01\"),\n    car: \"Mustang\",\n    char: \"Ma\",\n    nickname: \"Miranda\",\n    title: \"Ford Mustang GT Premium (2015)\",\n    src: mustang15,\n    transmission: \"Automatic\",\n\n    horsepower: 435 + 15,\n    MPG: 19,\n    torque: 400,\n    weight: 3705,\n    zTo60: 4.4,\n  },\n  {\n    color: grey[50],\n    start: dateObj(\"2018-03\"),\n    end: dateObj(\"2018-08\"),\n    car: \"Jag F-Type\",\n    title: \"Jaguar F-Type R Convertible (2015)\",\n    inverted: true,\n    src: ftype15,\n    transmission: \"Manual\",\n\n    horsepower: 380,\n    MPG: 22,\n    torque: 339,\n    weight: 3558,\n    zTo60: 5.1,\n  },\n  {\n    color: teal[100],\n    start: dateObj(\"2021-10\"),\n    end: dateObj(\"2023-03\"),\n    car: \"Bronco\",\n    nickname: \"Betty\",\n    title: \"Ford Bronco Badlands (2021)\",\n    inverted: true,\n    src: bronco21,\n    transmission: \"Manual\",\n\n    horsepower: 270,\n    MPG: 18,\n    torque: 310,\n    weight: 4499,\n    zTo60: 7.4,\n  },\n  {\n    color: grey[900],\n    start: dateObj(\"2022-04\"),\n    end: dateObj(\"2025-02\"),\n    car: \"Grom\",\n    title: \"Honda Grom (2022)\",\n    src: grom22,\n    transmission: \"Sequential\",\n\n    horsepower: parseFloat((9.7 * 1.139).toPrecision(3)),\n    MPG: 130,\n    torque: parseFloat((7.7 * 1.143).toPrecision(3)),\n    weight: 230,\n    zTo60: 13,\n  },\n  tesla,\n];\n\nconst currentKensCars: CarEntry[] = [\n  {\n    color: amber.A100,\n    start: dateObj(\"2025-06\"),\n    end: dateObj(),\n    car: \"R1S\",\n    char: \"R\",\n    title: \"Rivian R1S (2025)\",\n    inverted: true,\n    src: r1s25,\n    transmission: \"Direct\",\n\n    horsepower: 850,\n    MPG: 76,\n    torque: 1103,\n    weight: 6826,\n    zTo60: 2.9,\n  },\n];\n\n// --------------------------------------------------     Car Processing     -------------------------------------------------- //\n\nexport const cars: CarEntry[] = [\n  ...pastKensCarsNoRepeats,\n  ...currentKensCars,\n  ...pastFamilyCarsNoRepeats,\n  ...currentFamilyCars,\n];\n\nconst dateSort = (a: DateObj, b: DateObj) => {\n  let diff = a.year - b.year;\n  if (diff === 0) {\n    diff = a.month - b.month;\n  }\n  return diff;\n};\nconst carSort = (isK?: boolean) => (a: CarEntry, b: CarEntry) => {\n  return isK\n    ? dateSort(a.fStart || a.end, b.fStart || b.end)\n    : dateSort(a.kStart || a.end, b.kStart || b.end);\n};\n\nconst pastKensCars = [...pastKensCarsNoRepeats, camilla, cheyenne].sort(\n  carSort(true),\n);\nconst pastFamilyCars = [...pastFamilyCarsNoRepeats, irene, tesla].sort(\n  carSort(),\n);\nconst hideFamilyCars = [...pastKensCars, ...currentKensCars].sort(\n  carSort(true),\n);\nconst hideKenCars = [...pastFamilyCars, ...currentFamilyCars].sort(carSort());\n\nexport {\n  pastKensCars,\n  currentKensCars,\n  pastFamilyCars,\n  currentFamilyCars,\n  hideFamilyCars,\n  hideKenCars,\n};\n\n// --------------------------------------------------     Normalized Graphs     -------------------------------------------------- //\n\ntype HighChartsData = [string, number];\ninterface GraphData {\n  xAxis: string[];\n  horsepower: HighChartsData[];\n  MPG: HighChartsData[];\n  torque: HighChartsData[];\n  weight: HighChartsData[];\n  zTo60: HighChartsData[];\n  powerToWeight: HighChartsData[];\n}\n\nconst smoothData = (cur: number, high: number, low: number) =>\n  Math.floor(100 * ((cur - low) / (high - low)));\n\nconst getMinAndMax = (data: CarEntry[]) => {\n  const max = {\n    horsepower: data[0].horsepower,\n    MPG: data[0].MPG,\n    torque: data[0].torque,\n    weight: data[0].weight,\n    zTo60: data[0].zTo60,\n    powerToWeight: data[0].horsepower / data[0].weight,\n  };\n  const min = { ...max };\n\n  // find the min and max values in the array\n  for (let i = 1; i < data.length; i += 1) {\n    const { horsepower, MPG, torque, weight, zTo60 } = data[i];\n    const powerToWeight = horsepower / weight;\n\n    if (horsepower > max.horsepower) {\n      max.horsepower = horsepower;\n    } else if (horsepower < min.horsepower) {\n      min.horsepower = horsepower;\n    }\n    if (MPG > max.MPG) {\n      max.MPG = MPG;\n    } else if (MPG < min.MPG) {\n      min.MPG = MPG;\n    }\n    if (torque > max.torque) {\n      max.torque = torque;\n    } else if (torque < min.torque) {\n      min.torque = torque;\n    }\n    if (weight > max.weight) {\n      max.weight = weight;\n    } else if (weight < min.weight) {\n      min.weight = weight;\n    }\n    if (zTo60 > max.zTo60) {\n      max.zTo60 = zTo60;\n    } else if (zTo60 < min.zTo60) {\n      min.zTo60 = zTo60;\n    }\n    if (powerToWeight > max.powerToWeight) {\n      max.powerToWeight = powerToWeight;\n    } else if (powerToWeight < min.powerToWeight) {\n      min.powerToWeight = powerToWeight;\n    }\n  }\n\n  return { min, max };\n};\n\nexport const processData = (allData: CarEntry[]): GraphData => {\n  const data = allData.sort(\n    (a, b) => a.horsepower / a.weight - b.horsepower / b.weight,\n  );\n\n  const ret: GraphData = {\n    xAxis: [],\n    horsepower: [],\n    MPG: [],\n    torque: [],\n    weight: [],\n    zTo60: [],\n    powerToWeight: [],\n  };\n\n  if (data.length === 0) {\n    return ret;\n  }\n\n  const { min, max } = getMinAndMax(data);\n\n  // normalize the data to all fit on the same graph (0-1)\n  data.forEach((car: CarEntry) => {\n    const powerToWeight = car.horsepower / car.weight;\n    ret.xAxis.push(car.char || car.car[0]);\n    ret.horsepower.push([\n      car.car,\n      smoothData(car.horsepower, max.horsepower, min.horsepower),\n    ]);\n    ret.MPG.push([car.car, smoothData(car.MPG, max.MPG, min.MPG)]);\n    ret.torque.push([car.car, smoothData(car.torque, max.torque, min.torque)]);\n    ret.weight.push([car.car, smoothData(car.weight, max.weight, min.weight)]);\n    ret.zTo60.push([car.car, smoothData(car.zTo60, max.zTo60, min.zTo60)]);\n    ret.powerToWeight.push([\n      car.car,\n      smoothData(powerToWeight, max.powerToWeight, min.powerToWeight),\n    ]);\n  });\n\n  return ret;\n};\n\n// --------------------------------------------------     Current Car Ranked     -------------------------------------------------- //\n\nexport interface CurrentCarStatsData {\n  maxVal: number;\n  val: number;\n  name: string;\n}\n\nconst getP2W = (c: CarEntry) =>\n  parseFloat((c.horsepower / c.weight).toFixed(3));\n\nexport const processCurrentCarStats = (\n  key: \"zTo60\" | \"horsepower\" | \"MPG\" | \"torque\" | \"weight\" | \"powerToWeight\",\n): CurrentCarStatsData => {\n  const idx = 0;\n  const currentValue =\n    key === \"powerToWeight\"\n      ? getP2W(currentKensCars[idx])\n      : currentKensCars[idx][key];\n\n  let max = currentValue;\n  cars.forEach((c) => {\n    const val = key === \"powerToWeight\" ? getP2W(c) : c[key];\n    if (val > max) {\n      max = val;\n    }\n  });\n\n  return {\n    maxVal: max,\n    val: currentValue,\n    name: currentKensCars[idx].car,\n  };\n};\n\n// --------------------------------------------------     Sankey     -------------------------------------------------- //\n\nexport const carSankeyNodes = [\n  // level 1\n  //     Japan\n  { id: \"Honda\", color: red[500] },\n  { id: \"Toyota\", color: indigo[400] },\n  //     US\n  { id: \"Ford\", color: indigo[900] },\n  { id: \"Tesla\", color: red[500] },\n  { id: \"Rivian\", color: amber[500] },\n  { id: \"Chevrolet\", color: yellow[700] },\n  { id: \"Pontiac\", color: red[500] },\n  { id: \"Plymouth\", color: grey[50] },\n  //     Other\n  { id: \"Porsche\", color: orange[500] },\n  { id: \"Jaguar\", color: red[900] },\n\n  // level 2\n  //     US\n  { id: \"GM\", color: yellow[700], offset: 70 },\n  { id: \"Stellantis\", color: grey[50], offset: 70 },\n  //     Other\n  { id: \"Volkswagen\", color: orange[500], offset: 70 },\n  { id: \"TATA\", color: indigo[500], offset: 70 },\n\n  // level 3\n  { id: \"🇯🇵\", color: red[500], column: 2 },\n  { id: \"🇺🇸\", color: indigo[900], column: 2 },\n  { id: \"🇩🇪\", color: orange[500], column: 2 },\n  { id: \"🇬🇧\", color: \"white\", column: 2 },\n\n  // level 4\n  { id: \"🏎️\", color: grey[200] },\n];\n\nexport const familySankeyData = [\n  // level 1\n  //     Japan\n  [\"Toyota\", \"🇯🇵\", 1],\n  //     US\n  [\"Ford\", \"🇺🇸\", 1],\n  [\"Tesla\", \"🇺🇸\", 1],\n  [\"Chevrolet\", \"GM\", 3],\n  [\"Plymouth\", \"Stellantis\", 1],\n  //     Other\n  [\"Porsche\", \"Volkswagen\", 2],\n  [\"Jaguar\", \"TATA\", 1],\n\n  // level 2\n  //     US\n  [\"GM\", \"🇺🇸\", 3],\n  [\"Stellantis\", \"🇺🇸\", 1],\n  //     Other\n  [\"Volkswagen\", \"🇩🇪\", 2],\n  [\"TATA\", \"🇬🇧\", 1],\n\n  // level 3\n  [\"🇯🇵\", \"🏎️\", 1],\n  [\"🇺🇸\", \"🏎️\", 6],\n  [\"🇩🇪\", \"🏎️\", 2],\n  [\"🇬🇧\", \"🏎️\", 1],\n];\n\nexport const kenSankeyData = [\n  // level 1\n  //     Japan\n  [\"Honda\", \"🇯🇵\", 1],\n  //     US\n  [\"Ford\", \"🇺🇸\", 2],\n  [\"Rivian\", \"🇺🇸\", 1],\n  [\"Tesla\", \"🇺🇸\", 1],\n  [\"Chevrolet\", \"GM\", 2],\n  [\"Pontiac\", \"GM\", 1],\n  //     Other\n  [\"Porsche\", \"Volkswagen\", 1],\n  [\"Jaguar\", \"TATA\", 1],\n\n  // level 2\n  //     US\n  [\"GM\", \"🇺🇸\", 3],\n  //     Other\n  [\"Volkswagen\", \"🇩🇪\", 1],\n  [\"TATA\", \"🇬🇧\", 1],\n\n  // level 3\n  [\"🇯🇵\", \"🏎️\", 1],\n  [\"🇺🇸\", \"🏎️\", 7],\n  [\"🇩🇪\", \"🏎️\", 1],\n  [\"🇬🇧\", \"🏎️\", 1],\n];\n\nexport const carSankeyData = [\n  // level 1\n  //     Japan\n  [\"Honda\", \"🇯🇵\", 1],\n  [\"Toyota\", \"🇯🇵\", 1],\n  //     US\n  [\"Ford\", \"🇺🇸\", 3],\n  [\"Rivian\", \"🇺🇸\", 1],\n  [\"Tesla\", \"🇺🇸\", 1],\n  [\"Chevrolet\", \"GM\", 3],\n  [\"Pontiac\", \"GM\", 1],\n  [\"Plymouth\", \"Stellantis\", 1],\n  //     Other\n  [\"Porsche\", \"Volkswagen\", 2],\n  [\"Jaguar\", \"TATA\", 2],\n\n  // level 2\n  //     US\n  [\"GM\", \"🇺🇸\", 4],\n  [\"Stellantis\", \"🇺🇸\", 1],\n  //     Other\n  [\"Volkswagen\", \"🇩🇪\", 2],\n  [\"TATA\", \"🇬🇧\", 2],\n\n  // level 3\n  [\"🇯🇵\", \"🏎️\", 2],\n  [\"🇺🇸\", \"🏎️\", 10],\n  [\"🇩🇪\", \"🏎️\", 2],\n  [\"🇬🇧\", \"🏎️\", 2],\n];\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\n\ninterface CarChartControlsProps {\n  hideFamily: boolean;\n  hideKen: boolean;\n  onClick: (isKen: boolean) => () => void;\n}\n\nconst CarChartControls = React.memo(\n  ({ onClick, hideFamily, hideKen }: CarChartControlsProps) => (\n    <ButtonGroup sx={{ marginTop: 3 }}>\n      <Button\n        onClick={onClick(false)}\n        variant={hideFamily ? \"contained\" : \"outlined\"}\n        color=\"error\"\n      >\n        Hide Family Cars\n      </Button>\n      <Button\n        onClick={onClick(true)}\n        variant={hideKen ? \"contained\" : \"outlined\"}\n        color=\"error\"\n      >\n        Hide Ken&apos;s Cars\n      </Button>\n    </ButtonGroup>\n  ),\n);\n\nCarChartControls.displayName = \"CarChartControls\";\n\nexport default CarChartControls;\n","import * as React from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport \"highcharts/modules/accessibility\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { processData, CarEntry } from \"../../../../constants/cars\";\n\nexport interface CarChartProps {\n  data: CarEntry[];\n  color: string;\n}\n\nconst CarChart = React.memo(({ data, color }: CarChartProps) => {\n  const { horsepower, weight, powerToWeight, zTo60, xAxis } = processData(data);\n\n  const options = {\n    accessibility: { enabled: true },\n    chart: { type: \"spline\", backgroundColor: null },\n    credits: { enabled: false },\n    legend: { enabled: false },\n    plotOptions: { series: { marker: { enabled: false }, lineWidth: 2 } },\n    title: { text: \"Car Data\", style: { color } },\n    tooltip: { valueSuffix: \"%\" },\n    xAxis: { categories: xAxis, labels: { style: { color } } },\n    yAxis: {\n      floor: 0,\n      ceiling: 100,\n      gridLineDashStyle: \"Dot\",\n      labels: { enabled: false },\n      title: { text: undefined },\n    },\n    series: [\n      { data: zTo60, name: \"0-60\" },\n      { data: horsepower, name: \"Horsepower\" },\n      { data: weight, name: \"Weight\" },\n      { data: powerToWeight, name: \"Power-to-Weight\" },\n    ],\n  };\n\n  return (\n    <figure style={{ margin: 0, width: \"100%\" }}>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </figure>\n  );\n});\n\nCarChart.displayName = \"CarChart\";\n\nexport default CarChart;\n","import * as React from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"highcharts/highcharts-more\";\nimport \"highcharts/modules/sankey\";\nimport \"highcharts/modules/accessibility\";\nimport {\n  carSankeyNodes,\n  carSankeyData,\n  kenSankeyData,\n  familySankeyData,\n} from \"../../../../constants/cars\";\n\ninterface CarSankeyGraphProps {\n  color: string;\n  hideKen: boolean;\n  hideFamily: boolean;\n}\n\nconst CarSankeyGraph = React.memo(\n  ({ color, hideKen, hideFamily }: CarSankeyGraphProps) => {\n    let data = carSankeyData;\n    if (hideKen && hideFamily) {\n      data = [];\n    } else if (hideKen) {\n      data = familySankeyData;\n    } else if (hideFamily) {\n      data = kenSankeyData;\n    }\n\n    const options: Highcharts.Options = {\n      chart: { type: \"sankey\", backgroundColor: \"transparent\" },\n      credits: { enabled: false },\n      title: { text: \"Cars\", style: { color } },\n      accessibility: {\n        enabled: true,\n        point: {\n          // DEFAULT: {highcharts-id}, from: {point.from}, to: {point.to}, weight: {point.weight}.\n          valueDescriptionFormat:\n            \"{point.to} has {point.weight} from {point.from}.\",\n        },\n      },\n      plotOptions: {\n        sankey: {\n          nodeWidth: 70, // Adjust node width for better spacing\n        },\n      },\n      series: [\n        {\n          name: \"Cars\",\n          type: \"sankey\",\n          keys: [\"from\", \"to\", \"weight\"],\n          nodes: carSankeyNodes,\n          data,\n        },\n      ],\n    };\n\n    return (\n      <figure style={{ margin: 0, width: \"100%\" }}>\n        <HighchartsReact highcharts={Highcharts} options={options} />\n      </figure>\n    );\n  },\n);\n\nCarSankeyGraph.displayName = \"CarSankeyGraph\";\n\nexport default CarSankeyGraph;\n","import * as React from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport \"highcharts/modules/accessibility\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Grid from \"@mui/material/Grid\";\nimport { green, grey, red } from \"@mui/material/colors\";\nimport { CurrentCarStatsData } from \"../../../../constants/cars\";\n\nexport interface CarSpeedoGraphProps extends CurrentCarStatsData {\n  label: string;\n  title: string;\n  color: \"black\" | \"white\";\n  endGreenVal: number;\n  startRedVal: number;\n}\n\nconst CarSpeedoGraph = React.memo(\n  ({\n    color,\n    maxVal,\n    endGreenVal,\n    startRedVal,\n    val,\n    label,\n    title,\n    name,\n  }: CarSpeedoGraphProps) => {\n    const min = title === \"Weight\" ? 2500 : 0;\n    const greenEnd = Math.max(min, endGreenVal);\n    const options = {\n      accessibility: { enabled: true },\n      credits: { enabled: false },\n      pane: { startAngle: -135, endAngle: 135, background: null },\n      title: { text: `${name} ${title}`, style: { color } },\n      chart: { type: \"gauge\", backgroundColor: null },\n      series: [\n        {\n          name,\n          data: [val],\n          tooltip: { valueSuffix: ` ${label}` },\n          dataLabels: { format: label, borderWidth: 0, color },\n          dial: { backgroundColor: color },\n          pivot: { backgroundColor: color },\n        },\n      ],\n      yAxis: {\n        min,\n        max: maxVal,\n        lineWidth: 0,\n        labels: { distance: 20, style: { color } },\n        plotBands: [\n          {\n            from: min,\n            to: greenEnd,\n            color: green[400],\n            thickness: 20,\n          },\n          {\n            from: startRedVal,\n            to: maxVal,\n            color: red[500],\n            thickness: 20,\n          },\n          {\n            from: greenEnd,\n            to: startRedVal,\n            color: color === \"white\" ? grey[800] : grey[200],\n            thickness: 20,\n          },\n        ],\n      },\n    };\n\n    return (\n      // @ts-expect-error - custom breakpoint\n      <Grid size={{ xs: 12, sm: 4, lg: 2, xxxl: 1 }}>\n        <figure style={{ margin: 0, width: \"100%\" }}>\n          <HighchartsReact highcharts={Highcharts} options={options} />\n        </figure>\n      </Grid>\n    );\n  },\n);\n\nCarSpeedoGraph.displayName = \"CarSpeedoGraph\";\n\nexport default CarSpeedoGraph;\n","import * as React from \"react\";\nimport { processCurrentCarStats } from \"../../../../constants/cars\";\nimport CarSpeedoGraph from \"./CarSpeedoGraph\";\n\nexport interface CurrentCarStatsProps {\n  color: \"black\" | \"white\";\n}\n\nconst CurrentCarStats = React.memo(({ color }: CurrentCarStatsProps) => {\n  const zTo60 = processCurrentCarStats(\"zTo60\");\n  const horsepower = processCurrentCarStats(\"horsepower\");\n  const mpg = processCurrentCarStats(\"MPG\");\n  const torque = processCurrentCarStats(\"torque\");\n  const weight = processCurrentCarStats(\"weight\");\n  const powerToWeight = processCurrentCarStats(\"powerToWeight\");\n\n  return (\n    <>\n      <CarSpeedoGraph\n        val={zTo60.val}\n        endGreenVal={4}\n        startRedVal={Math.min(10, zTo60.maxVal)}\n        maxVal={zTo60.maxVal}\n        label=\"sec\"\n        title=\"0-60\"\n        name={zTo60.name}\n        color={color}\n      />\n      <CarSpeedoGraph\n        val={horsepower.val}\n        endGreenVal={200}\n        startRedVal={Math.min(650, horsepower.maxVal)}\n        maxVal={horsepower.maxVal}\n        label=\"HP\"\n        title=\"Horsepower\"\n        name={horsepower.name}\n        color={color}\n      />\n      <CarSpeedoGraph\n        val={weight.val}\n        endGreenVal={3000}\n        startRedVal={Math.min(5000, weight.maxVal)}\n        maxVal={weight.maxVal}\n        label=\"lbs\"\n        title=\"Weight\"\n        name={weight.name}\n        color={color}\n      />\n      <CarSpeedoGraph\n        val={powerToWeight.val}\n        endGreenVal={0.05}\n        startRedVal={Math.min(0.15, powerToWeight.maxVal)}\n        maxVal={powerToWeight.maxVal}\n        label=\"Ratio\"\n        title=\"Power to Weight\"\n        name={powerToWeight.name}\n        color={color}\n      />\n      <CarSpeedoGraph\n        val={torque.val}\n        endGreenVal={200}\n        startRedVal={Math.min(650, torque.maxVal)}\n        maxVal={torque.maxVal}\n        label=\"lb-ft\"\n        title=\"Torque\"\n        name={torque.name}\n        color={color}\n      />\n      <CarSpeedoGraph\n        val={mpg.val}\n        endGreenVal={30}\n        startRedVal={Math.min(100, mpg.maxVal)}\n        maxVal={mpg.maxVal}\n        label=\"MPG\"\n        title=\"MPG\"\n        name={mpg.name}\n        color={color}\n      />\n    </>\n  );\n});\n\nCurrentCarStats.displayName = \"CurrentCarStats\";\n\nexport default CurrentCarStats;\n","import { useAtomValue } from \"jotai\";\nimport Grid from \"@mui/material/Grid\";\nimport { CarEntry } from \"../../../../constants/cars\";\nimport CarChart from \"./CarChart\";\nimport CarSankeyGraph from \"./CarSankeyGraph\";\nimport ExpandableCard from \"../../../common/expandable-card\";\nimport themeAtom from \"../../../../jotai/theme-atom\";\nimport CurrentCarStats from \"./CurrentCarStats\";\nimport { red } from \"@mui/material/colors\";\n\ninterface CarGraphsProps {\n  data: CarEntry[];\n  hideFamily: boolean;\n  hideKen: boolean;\n}\n\nconst CarGraphs = ({ data, hideFamily, hideKen }: CarGraphsProps) => {\n  const theme = useAtomValue(themeAtom);\n  const color = theme.mode === \"light\" ? \"black\" : \"white\";\n\n  return (\n    <ExpandableCard title=\"Car Graphs\" backgroundColor={red.A700}>\n      <Grid container spacing={2}>\n        <CurrentCarStats color={color} />\n        <Grid size={{ xs: 12, md: 6 }}>\n          <CarSankeyGraph\n            hideKen={hideKen}\n            hideFamily={hideFamily}\n            color={color}\n          />\n        </Grid>\n        <Grid size={{ xs: 12, md: 6 }}>\n          <CarChart data={data} color={color} />\n        </Grid>\n      </Grid>\n    </ExpandableCard>\n  );\n};\n\nexport default CarGraphs;\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport { CarEntry } from \"../../../constants/cars\";\nimport { DateObj } from \"../../../apis/DateHelper\";\n\ninterface CarCardProps {\n  car: CarEntry;\n  isK?: boolean;\n}\n\nconst containerStyles: React.CSSProperties = {\n  maxWidth: 1488,\n  margin: \"auto\",\n  marginTop: 20,\n  width: \"100%\",\n};\nconst imgStyles: React.CSSProperties = {\n  width: \"100%\",\n  maxWidth: \"30em\",\n  float: \"right\",\n};\n\nconst getStartYear = (\n  isK: boolean,\n  start: DateObj,\n  kStart?: DateObj,\n  fStart?: DateObj,\n) => {\n  const maybeStart = isK ? kStart : fStart;\n  return (maybeStart || start).format(\"YYYY\");\n};\n\nconst getEndYear = (\n  isK: boolean,\n  end: DateObj,\n  kStart?: DateObj,\n  fStart?: DateObj,\n) => {\n  const maybeEnd = isK ? fStart : kStart;\n  return (maybeEnd || end).format(\"YYYY\");\n};\n\nconst CarCard = ({ car, isK = false }: CarCardProps) => (\n  <Card style={containerStyles}>\n    <Grid container spacing={1}>\n      <Grid size={{ xs: 12, sm: 8 }}>\n        <CardContent>\n          <Typography variant=\"h4\" component=\"h3\">\n            <strong style={{ paddingRight: 20 }}>\n              ({getStartYear(isK, car.start, car.kStart, car.fStart)}\n              {getStartYear(isK, car.start, car.kStart, car.fStart) !==\n              getEndYear(isK, car.end, car.kStart, car.fStart)\n                ? ` - ${getEndYear(isK, car.end, car.kStart, car.fStart)}`\n                : \"\"}\n              )\n            </strong>\n            {car.title}\n          </Typography>\n          <hr aria-hidden />\n          <Typography\n            variant=\"h5\"\n            component=\"h4\"\n          >{`Horsepower: ${car.horsepower}`}</Typography>\n          <Typography\n            variant=\"h5\"\n            component=\"h4\"\n          >{`Transmission: ${car.transmission}`}</Typography>\n        </CardContent>\n      </Grid>\n      <Grid size={{ xs: 12, sm: 4 }}>\n        <img src={car.src} alt=\"\" style={imgStyles} />\n      </Grid>\n    </Grid>\n  </Card>\n);\n\nexport default CarCard;\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  pastKensCars,\n  currentKensCars,\n  pastFamilyCars,\n  currentFamilyCars,\n} from \"../../../constants/cars\";\nimport CarCard from \"./CarCard\";\nimport ExpandableCard from \"../../common/expandable-card\";\nimport { red } from \"@mui/material/colors\";\n\nconst pastKensCarsReversed = pastKensCars.slice().reverse();\nconst pastFamilyCarsReversed = pastFamilyCars.slice().reverse();\nconst currentKensCarsReversed = currentKensCars.slice().reverse();\nconst currentFamilyCarsReversed = currentFamilyCars.slice().reverse();\n\ninterface CarDisplayProps {\n  hideFamily: boolean;\n  hideKen: boolean;\n}\n\nconst CarDisplay = React.memo(({ hideFamily, hideKen }: CarDisplayProps) => (\n  <Grid container spacing={2}>\n    {!hideKen && (\n      <Grid size={{ xs: 12, md: hideFamily ? 12 : 6 }}>\n        <Grid container spacing={2} width=\"100%\">\n          {/* @ts-expect-error - custom breakpoints */}\n          <Grid size={{ xs: 12, md: hideFamily ? 6 : 12, xxl: 6 }}>\n            <ExpandableCard title=\"Ken's Cars\" backgroundColor=\"black\">\n              {currentKensCarsReversed.map((car, i) => (\n                <CarCard isK car={car} key={`k-${car.title}-cur-${i}`} />\n              ))}\n            </ExpandableCard>\n          </Grid>\n          {/* @ts-expect-error - custom breakpoints */}\n          <Grid size={{ xs: 12, md: hideFamily ? 6 : 12, xxl: 6 }}>\n            <ExpandableCard\n              title=\"Ken's Previous Cars\"\n              backgroundColor={red.A700}\n            >\n              {pastKensCarsReversed.map((car, i) => (\n                <CarCard isK car={car} key={`k-${car.title}-past-${i}`} />\n              ))}\n            </ExpandableCard>\n          </Grid>\n        </Grid>\n      </Grid>\n    )}\n    {!hideFamily && (\n      <Grid size={{ xs: 12, md: hideKen ? 12 : 6 }}>\n        <Grid container spacing={2} width=\"100%\">\n          {/* @ts-expect-error - custom breakpoints */}\n          <Grid size={{ xs: 12, md: hideKen ? 6 : 12, xxl: 6 }}>\n            <ExpandableCard title=\"Family Cars\" backgroundColor=\"black\">\n              {currentFamilyCarsReversed.map((car, i) => (\n                <CarCard car={car} key={`f-${car.title}-cur-${i}`} />\n              ))}\n            </ExpandableCard>\n          </Grid>\n          {/* @ts-expect-error - custom breakpoints */}\n          <Grid size={{ xs: 12, md: hideKen ? 6 : 12, xxl: 6 }}>\n            <ExpandableCard\n              title=\"Family's Previous Cars\"\n              backgroundColor={red.A700}\n            >\n              {pastFamilyCarsReversed.map((car, i) => (\n                <CarCard car={car} key={`f-${car.title}-past-${i}`} />\n              ))}\n            </ExpandableCard>\n          </Grid>\n        </Grid>\n      </Grid>\n    )}\n  </Grid>\n));\n\nCarDisplay.displayName = \"CarDisplay\";\n\nexport default CarDisplay;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport TimelineCard from \"./timeline-card\";\nimport { cars, hideFamilyCars, hideKenCars } from \"../../../constants/cars\";\nimport CarChartControls from \"./CarChartControls\";\nimport CarGraphs from \"./graphs/CarGraphs\";\nimport CarDisplay from \"./CarDisplay\";\n\nconst Cars = () => {\n  const [hideFamily, setHideFamily] = React.useState(false);\n  const [hideKen, setHideKen] = React.useState(false);\n\n  const handleClick = (isKen: boolean) => () => {\n    if (isKen) {\n      if (!hideKen && hideFamily) {\n        setHideFamily(false);\n      }\n      setHideKen(!hideKen);\n    } else {\n      if (!hideFamily && hideKen) {\n        setHideKen(false);\n      }\n      setHideFamily(!hideFamily);\n    }\n  };\n\n  let data = cars;\n  if (hideFamily) {\n    data = hideFamilyCars;\n  } else if (hideKen) {\n    data = hideKenCars;\n  }\n\n  return (\n    <>\n      <Typography variant=\"h2\" component=\"h1\">\n        Ken&apos;s Cars\n      </Typography>\n      <CarChartControls\n        onClick={handleClick}\n        hideKen={hideKen}\n        hideFamily={hideFamily}\n      />\n      <TimelineCard data={data} useKStart={hideFamily} useFStart={hideKen} />\n      <CarGraphs data={data} hideFamily={hideFamily} hideKen={hideKen} />\n      <CarDisplay hideFamily={hideFamily} hideKen={hideKen} />\n    </>\n  );\n};\n\nexport default Cars;\n"],"names":["bodyStyles","Segment","React.memo","body","width","color","title","inverted","mode","useTheme","style","grey","jsx","boxStyles","markerStyles","labelStyles","YearMarkers","smMarginTop","lgMarginTop","noStyle","Row","segments","yearMarkers","first","data","j","START","dateObj","END","WIDTH","MIN_TEXT_WIDTH","MIN_SHORT_WIDTH","YEAR_WIDTH","YEAR_MARK_FREQ","addEmptySegment","getTimeFromStart","val","totalDuration","timeFromStart","addSegment","elm","beginning","ending","car","char","textWidth","payload","getYearMarkers","startYear","endYear","years","year","marker","i","previousYear","thisYear","getStart","useKStart","useFStart","getEnd","getSegments","added","segStart","segEnd","entry","DATE_FORMAT","monthSort","a","b","kMonthSort","fMonthSort","TimelineCard","propsData","ExpandableCard","jsxs","prius07","voyager97","pontiac93","impala10","equinox10","mustang15","tesla16","xj8l05","corvette18","ftype15","mustang20","panamera21","bronco21","grom22","porsche19","r1s25","irene","tesla","camilla","yellow","cheyenne","pastFamilyCarsNoRepeats","indigo","amber","currentFamilyCars","pastKensCarsNoRepeats","red","teal","currentKensCars","cars","dateSort","diff","carSort","isK","pastKensCars","pastFamilyCars","hideFamilyCars","hideKenCars","smoothData","cur","high","low","getMinAndMax","max","min","horsepower","MPG","torque","weight","zTo60","powerToWeight","processData","allData","ret","getP2W","c","processCurrentCarStats","key","currentValue","carSankeyNodes","orange","familySankeyData","kenSankeyData","carSankeyData","CarChartControls","onClick","hideFamily","hideKen","ButtonGroup","Button","CarChart","xAxis","options","HighchartsReact","Highcharts","CarSankeyGraph","CarSpeedoGraph","maxVal","endGreenVal","startRedVal","label","name","greenEnd","green","Grid","CurrentCarStats","mpg","Fragment","CarGraphs","useAtomValue","themeAtom","containerStyles","imgStyles","getStartYear","start","kStart","fStart","getEndYear","end","CarCard","Card","CardContent","Typography","pastKensCarsReversed","pastFamilyCarsReversed","currentKensCarsReversed","currentFamilyCarsReversed","CarDisplay","Cars","setHideFamily","React.useState","setHideKen","handleClick","isKen"],"mappings":"wuBAKA,MAAMA,GAAkC,CACtC,OAAQ,UACR,WAAY,MACZ,cAAe,MACf,UAAW,SACX,aAAc,CAChB,EAEMC,EAAUC,EAAM,KACpB,CAAC,CAAE,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,MAAAC,EAAO,SAAAC,KAA4B,CAClD,KAAA,CACJ,QAAS,CAAE,KAAAC,CAAK,GACdC,GAAS,EAGb,IAAIC,EAA6B,CAC/B,QAAS,eACT,MAAO,GAAGN,CAAK,IACf,MAAOG,EAAW,QAAUI,EAAK,EAAE,CACrC,EACA,OAAIR,IACMO,EAAA,CACN,GAAGA,EACH,GAAGV,GACH,gBAAiBK,EACjB,UAAW,mBAAmBG,IAAS,OAASG,EAAK,GAAG,EAAIA,EAAK,GAAG,CAAC,EACvE,SAIC,MAAI,CAAA,MAAAD,EAAc,MAAAJ,EAChB,SAAQH,GAAAS,EAAA,IAAC,OAAG,CACf,CAAA,CAAA,CAGN,EAEAX,EAAQ,YAAc,UClCtB,MAAMY,EAAiC,CACrC,OAAQ,UACR,OAAQ,IACR,aAAc,KACd,SAAU,CACZ,EACMC,GAAoC,CACxC,GAAGD,EACH,gBAAiBF,EAAK,GAAG,EACzB,MAAO,OACP,SAAU,GACZ,EACMI,GAAmC,CACvC,SAAU,WACV,MAAO,EACT,EAEMC,EAAcd,EAAAA,KAAW,CAAC,CAAE,KAAAC,EAAM,MAAAC,KAA8B,CAEpE,MAAMM,EAA6B,CACjC,QAAS,eACT,MAAO,GAAGN,CAAK,GACjB,EAEA,OAAQD,EAKNS,EAAA,IAAC,MAAI,CAAA,MAAO,CAAE,GAAGF,EAAO,GAAGG,CAAa,EAAA,MAAOV,EAC7C,SAAAS,EAAA,IAAC,OAAI,MAAOE,GAAc,MAAM,cAC9B,eAAC,MAAI,CAAA,MAAOC,GAAc,SAAAZ,CAAA,CAAK,CACjC,CAAA,EACF,EARCS,EAAAA,IAAA,MAAA,CAAI,MAAM,OAAO,MAAAF,EAChB,SAACE,EAAAA,IAAA,KAAA,CAAG,CAAA,CACN,CAAA,CAQJ,CAAC,EAEDI,EAAY,YAAc,cClC1B,MAAMC,GAAmC,CAAE,UAAW,EAAG,EACnDC,GAAmC,CAAE,UAAW,EAAG,EACnDC,GAA+B,CAAE,OAAQ,CAAE,EAE3CC,EAAM,CAAC,CAAE,SAAAC,EAAU,YAAAC,EAAc,GAAO,MAAAC,EAAQ,MAAsB,CAC1E,IAAIb,EAAQO,GACZ,OAAIK,EACMZ,EAAAS,GACCI,IACDb,EAAAQ,IAIPN,EAAA,IAAA,MAAA,CAAI,MAAAF,EAAc,MAAM,eACtB,SAASW,EAAA,IAAI,CAACG,EAAMC,IACnBH,EACGV,EAAAA,IAAAI,EAAA,CAAoB,KAAMQ,EAAK,KAAM,MAAOA,EAAK,OAAhCC,CAAuC,QAExDxB,EAAiB,CAAA,GAAGuB,GAAPC,CAAa,CAAA,EAGjC,CAEJ,ECrBaC,EAAQC,EAAQ,SAAS,EACzBC,EAAMD,EAAQ,EAErBE,EAAQ,GACRC,GAAiB,GACjBC,GAAkB,GAClBC,EAAa,GACbC,GAAiB,EAIjBC,EAAkB,CAACb,EAAyBjB,IAAwB,CACpEA,EAAQ,GACDiB,EAAA,KAAK,CAAE,MAAAjB,EAAO,CAE3B,EAGM+B,EAAoBC,GAAyB,CAEjD,MAAMC,EAAgBT,EAAI,KAAKF,EAAO,QAAQ,EACxCY,EAAgBF,EAAI,KAAKV,EAAO,QAAQ,EACxCtB,EAAQ,KAAK,MAAOkC,EAAgBD,EAAiBR,CAAK,EACzD,OAAAzB,EAAQ,EAAIA,EAAQ,CAC7B,EAGMmC,EAAa,CACjBlB,EACAmB,EACAC,EACAC,IACS,CACT,KAAM,CAAE,MAAArC,EAAO,SAAAE,EAAU,MAAAD,EAAO,IAAAqC,EAAK,KAAAC,GAASJ,EACxCpC,EAAQsC,EAASD,EACjBI,EAAazC,GAAS,OAAO,WAAa,IAAOyB,EACjDiB,EAAU,CAAE,MAAAzC,EAAO,SAAAE,EAAU,MAAAH,EAAO,MAAAE,CAAM,EAE5CuC,EAAYd,GACLV,EAAA,KAAK,CAAE,KAAMuB,GAAQJ,EAAI,IAAI,CAAC,EAAG,GAAGM,EAAS,EAC7CD,EAAYf,GACZT,EAAA,KAAK,CAAE,KAAMsB,EAAI,UAAU,EAAG,CAAC,EAAG,GAAGG,EAAS,EAEvDzB,EAAS,KAAK,CAAE,KAAMmB,EAAI,IAAK,GAAGM,EAAS,CAE/C,EAIaC,GAAiB,IAAM,CAClC,MAAMC,EAAY,OAAOtB,EAAM,OAAO,MAAM,CAAC,EACvCuB,EAAU,OAAOrB,EAAI,OAAO,MAAM,CAAC,EAEnCsB,EAAQ,CAAC,EACf,QAASC,EAAOH,EAAY,EAAGG,GAAQF,EAASE,GAAQlB,GACtDiB,EAAM,KAAKvB,EAAQ,GAAGwB,CAAI,EAAE,CAAC,EAGzB,MAAAC,EAAS,CAAE,MAAOpB,EAAY,KAAMkB,EAAM,CAAC,EAAE,OAAO,KAAK,CAAE,EAC3D5B,EAAc,CAClB,CAAE,MAAOa,EAAiBe,EAAM,CAAC,CAAC,EAAIlB,CAAW,EACjDoB,CACF,EAEA,QAASC,EAAI,EAAGA,EAAIH,EAAM,OAAQG,GAAK,EAAG,CACxC,MAAMC,EAAenB,EAAiBe,EAAMG,EAAI,CAAC,CAAC,EAC5CE,EAAWpB,EAAiBe,EAAMG,CAAC,CAAC,EAC1C/B,EAAY,KAAK,CAAE,MAAOiC,EAAWD,EAAetB,EAAY,EACpDV,EAAA,KAAK,CAAE,MAAOU,EAAY,KAAMkB,EAAMG,CAAC,EAAE,OAAO,KAAK,CAAA,CAAG,CAAA,CAG/D,OAAA/B,CACT,EAEMkC,EAAW,CAAChC,EAAgBiC,EAAoBC,IACpDA,EACIlC,EAAK,QAAUA,EAAK,MACpBiC,GACEjC,EAAK,QAAUA,EAAK,MAEtBmC,EAAS,CAACnC,EAAgBiC,EAAoBC,IAClDA,EACIlC,EAAK,QAAUA,EAAK,IACpBiC,GACEjC,EAAK,QAAUA,EAAK,IAIfoC,GAAc,CACzBpC,EACAqC,EACAJ,EACAC,EACAlB,EACAa,IACkB,CAEd,GAAAQ,EAAMR,CAAC,EACT,MAAO,CAAC,EAIV,MAAMhC,EAA0B,CAAC,EAC3ByC,EAAoBN,EAAShB,EAAKiB,EAAWC,CAAS,EACtDK,EAAkBJ,EAAOnB,EAAKiB,EAAWC,CAAS,EAEpD,IAAAjB,EAAYN,EAAiB2B,CAAQ,EACrCpB,EAASP,EAAiB4B,CAAM,EAGpC,OAAA7B,EAAgBb,EAAUoB,CAAS,EACxBF,EAAAlB,EAAUmB,EAAKC,EAAWC,CAAM,EAE3CmB,EAAMR,CAAC,EAAI,GAGN7B,EAAA,QAAQ,CAACwC,EAAOvC,IAAM,CAEpBoC,EAAMpC,CAAC,IAEVgB,EAAYN,EAAiBqB,EAASQ,EAAOP,EAAWC,CAAS,CAAC,EAE9DjB,GAAaC,IAECR,EAAAb,EAAUoB,EAAYC,CAAM,EAE5CA,EAASP,EAAiBwB,EAAOK,EAAOP,EAAWC,CAAS,CAAC,EAClDnB,EAAAlB,EAAU2C,EAAOvB,EAAWC,CAAM,EAE7CmB,EAAMpC,CAAC,EAAI,IAEf,CACD,EAGeS,EAAAb,EAAUQ,EAAQa,CAAM,EAEjC,CAAC,GAAGrB,CAAQ,CACrB,EC1IM4C,EAA4B,SAE5BC,GAAY,CAACC,EAAaC,IAC9BD,EAAE,MAAM,KAAKC,EAAE,MAAO,QAAQ,EAC1BC,GAAa,CAACF,EAAaC,KAC9BD,EAAE,QAAUA,EAAE,OAAO,KAAKC,EAAE,QAAUA,EAAE,MAAO,QAAQ,EACpDE,GAAa,CAACH,EAAaC,KAC9BD,EAAE,QAAUA,EAAE,OAAO,KAAKC,EAAE,QAAUA,EAAE,MAAO,QAAQ,EAIpDG,GAAe,CAAC,CACpB,KAAMC,EACN,UAAAd,EACA,UAAAD,CACF,IAAyB,CAEvB,MAAMjC,EAAmB,CAAC,GAAGgD,CAAS,EAAE,KACtCd,EAAYY,GAAab,EAAYY,GAAaH,EACpD,EAEML,EAAmB,CAAC,EAGxB,OAAAjD,EAAA,IAAC6D,EAAA,CACC,gBAAgB,QAChB,MAAM,aACN,SAAU,GAAG/C,EAAM,OAAOuC,CAAW,CAAC,MAAMrC,EAAI,OAAOqC,CAAW,CAAC,GAEnE,SAAAS,EAAA,KAAC,OAAI,MAAO,CAAE,MAAO,OAAQ,cAAe,CAC1C,EAAA,SAAA,CAAA9D,MAACQ,GAAsB,SAAU2B,GAAA,EAAkB,YAAW,EAAA,EAApDvB,EAAK,MAAgD,EAC9DA,EAAK,IAAI,CAACgB,EAAK,IAAM,CACpB,MAAMnB,EAAWuC,GACfpC,EACAqC,EACAJ,EACAC,EACAlB,EACA,CACF,EACO,OAAAnB,EAAS,OACbT,EAAA,IAAAQ,EAAA,CAAY,SAAAC,EAAoB,MAAO,IAAM,GAApC,CAAuC,EAC/C,IACL,CAAA,CAAA,CACH,CAAA,CAAA,CACF,CAEJ,EC5DesD,GAAA,uCCAAC,GAAA,2CCAAC,GAAA,8CCAAC,GAAA,4CCAAC,GAAA,wCCAAC,GAAA,6CCAAC,GAAA,mCCAAC,GAAA,sCCAAC,GAAA,2CCAAC,GAAA,yCCAAC,GAAA,uCCAAC,GAAA,2CCAAC,GAAA,uCCAAC,GAAA,sCCAAC,GAAA,2CCAAC,GAAA,sCCkDTC,EAAQ,CACZ,MAAOhF,EAAK,GAAG,EACf,MAAOgB,EAAQ,SAAS,EACxB,OAAQA,EAAQ,SAAS,EACzB,IAAKA,EAAQ,SAAS,EACtB,IAAK,SACL,SAAU,QACV,MAAO,6BACP,SAAU,GAEV,MACE,+HACF,IAAKmD,GACL,aAAc,YAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EAEMc,GAAQ,CACZ,MAAOjF,EAAK,EAAE,EACd,MAAOgB,EAAQ,SAAS,EACxB,OAAQA,EAAQ,SAAS,EACzB,IAAKA,EAAQ,SAAS,EACtB,IAAK,UACL,KAAM,IACN,MAAO,2BACP,SAAU,GAEV,MACE,+KACF,IAAKsD,GACL,aAAc,SAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EAIMY,GAAU,CACd,MAAOC,EAAO,GAAG,EACjB,MAAOnE,EAAQ,SAAS,EACxB,OAAQA,EAAQ,SAAS,EACzB,IAAKA,EAAQ,EACb,IAAK,WACL,SAAU,UACV,MAAO,gCACP,SAAU,GAEV,MACE,6NACF,IAAKwD,GACL,aAAc,SAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EAEMY,GAAW,CACf,MAAOpF,EAAK,EAAE,EACd,MAAOgB,EAAQ,SAAS,EACxB,OAAQA,EAAQ,SAAS,EACzB,IAAKA,EAAQ,EACb,IAAK,UACL,SAAU,WACV,MAAO,kCACP,SAAU,GAEV,MACE,oMACF,IAAK8D,GACL,aAAc,YAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EAIMO,GAAsC,CAC1C,CACE,MAAOrF,EAAK,EAAE,EACd,MAAOgB,EAAQ,SAAS,EACxB,IAAKA,EAAQ,SAAS,EACtB,IAAK,UACL,MAAO,0BACP,SAAU,GACV,IAAKiD,GACL,aAAc,YAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,IACT,EACA,CACE,MAAOqB,EAAO,GAAG,EACjB,MAAOtE,EAAQ,SAAS,EACxB,IAAKA,EAAQ,SAAS,EACtB,IAAK,QACL,MAAO,sBACP,IAAKgD,GACL,aAAc,YAEd,WAAY,IACZ,IAAK,GACL,OAAQ,GACR,OAAQ,KACR,MAAO,IACT,EACA,CACE,MAAOuB,EAAM,GAAG,EAChB,SAAU,GACV,MAAOvE,EAAQ,SAAS,EACxB,IAAKA,EAAQ,SAAS,EACtB,IAAK,YACL,KAAM,KACN,MAAO,sBACP,IAAKuD,GACL,aAAc,YAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EACA,CACE,MAAOe,EAAO,GAAG,EACjB,MAAOtE,EAAQ,SAAS,EACxB,IAAKA,EAAQ,SAAS,EACtB,IAAK,WACL,KAAM,KACN,SAAU,aACV,MAAO,iCACP,IAAK0D,GACL,aAAc,SAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GAAA,CAEX,EAEMc,EAAgC,CACpC,CACE,MAAOL,EAAO,GAAG,EACjB,SAAU,GACV,MAAOnE,EAAQ,SAAS,EACxB,IAAKA,EAAQ,EACb,IAAK,UACL,MAAO,+BACP,IAAKoD,GACL,aAAc,YAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EACA,CACE,MAAOpE,EAAK,EAAE,EACd,MAAOgB,EAAQ,SAAS,EACxB,IAAKA,EAAQ,EACb,IAAK,WACL,KAAM,KACN,MAAO,qCACP,SAAU,GACV,IAAK2D,GACL,aAAc,YAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EACAO,GACAE,EACF,EAEMK,GAAoC,CACxC,CACE,MAAOzF,EAAK,GAAG,EACf,MAAOgB,EAAQ,SAAS,EACxB,IAAKA,EAAQ,SAAS,EACtB,IAAK,aACL,KAAM,KACN,SAAU,UACV,MAAO,4BACP,IAAKkD,GACL,aAAc,YAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EACAc,EACA,CACE,MAAOU,EAAI,GAAG,EACd,MAAO1E,EAAQ,SAAS,EACxB,IAAKA,EAAQ,SAAS,EACtB,IAAK,UACL,KAAM,KACN,SAAU,UACV,MAAO,iCACP,IAAKqD,GACL,aAAc,YAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EACA,CACE,MAAOrE,EAAK,EAAE,EACd,MAAOgB,EAAQ,SAAS,EACxB,IAAKA,EAAQ,SAAS,EACtB,IAAK,aACL,MAAO,qCACP,SAAU,GACV,IAAKyD,GACL,aAAc,SAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EACA,CACE,MAAOkB,GAAK,GAAG,EACf,MAAO3E,EAAQ,SAAS,EACxB,IAAKA,EAAQ,SAAS,EACtB,IAAK,SACL,SAAU,QACV,MAAO,8BACP,SAAU,GACV,IAAK4D,GACL,aAAc,SAEd,WAAY,IACZ,IAAK,GACL,OAAQ,IACR,OAAQ,KACR,MAAO,GACT,EACA,CACE,MAAO5E,EAAK,GAAG,EACf,MAAOgB,EAAQ,SAAS,EACxB,IAAKA,EAAQ,SAAS,EACtB,IAAK,OACL,MAAO,oBACP,IAAK6D,GACL,aAAc,aAEd,WAAY,YAAY,IAAM,OAAO,YAAY,CAAC,CAAC,EACnD,IAAK,IACL,OAAQ,YAAY,IAAM,OAAO,YAAY,CAAC,CAAC,EAC/C,OAAQ,IACR,MAAO,EACT,EACAI,EACF,EAEMW,EAA8B,CAClC,CACE,MAAOL,EAAM,KACb,MAAOvE,EAAQ,SAAS,EACxB,IAAKA,EAAQ,EACb,IAAK,MACL,KAAM,IACN,MAAO,oBACP,SAAU,GACV,IAAK+D,GACL,aAAc,SAEd,WAAY,IACZ,IAAK,GACL,OAAQ,KACR,OAAQ,KACR,MAAO,GAAA,CAEX,EAIac,GAAmB,CAC9B,GAAGJ,GACH,GAAGG,EACH,GAAGP,GACH,GAAGG,CACL,EAEMM,EAAW,CAACtC,EAAYC,IAAe,CACvC,IAAAsC,EAAOvC,EAAE,KAAOC,EAAE,KACtB,OAAIsC,IAAS,IACJA,EAAAvC,EAAE,MAAQC,EAAE,OAEdsC,CACT,EACMC,EAAWC,GAAkB,CAACzC,EAAaC,IACxCwC,EACHH,EAAStC,EAAE,QAAUA,EAAE,IAAKC,EAAE,QAAUA,EAAE,GAAG,EAC7CqC,EAAStC,EAAE,QAAUA,EAAE,IAAKC,EAAE,QAAUA,EAAE,GAAG,EAG7CyC,GAAe,CAAC,GAAGT,GAAuBP,GAASE,EAAQ,EAAE,KACjEY,EAAQ,EAAI,CACd,EACMG,GAAiB,CAAC,GAAGd,GAAyBL,EAAOC,EAAK,EAAE,KAChEe,EAAQ,CACV,EACMI,GAAiB,CAAC,GAAGF,GAAc,GAAGN,CAAe,EAAE,KAC3DI,EAAQ,EAAI,CACd,EACMK,GAAc,CAAC,GAAGF,GAAgB,GAAGX,CAAiB,EAAE,KAAKQ,GAAS,EAwBtEM,EAAa,CAACC,EAAaC,EAAcC,IAC7C,KAAK,MAAM,MAAQF,EAAME,IAAQD,EAAOC,GAAK,EAEzCC,GAAgB7F,GAAqB,CACzC,MAAM8F,EAAM,CACV,WAAY9F,EAAK,CAAC,EAAE,WACpB,IAAKA,EAAK,CAAC,EAAE,IACb,OAAQA,EAAK,CAAC,EAAE,OAChB,OAAQA,EAAK,CAAC,EAAE,OAChB,MAAOA,EAAK,CAAC,EAAE,MACf,cAAeA,EAAK,CAAC,EAAE,WAAaA,EAAK,CAAC,EAAE,MAC9C,EACM+F,EAAM,CAAE,GAAGD,CAAI,EAGrB,QAASjE,EAAI,EAAGA,EAAI7B,EAAK,OAAQ6B,GAAK,EAAG,CACjC,KAAA,CAAE,WAAAmE,EAAY,IAAAC,EAAK,OAAAC,EAAQ,OAAAC,EAAQ,MAAAC,CAAM,EAAIpG,EAAK6B,CAAC,EACnDwE,EAAgBL,EAAaG,EAE/BH,EAAaF,EAAI,WACnBA,EAAI,WAAaE,EACRA,EAAaD,EAAI,aAC1BA,EAAI,WAAaC,GAEfC,EAAMH,EAAI,IACZA,EAAI,IAAMG,EACDA,EAAMF,EAAI,MACnBA,EAAI,IAAME,GAERC,EAASJ,EAAI,OACfA,EAAI,OAASI,EACJA,EAASH,EAAI,SACtBA,EAAI,OAASG,GAEXC,EAASL,EAAI,OACfA,EAAI,OAASK,EACJA,EAASJ,EAAI,SACtBA,EAAI,OAASI,GAEXC,EAAQN,EAAI,MACdA,EAAI,MAAQM,EACHA,EAAQL,EAAI,QACrBA,EAAI,MAAQK,GAEVC,EAAgBP,EAAI,cACtBA,EAAI,cAAgBO,EACXA,EAAgBN,EAAI,gBAC7BA,EAAI,cAAgBM,EACtB,CAGK,MAAA,CAAE,IAAAN,EAAK,IAAAD,CAAI,CACpB,EAEaQ,GAAeC,GAAmC,CAC7D,MAAMvG,EAAOuG,EAAQ,KACnB,CAAC,EAAG3D,IAAM,EAAE,WAAa,EAAE,OAASA,EAAE,WAAaA,EAAE,MACvD,EAEM4D,EAAiB,CACrB,MAAO,CAAC,EACR,WAAY,CAAC,EACb,IAAK,CAAC,EACN,OAAQ,CAAC,EACT,OAAQ,CAAC,EACT,MAAO,CAAC,EACR,cAAe,CAAA,CACjB,EAEI,GAAAxG,EAAK,SAAW,EACX,OAAAwG,EAGT,KAAM,CAAE,IAAAT,EAAK,IAAAD,GAAQD,GAAa7F,CAAI,EAGjC,OAAAA,EAAA,QAASmB,GAAkB,CACxB,MAAAkF,EAAgBlF,EAAI,WAAaA,EAAI,OAC3CqF,EAAI,MAAM,KAAKrF,EAAI,MAAQA,EAAI,IAAI,CAAC,CAAC,EACrCqF,EAAI,WAAW,KAAK,CAClBrF,EAAI,IACJsE,EAAWtE,EAAI,WAAY2E,EAAI,WAAYC,EAAI,UAAU,CAAA,CAC1D,EACDS,EAAI,IAAI,KAAK,CAACrF,EAAI,IAAKsE,EAAWtE,EAAI,IAAK2E,EAAI,IAAKC,EAAI,GAAG,CAAC,CAAC,EAC7DS,EAAI,OAAO,KAAK,CAACrF,EAAI,IAAKsE,EAAWtE,EAAI,OAAQ2E,EAAI,OAAQC,EAAI,MAAM,CAAC,CAAC,EACzES,EAAI,OAAO,KAAK,CAACrF,EAAI,IAAKsE,EAAWtE,EAAI,OAAQ2E,EAAI,OAAQC,EAAI,MAAM,CAAC,CAAC,EACzES,EAAI,MAAM,KAAK,CAACrF,EAAI,IAAKsE,EAAWtE,EAAI,MAAO2E,EAAI,MAAOC,EAAI,KAAK,CAAC,CAAC,EACrES,EAAI,cAAc,KAAK,CACrBrF,EAAI,IACJsE,EAAWY,EAAeP,EAAI,cAAeC,EAAI,aAAa,CAAA,CAC/D,CAAA,CACF,EAEMS,CACT,EAUMC,EAAUC,GACd,YAAYA,EAAE,WAAaA,EAAE,QAAQ,QAAQ,CAAC,CAAC,EAEpCC,EACXC,GACwB,CAElB,MAAAC,EACJD,IAAQ,gBACJH,EAAO1B,EAAgB,CAAG,CAAC,EAC3BA,EAAgB,CAAG,EAAE6B,CAAG,EAE9B,IAAId,EAAMe,EACL,OAAA7B,GAAA,QAAS0B,GAAM,CAClB,MAAM9F,EAAMgG,IAAQ,gBAAkBH,EAAOC,CAAC,EAAIA,EAAEE,CAAG,EACnDhG,EAAMkF,IACFA,EAAAlF,EACR,CACD,EAEM,CACL,OAAQkF,EACR,IAAKe,EACL,KAAM9B,EAAgB,CAAG,EAAE,GAC7B,CACF,EAIa+B,GAAiB,CAG5B,CAAE,GAAI,QAAS,MAAOjC,EAAI,GAAG,CAAE,EAC/B,CAAE,GAAI,SAAU,MAAOJ,EAAO,GAAG,CAAE,EAEnC,CAAE,GAAI,OAAQ,MAAOA,EAAO,GAAG,CAAE,EACjC,CAAE,GAAI,QAAS,MAAOI,EAAI,GAAG,CAAE,EAC/B,CAAE,GAAI,SAAU,MAAOH,EAAM,GAAG,CAAE,EAClC,CAAE,GAAI,YAAa,MAAOJ,EAAO,GAAG,CAAE,EACtC,CAAE,GAAI,UAAW,MAAOO,EAAI,GAAG,CAAE,EACjC,CAAE,GAAI,WAAY,MAAO1F,EAAK,EAAE,CAAE,EAElC,CAAE,GAAI,UAAW,MAAO4H,EAAO,GAAG,CAAE,EACpC,CAAE,GAAI,SAAU,MAAOlC,EAAI,GAAG,CAAE,EAIhC,CAAE,GAAI,KAAM,MAAOP,EAAO,GAAG,EAAG,OAAQ,EAAG,EAC3C,CAAE,GAAI,aAAc,MAAOnF,EAAK,EAAE,EAAG,OAAQ,EAAG,EAEhD,CAAE,GAAI,aAAc,MAAO4H,EAAO,GAAG,EAAG,OAAQ,EAAG,EACnD,CAAE,GAAI,OAAQ,MAAOtC,EAAO,GAAG,EAAG,OAAQ,EAAG,EAG7C,CAAE,GAAI,OAAQ,MAAOI,EAAI,GAAG,EAAG,OAAQ,CAAE,EACzC,CAAE,GAAI,OAAQ,MAAOJ,EAAO,GAAG,EAAG,OAAQ,CAAE,EAC5C,CAAE,GAAI,OAAQ,MAAOsC,EAAO,GAAG,EAAG,OAAQ,CAAE,EAC5C,CAAE,GAAI,OAAQ,MAAO,QAAS,OAAQ,CAAE,EAGxC,CAAE,GAAI,MAAO,MAAO5H,EAAK,GAAG,CAAE,CAChC,EAEa6H,GAAmB,CAG9B,CAAC,SAAU,OAAQ,CAAC,EAEpB,CAAC,OAAQ,OAAQ,CAAC,EAClB,CAAC,QAAS,OAAQ,CAAC,EACnB,CAAC,YAAa,KAAM,CAAC,EACrB,CAAC,WAAY,aAAc,CAAC,EAE5B,CAAC,UAAW,aAAc,CAAC,EAC3B,CAAC,SAAU,OAAQ,CAAC,EAIpB,CAAC,KAAM,OAAQ,CAAC,EAChB,CAAC,aAAc,OAAQ,CAAC,EAExB,CAAC,aAAc,OAAQ,CAAC,EACxB,CAAC,OAAQ,OAAQ,CAAC,EAGlB,CAAC,OAAQ,MAAO,CAAC,EACjB,CAAC,OAAQ,MAAO,CAAC,EACjB,CAAC,OAAQ,MAAO,CAAC,EACjB,CAAC,OAAQ,MAAO,CAAC,CACnB,EAEaC,GAAgB,CAG3B,CAAC,QAAS,OAAQ,CAAC,EAEnB,CAAC,OAAQ,OAAQ,CAAC,EAClB,CAAC,SAAU,OAAQ,CAAC,EACpB,CAAC,QAAS,OAAQ,CAAC,EACnB,CAAC,YAAa,KAAM,CAAC,EACrB,CAAC,UAAW,KAAM,CAAC,EAEnB,CAAC,UAAW,aAAc,CAAC,EAC3B,CAAC,SAAU,OAAQ,CAAC,EAIpB,CAAC,KAAM,OAAQ,CAAC,EAEhB,CAAC,aAAc,OAAQ,CAAC,EACxB,CAAC,OAAQ,OAAQ,CAAC,EAGlB,CAAC,OAAQ,MAAO,CAAC,EACjB,CAAC,OAAQ,MAAO,CAAC,EACjB,CAAC,OAAQ,MAAO,CAAC,EACjB,CAAC,OAAQ,MAAO,CAAC,CACnB,EAEaC,GAAgB,CAG3B,CAAC,QAAS,OAAQ,CAAC,EACnB,CAAC,SAAU,OAAQ,CAAC,EAEpB,CAAC,OAAQ,OAAQ,CAAC,EAClB,CAAC,SAAU,OAAQ,CAAC,EACpB,CAAC,QAAS,OAAQ,CAAC,EACnB,CAAC,YAAa,KAAM,CAAC,EACrB,CAAC,UAAW,KAAM,CAAC,EACnB,CAAC,WAAY,aAAc,CAAC,EAE5B,CAAC,UAAW,aAAc,CAAC,EAC3B,CAAC,SAAU,OAAQ,CAAC,EAIpB,CAAC,KAAM,OAAQ,CAAC,EAChB,CAAC,aAAc,OAAQ,CAAC,EAExB,CAAC,aAAc,OAAQ,CAAC,EACxB,CAAC,OAAQ,OAAQ,CAAC,EAGlB,CAAC,OAAQ,MAAO,CAAC,EACjB,CAAC,OAAQ,MAAO,EAAE,EAClB,CAAC,OAAQ,MAAO,CAAC,EACjB,CAAC,OAAQ,MAAO,CAAC,CACnB,EC5oBMC,GAAmBzI,EAAM,KAC7B,CAAC,CAAE,QAAA0I,EAAS,WAAAC,EAAY,QAAAC,CAAQ,IAC7BpE,EAAA,KAAAqE,GAAA,CAAY,GAAI,CAAE,UAAW,CAAA,EAC5B,SAAA,CAAAnI,EAAA,IAACoI,EAAA,CACC,QAASJ,EAAQ,EAAK,EACtB,QAASC,EAAa,YAAc,WACpC,MAAM,QACP,SAAA,kBAAA,CAED,EACAjI,EAAA,IAACoI,EAAA,CACC,QAASJ,EAAQ,EAAI,EACrB,QAASE,EAAU,YAAc,WACjC,MAAM,QACP,SAAA,iBAAA,CAAA,CAED,CACF,CAAA,CAEJ,EAEAH,GAAiB,YAAc,mBCpB/B,MAAMM,GAAW/I,EAAAA,KAAW,CAAC,CAAE,KAAAsB,EAAM,MAAAnB,KAA2B,CACxD,KAAA,CAAE,WAAAmH,EAAY,OAAAG,EAAQ,cAAAE,EAAe,MAAAD,EAAO,MAAAsB,CAAM,EAAIpB,GAAYtG,CAAI,EAEtE2H,EAAU,CACd,cAAe,CAAE,QAAS,EAAK,EAC/B,MAAO,CAAE,KAAM,SAAU,gBAAiB,IAAK,EAC/C,QAAS,CAAE,QAAS,EAAM,EAC1B,OAAQ,CAAE,QAAS,EAAM,EACzB,YAAa,CAAE,OAAQ,CAAE,OAAQ,CAAE,QAAS,EAAM,EAAG,UAAW,EAAI,EACpE,MAAO,CAAE,KAAM,WAAY,MAAO,CAAE,MAAA9I,EAAQ,EAC5C,QAAS,CAAE,YAAa,GAAI,EAC5B,MAAO,CAAE,WAAY6I,EAAO,OAAQ,CAAE,MAAO,CAAE,MAAA7I,CAAM,EAAI,EACzD,MAAO,CACL,MAAO,EACP,QAAS,IACT,kBAAmB,MACnB,OAAQ,CAAE,QAAS,EAAM,EACzB,MAAO,CAAE,KAAM,MAAU,CAC3B,EACA,OAAQ,CACN,CAAE,KAAMuH,EAAO,KAAM,MAAO,EAC5B,CAAE,KAAMJ,EAAY,KAAM,YAAa,EACvC,CAAE,KAAMG,EAAQ,KAAM,QAAS,EAC/B,CAAE,KAAME,EAAe,KAAM,iBAAkB,CAAA,CAEnD,EAEA,OACGjH,EAAAA,IAAA,SAAA,CAAO,MAAO,CAAE,OAAQ,EAAG,MAAO,MAAO,EACxC,SAACA,EAAA,IAAAwI,EAAA,CAAgB,WAAYC,EAAY,QAAAF,CAAkB,CAAA,EAC7D,CAEJ,CAAC,EAEDF,GAAS,YAAc,WC1BvB,MAAMK,GAAiBpJ,EAAM,KAC3B,CAAC,CAAE,MAAAG,EAAO,QAAAyI,EAAS,WAAAD,KAAsC,CACvD,IAAIrH,EAAOkH,GACPI,GAAWD,EACbrH,EAAO,CAAC,EACCsH,EACFtH,EAAAgH,GACEK,IACFrH,EAAAiH,IAGT,MAAMU,EAA8B,CAClC,MAAO,CAAE,KAAM,SAAU,gBAAiB,aAAc,EACxD,QAAS,CAAE,QAAS,EAAM,EAC1B,MAAO,CAAE,KAAM,OAAQ,MAAO,CAAE,MAAA9I,EAAQ,EACxC,cAAe,CACb,QAAS,GACT,MAAO,CAEL,uBACE,kDAAA,CAEN,EACA,YAAa,CACX,OAAQ,CACN,UAAW,EAAA,CAEf,EACA,OAAQ,CACN,CACE,KAAM,OACN,KAAM,SACN,KAAM,CAAC,OAAQ,KAAM,QAAQ,EAC7B,MAAOiI,GACP,KAAA9G,CAAA,CACF,CAEJ,EAEA,OACGZ,EAAAA,IAAA,SAAA,CAAO,MAAO,CAAE,OAAQ,EAAG,MAAO,MAAO,EACxC,SAACA,EAAA,IAAAwI,EAAA,CAAgB,WAAYC,EAAY,QAAAF,CAAkB,CAAA,EAC7D,CAAA,CAGN,EAEAG,GAAe,YAAc,iBClD7B,MAAMC,EAAiBrJ,EAAM,KAC3B,CAAC,CACC,MAAAG,EACA,OAAAmJ,EACA,YAAAC,EACA,YAAAC,EACA,IAAAtH,EACA,MAAAuH,EACA,MAAArJ,EACA,KAAAsJ,CAAA,IACyB,CACnB,MAAArC,EAAMjH,IAAU,SAAW,KAAO,EAClCuJ,EAAW,KAAK,IAAItC,EAAKkC,CAAW,EACpCN,EAAU,CACd,cAAe,CAAE,QAAS,EAAK,EAC/B,QAAS,CAAE,QAAS,EAAM,EAC1B,KAAM,CAAE,WAAY,KAAM,SAAU,IAAK,WAAY,IAAK,EAC1D,MAAO,CAAE,KAAM,GAAGS,CAAI,IAAItJ,CAAK,GAAI,MAAO,CAAE,MAAAD,EAAQ,EACpD,MAAO,CAAE,KAAM,QAAS,gBAAiB,IAAK,EAC9C,OAAQ,CACN,CACE,KAAAuJ,EACA,KAAM,CAACxH,CAAG,EACV,QAAS,CAAE,YAAa,IAAIuH,CAAK,EAAG,EACpC,WAAY,CAAE,OAAQA,EAAO,YAAa,EAAG,MAAAtJ,CAAM,EACnD,KAAM,CAAE,gBAAiBA,CAAM,EAC/B,MAAO,CAAE,gBAAiBA,CAAM,CAAA,CAEpC,EACA,MAAO,CACL,IAAAkH,EACA,IAAKiC,EACL,UAAW,EACX,OAAQ,CAAE,SAAU,GAAI,MAAO,CAAE,MAAAnJ,EAAQ,EACzC,UAAW,CACT,CACE,KAAMkH,EACN,GAAIsC,EACJ,MAAOC,GAAM,GAAG,EAChB,UAAW,EACb,EACA,CACE,KAAMJ,EACN,GAAIF,EACJ,MAAOnD,EAAI,GAAG,EACd,UAAW,EACb,EACA,CACE,KAAMwD,EACN,GAAIH,EACJ,MAAOrJ,IAAU,QAAUM,EAAK,GAAG,EAAIA,EAAK,GAAG,EAC/C,UAAW,EAAA,CACb,CACF,CAEJ,EAEA,OAEGC,EAAA,IAAAmJ,EAAA,CAAK,KAAM,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,KAAM,CAAA,EACxC,SAAAnJ,EAAAA,IAAC,SAAO,CAAA,MAAO,CAAE,OAAQ,EAAG,MAAO,MAAO,EACxC,SAACA,EAAA,IAAAwI,EAAA,CAAgB,WAAYC,EAAY,QAAAF,CAAkB,CAAA,CAC7D,CAAA,CACF,CAAA,CAAA,CAGN,EAEAI,EAAe,YAAc,iBC5E7B,MAAMS,GAAkB9J,EAAM,KAAK,CAAC,CAAE,MAAAG,KAAkC,CAChE,MAAAuH,EAAQO,EAAuB,OAAO,EACtCX,EAAaW,EAAuB,YAAY,EAChD8B,EAAM9B,EAAuB,KAAK,EAClCT,EAASS,EAAuB,QAAQ,EACxCR,EAASQ,EAAuB,QAAQ,EACxCN,EAAgBM,EAAuB,eAAe,EAE5D,OAEIzD,EAAA,KAAAwF,WAAA,CAAA,SAAA,CAAAtJ,EAAA,IAAC2I,EAAA,CACC,IAAK3B,EAAM,IACX,YAAa,EACb,YAAa,KAAK,IAAI,GAAIA,EAAM,MAAM,EACtC,OAAQA,EAAM,OACd,MAAM,MACN,MAAM,OACN,KAAMA,EAAM,KACZ,MAAAvH,CAAA,CACF,EACAO,EAAA,IAAC2I,EAAA,CACC,IAAK/B,EAAW,IAChB,YAAa,IACb,YAAa,KAAK,IAAI,IAAKA,EAAW,MAAM,EAC5C,OAAQA,EAAW,OACnB,MAAM,KACN,MAAM,aACN,KAAMA,EAAW,KACjB,MAAAnH,CAAA,CACF,EACAO,EAAA,IAAC2I,EAAA,CACC,IAAK5B,EAAO,IACZ,YAAa,IACb,YAAa,KAAK,IAAI,IAAMA,EAAO,MAAM,EACzC,OAAQA,EAAO,OACf,MAAM,MACN,MAAM,SACN,KAAMA,EAAO,KACb,MAAAtH,CAAA,CACF,EACAO,EAAA,IAAC2I,EAAA,CACC,IAAK1B,EAAc,IACnB,YAAa,IACb,YAAa,KAAK,IAAI,IAAMA,EAAc,MAAM,EAChD,OAAQA,EAAc,OACtB,MAAM,QACN,MAAM,kBACN,KAAMA,EAAc,KACpB,MAAAxH,CAAA,CACF,EACAO,EAAA,IAAC2I,EAAA,CACC,IAAK7B,EAAO,IACZ,YAAa,IACb,YAAa,KAAK,IAAI,IAAKA,EAAO,MAAM,EACxC,OAAQA,EAAO,OACf,MAAM,QACN,MAAM,SACN,KAAMA,EAAO,KACb,MAAArH,CAAA,CACF,EACAO,EAAA,IAAC2I,EAAA,CACC,IAAKU,EAAI,IACT,YAAa,GACb,YAAa,KAAK,IAAI,IAAKA,EAAI,MAAM,EACrC,OAAQA,EAAI,OACZ,MAAM,MACN,MAAM,MACN,KAAMA,EAAI,KACV,MAAA5J,CAAA,CAAA,CACF,EACF,CAEJ,CAAC,EAED2J,GAAgB,YAAc,kBClE9B,MAAMG,GAAY,CAAC,CAAE,KAAA3I,EAAM,WAAAqH,EAAY,QAAAC,KAA8B,CAEnE,MAAMzI,EADQ+J,GAAaC,EAAS,EAChB,OAAS,QAAU,QAAU,QAEjD,OACGzJ,EAAAA,IAAA6D,EAAA,CAAe,MAAM,aAAa,gBAAiB4B,EAAI,KACtD,SAAA3B,EAAA,KAACqF,EAAK,CAAA,UAAS,GAAC,QAAS,EACvB,SAAA,CAAAnJ,MAACoJ,IAAgB,MAAA3J,EAAc,EAC/BO,MAACmJ,GAAK,KAAM,CAAE,GAAI,GAAI,GAAI,GACxB,SAAAnJ,EAAA,IAAC0I,GAAA,CACC,QAAAR,EACA,WAAAD,EACA,MAAAxI,CAAA,CAAA,EAEJ,EACCO,EAAA,IAAAmJ,EAAA,CAAK,KAAM,CAAE,GAAI,GAAI,GAAI,CAAA,EACxB,SAAAnJ,EAAAA,IAACqI,GAAS,CAAA,KAAAzH,EAAY,MAAAnB,EAAc,CACtC,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,ECxBMiK,GAAuC,CAC3C,SAAU,KACV,OAAQ,OACR,UAAW,GACX,MAAO,MACT,EACMC,GAAiC,CACrC,MAAO,OACP,SAAU,OACV,MAAO,OACT,EAEMC,EAAe,CACnB5D,EACA6D,EACAC,EACAC,MAEmB/D,EAAM8D,EAASC,IACZF,GAAO,OAAO,MAAM,EAGtCG,EAAa,CACjBhE,EACAiE,EACAH,EACAC,MAEiB/D,EAAM+D,EAASD,IACZG,GAAK,OAAO,MAAM,EAGlCC,EAAU,CAAC,CAAE,IAAAnI,EAAK,IAAAiE,EAAM,MAC5BhG,EAAA,IAACmK,GAAK,CAAA,MAAOT,GACX,SAAC5F,EAAAA,KAAAqF,EAAA,CAAK,UAAS,GAAC,QAAS,EACvB,SAAA,CAACnJ,EAAAA,IAAAmJ,EAAA,CAAK,KAAM,CAAE,GAAI,GAAI,GAAI,CACxB,EAAA,SAAArF,EAAA,KAACsG,GACC,CAAA,SAAA,CAAAtG,EAAA,KAACuG,EAAW,CAAA,QAAQ,KAAK,UAAU,KACjC,SAAA,CAAAvG,EAAA,KAAC,SAAO,CAAA,MAAO,CAAE,aAAc,EAAM,EAAA,SAAA,CAAA,IACjC8F,EAAa5D,EAAKjE,EAAI,MAAOA,EAAI,OAAQA,EAAI,MAAM,EACpD6H,EAAa5D,EAAKjE,EAAI,MAAOA,EAAI,OAAQA,EAAI,MAAM,IACpDiI,EAAWhE,EAAKjE,EAAI,IAAKA,EAAI,OAAQA,EAAI,MAAM,EAC3C,MAAMiI,EAAWhE,EAAKjE,EAAI,IAAKA,EAAI,OAAQA,EAAI,MAAM,CAAC,GACtD,GAAG,GAAA,EAET,EACCA,EAAI,KAAA,EACP,EACA/B,EAAAA,IAAC,KAAG,CAAA,cAAW,EAAC,CAAA,EAChBA,EAAA,IAACqK,EAAA,CACC,QAAQ,KACR,UAAU,KACV,SAAA,eAAetI,EAAI,UAAU,EAAA,CAAG,EAClC/B,EAAA,IAACqK,EAAA,CACC,QAAQ,KACR,UAAU,KACV,SAAA,iBAAiBtI,EAAI,YAAY,EAAA,CAAA,CAAG,CAAA,CACxC,CACF,CAAA,QACCoH,EAAK,CAAA,KAAM,CAAE,GAAI,GAAI,GAAI,CAAE,EAC1B,SAACnJ,EAAA,IAAA,MAAA,CAAI,IAAK+B,EAAI,IAAK,IAAI,GAAG,MAAO4H,GAAW,CAC9C,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EChEIW,GAAuBrE,GAAa,MAAM,EAAE,QAAQ,EACpDsE,GAAyBrE,GAAe,MAAM,EAAE,QAAQ,EACxDsE,GAA0B7E,EAAgB,MAAM,EAAE,QAAQ,EAC1D8E,GAA4BlF,EAAkB,MAAM,EAAE,QAAQ,EAO9DmF,GAAapL,EAAAA,KAAW,CAAC,CAAE,WAAA2I,EAAY,QAAAC,CAAQ,IAClDpE,EAAAA,KAAAqF,EAAA,CAAK,UAAS,GAAC,QAAS,EACtB,SAAA,CAAA,CAACjB,GACClI,EAAAA,IAAAmJ,EAAA,CAAK,KAAM,CAAE,GAAI,GAAI,GAAIlB,EAAa,GAAK,GAC1C,gBAACkB,EAAK,CAAA,UAAS,GAAC,QAAS,EAAG,MAAM,OAEhC,SAAA,CAAAnJ,MAACmJ,GAAK,KAAM,CAAE,GAAI,GAAI,GAAIlB,EAAa,EAAI,GAAI,IAAK,GAClD,SAAAjI,EAAA,IAAC6D,EAAe,CAAA,MAAM,aAAa,gBAAgB,QAChD,SAAwB2G,GAAA,IAAI,CAACzI,EAAKU,IAChCzC,EAAAA,IAAAkK,EAAA,CAAQ,IAAG,GAAC,IAAAnI,CAAA,EAAe,KAAKA,EAAI,KAAK,QAAQU,CAAC,EAAI,CACxD,CACH,CAAA,EACF,EAECzC,EAAAA,IAAAmJ,EAAA,CAAK,KAAM,CAAE,GAAI,GAAI,GAAIlB,EAAa,EAAI,GAAI,IAAK,CAClD,EAAA,SAAAjI,EAAA,IAAC6D,EAAA,CACC,MAAM,sBACN,gBAAiB4B,EAAI,KAEpB,YAAqB,IAAI,CAAC1D,EAAKU,UAC7ByH,EAAQ,CAAA,IAAG,GAAC,IAAAnI,CAAA,EAAe,KAAKA,EAAI,KAAK,SAASU,CAAC,EAAI,CACzD,CAAA,CAAA,CAEL,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAED,CAACwF,GACCjI,EAAAA,IAAAmJ,EAAA,CAAK,KAAM,CAAE,GAAI,GAAI,GAAIjB,EAAU,GAAK,GACvC,gBAACiB,EAAK,CAAA,UAAS,GAAC,QAAS,EAAG,MAAM,OAEhC,SAAA,CAAAnJ,MAACmJ,EAAK,CAAA,KAAM,CAAE,GAAI,GAAI,GAAIjB,EAAU,EAAI,GAAI,IAAK,CAAE,EACjD,SAAClI,EAAAA,IAAA6D,EAAA,CAAe,MAAM,cAAc,gBAAgB,QACjD,SAAA4G,GAA0B,IAAI,CAAC1I,EAAKU,UAClCyH,EAAQ,CAAA,IAAAnI,CAAA,EAAe,KAAKA,EAAI,KAAK,QAAQU,CAAC,EAAI,CACpD,CACH,CAAA,EACF,EAECzC,EAAAA,IAAAmJ,EAAA,CAAK,KAAM,CAAE,GAAI,GAAI,GAAIjB,EAAU,EAAI,GAAI,IAAK,CAC/C,EAAA,SAAAlI,EAAA,IAAC6D,EAAA,CACC,MAAM,yBACN,gBAAiB4B,EAAI,KAEpB,SAAuB8E,GAAA,IAAI,CAACxI,EAAKU,IAC/BzC,EAAAA,IAAAkK,EAAA,CAAQ,IAAAnI,CAAe,EAAA,KAAKA,EAAI,KAAK,SAASU,CAAC,EAAI,CACrD,CAAA,CAAA,CAEL,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAEJ,CACD,EAEDiI,GAAW,YAAc,aCrEzB,MAAMC,GAAO,IAAM,CACjB,KAAM,CAAC1C,EAAY2C,CAAa,EAAIC,EAAAA,SAAe,EAAK,EAClD,CAAC3C,EAAS4C,CAAU,EAAID,EAAAA,SAAe,EAAK,EAE5CE,EAAeC,GAAmB,IAAM,CACxCA,GACE,CAAC9C,GAAWD,GACd2C,EAAc,EAAK,EAErBE,EAAW,CAAC5C,CAAO,IAEf,CAACD,GAAcC,GACjB4C,EAAW,EAAK,EAElBF,EAAc,CAAC3C,CAAU,EAE7B,EAEA,IAAIrH,EAAOgF,GACX,OAAIqC,EACKrH,EAAAuF,GACE+B,IACFtH,EAAAwF,IAKLtC,EAAA,KAAAwF,WAAA,CAAA,SAAA,CAAAtJ,MAACqK,EAAW,CAAA,QAAQ,KAAK,UAAU,KAAK,SAExC,aAAA,EACArK,EAAA,IAAC+H,GAAA,CACC,QAASgD,EACT,QAAA7C,EACA,WAAAD,CAAA,CACF,QACCtE,GAAa,CAAA,KAAA/C,EAAY,UAAWqH,EAAY,UAAWC,EAAS,EACpElI,EAAAA,IAAAuJ,GAAA,CAAU,KAAA3I,EAAY,WAAAqH,EAAwB,QAAAC,CAAkB,CAAA,EACjElI,EAAAA,IAAC0K,GAAW,CAAA,WAAAzC,EAAwB,QAAAC,CAAkB,CAAA,CAAA,EACxD,CAEJ"}