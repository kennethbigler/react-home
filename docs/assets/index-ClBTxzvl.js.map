{"version":3,"file":"index-ClBTxzvl.js","sources":["../../src/images/ken.webp","../../src/components/resume/summary/Info.tsx","../../src/components/resume/summary/EducationSeg.tsx","../../src/components/resume/summary/Education.tsx","../../src/components/resume/summary/Summary.tsx"],"sourcesContent":["export default \"__VITE_ASSET__CIZUPdc5__\"","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport ExpandableCard from \"../../common/expandable-card\";\nimport photo from \"../../../images/ken.webp\";\nimport workExp, { Job } from \"../../../constants/work\";\n\nconst imageStyles: React.CSSProperties = {\n  width: \"95%\",\n  display: \"block\",\n  margin: \"auto\",\n  marginTop: \"40px\",\n};\n\nconst getJob = (job: Job): string => {\n  const parent = job.parent ? ` (${job.parent})` : \"\";\n  return `${job.title}, ${job.company}${parent}`;\n};\n\nconst Info = React.memo(() => (\n  <Grid container spacing={1}>\n    {/* @ts-expect-error: custom breakpoints */}\n    <Grid size={{ xs: 12, md: 6, xl: 4, xxl: 3, xxxl: 2 }}>\n      <Link href=\"https://www.linkedin.com/in/kennethbigler\">\n        <img alt=\"Kenneth Bigler\" src={photo} style={imageStyles} />\n      </Link>\n    </Grid>\n    {/* @ts-expect-error: custom breakpoints */}\n    <Grid size={{ xs: 12, md: 6, xl: 8, xxl: 9, xxxl: 10 }}>\n      <ExpandableCard title={getJob(workExp[0])}>\n        <Table aria-label=\"general information about Ken Bigler\">\n          <TableBody>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                Location\n              </TableCell>\n              <TableCell>Mountain View, CA</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                Role\n              </TableCell>\n              <TableCell>Accessibility Engineer Leader</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                Volunteer Work\n              </TableCell>\n              <TableCell>Second Harvest Food Bank</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell colSpan={2} align=\"center\" component=\"th\">\n                Licenses\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <p>Driver License (C &amp; M1)</p>\n                <p>GoKart Racing License</p>\n                <p>Range Safety Certified</p>\n                <p>\n                  CPR, AED, &amp; First Aid Certified (Adult, Child, &amp; Baby)\n                </p>\n                <p>Golden Shellback</p>\n              </TableCell>\n              <TableCell>\n                <p>Ordained Minister</p>\n                <p>Former Magician&apos;s Assistant</p>\n                <p>Former Salsa Dance Instructor</p>\n                <p>Former Salsa Dance Choreographer</p>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </ExpandableCard>\n    </Grid>\n  </Grid>\n));\n\nInfo.displayName = \"Info\";\n\nexport default Info;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { School } from \"../../../constants/classes\";\n\nconst EducationSeg = React.memo(\n  ({ degree, honors, location, major, minor, school }: School) => (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\">{`${school || \"\"}, ${\n        location || \"\"\n      }`}</Typography>\n      <Typography variant=\"h5\" component=\"h3\">\n        {degree + (major ? ` in ${major}` : \"\")}\n      </Typography>\n      <ul>\n        {minor && (\n          <li>\n            <Typography>{minor}</Typography>\n          </li>\n        )}\n        {honors && (\n          <li>\n            <Typography>{honors}</Typography>\n          </li>\n        )}\n      </ul>\n    </div>\n  ),\n);\n\nEducationSeg.displayName = \"EducationSeg\";\n\nexport default EducationSeg;\n","import * as React from \"react\";\nimport ExpandableCard from \"../../common/expandable-card\";\nimport classes, { School } from \"../../../constants/classes\";\nimport EducationSeg from \"./EducationSeg\";\n\nconst Education = React.memo(() => (\n  <ExpandableCard title=\"Education\">\n    <div style={{ paddingLeft: 20, paddingRight: 20 }}>\n      {classes.map((d: School, i: number): React.ReactElement | null => {\n        if (d.school) {\n          return (\n            <div key={i}>\n              {i !== 0 && <hr aria-hidden />}\n              <EducationSeg {...d} />\n            </div>\n          );\n        }\n        return null;\n      })}\n    </div>\n  </ExpandableCard>\n));\n\nEducation.displayName = \"Education\";\n\nexport default Education;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Info from \"./Info\";\nimport Education from \"./Education\";\nimport Job from \"../work/Job\";\nimport workExp from \"../../../constants/work\";\nimport Grid from \"@mui/material/Grid\";\n\n/* Summary  ->  Info\n *         |->  Skills\n *         |->  Education */\nconst Summary = React.memo(() => (\n  <>\n    <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n      Summary\n    </Typography>\n    <Info />\n    <Grid container spacing={2}>\n      <Grid size={{ xs: 12, lg: 6 }}>\n        <Job job={workExp[0]} />\n      </Grid>\n      <Grid size={{ xs: 12, lg: 6 }}>\n        <Education />\n      </Grid>\n    </Grid>\n  </>\n));\n\nSummary.displayName = \"Summary\";\n\nexport default Summary;\n"],"names":["photo","imageStyles","getJob","job","parent","Info","React.memo","Grid","jsx","Link","ExpandableCard","workExp","Table","jsxs","TableBody","TableRow","TableCell","EducationSeg","degree","honors","location","major","minor","school","Typography","Education","classes","d","i","Summary","Fragment","Job"],"mappings":"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"}