{"version":3,"file":"index-170dc224.js","sources":["../../src/components/resume/education/Class.tsx","../../src/components/resume/education/Quarter.tsx","../../src/components/resume/education/Year.tsx","../../src/components/resume/education/Degree.tsx","../../src/components/resume/education/Education.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nexport interface ClassProps {\n  name: string;\n  catalog?: string;\n}\n\n/** Education  ->  Degree  -> Year  ->  Quarter  ->  Class */\nconst Class: React.FC<ClassProps> = React.memo(\n  ({ name, catalog }: ClassProps) => (\n    <li>\n      <Typography>\n        {catalog && <strong>{`${catalog} - `}</strong>}\n        {name}\n      </Typography>\n    </li>\n  )\n);\n\nexport default Class;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Class, { ClassProps } from \"./Class\";\n\nexport interface QuarterType {\n  classes: ClassProps[];\n  quarter: string;\n}\ninterface QuarterProps {\n  quarter: QuarterType;\n}\n\n/** Education  ->  Degree  -> Year  ->  Quarter  ->  Class */\nconst Quarter: React.FC<QuarterProps> = ({ quarter }: QuarterProps) => (\n  <>\n    <Typography variant=\"h5\" component=\"h3\">\n      {quarter.quarter}\n    </Typography>\n    <ul>\n      {quarter.classes.map((c) => (\n        <Class key={c.name} name={c.name} catalog={c.catalog} />\n      ))}\n    </ul>\n  </>\n);\n\nexport default Quarter;\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Quarter, { QuarterType } from \"./Quarter\";\n\ntype GridSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\nexport interface YearType {\n  year: string;\n  quarters: QuarterType[];\n}\ninterface YearProps {\n  len: number;\n  year: YearType;\n}\n\n/** Education  ->  Degree  -> Year  ->  Quarter  ->  Class */\nconst Year: React.FC<YearProps> = ({ year, len }: YearProps) => (\n  <Grid item md={Math.ceil(12 / len) as GridSize} xs={12}>\n    <Typography variant=\"h4\" component=\"h2\">\n      {year.year}\n    </Typography>\n    <hr />\n    {year.quarters.map((quarter) => (\n      <Quarter key={quarter.quarter} quarter={quarter} />\n    ))}\n  </Grid>\n);\n\nexport default Year;\n","import * as React from \"react\";\nimport Year, { YearType } from \"./Year\";\nimport ExpandableCard from \"../../common/expandable-card\";\n\nexport interface DegreeType {\n  school?: string;\n  major?: string;\n  minor?: string;\n  degree: string;\n  gpa?: string | number;\n  graduation?: string;\n  subtitle?: string;\n  color?: string;\n  years: YearType[];\n}\ninterface DegreeProps {\n  degree: DegreeType;\n}\n\nconst getTitles = (degree: DegreeType): { title: string; subtitle: string } => {\n  const school = degree.school ? `${degree.school} - ` : \"\";\n  const major = degree.major ? ` in ${degree.major}` : \"\";\n  const minor = degree.minor ? ` ${degree.minor}` : \"\";\n  const title = `${school}${degree.degree}${major}${minor}`;\n  const gpa = degree.gpa && `GPA: ${degree.gpa}`;\n  const graduation = degree.graduation\n    ? ` - Graduation: ${degree.graduation}`\n    : \"\";\n  const subtitle =\n    degree.subtitle || ((gpa || graduation) && `${gpa || \"\"}${graduation}`);\n\n  return { title, subtitle };\n};\n\n/** Education  ->  Degree  -> Year  ->  Quarter  ->  Class */\nconst Degree: React.FC<DegreeProps> = (props: DegreeProps) => {\n  const { degree } = props;\n  const { title, subtitle } = getTitles(degree);\n\n  return (\n    <ExpandableCard\n      backgroundColor={degree.color && degree.color}\n      subtitle={subtitle}\n      title={title}\n    >\n      {degree.years.map((year) => (\n        <Year key={year.year} len={degree.years.length} year={year} />\n      ))}\n    </ExpandableCard>\n  );\n};\n\nexport default Degree;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Degree from \"./Degree\";\nimport classes from \"../../../constants/classes\";\n\n/** Education  ->  Degree  -> Year  ->  Quarter  ->  Class */\nconst Education = React.memo(() => (\n  <>\n    <Typography variant=\"h2\" component=\"h1\">\n      Hackathons &amp; Education\n    </Typography>\n    {classes.map((d) => (\n      <Degree key={d.degree} degree={d} />\n    ))}\n  </>\n));\n\nexport default Education;\n"],"names":["Class","React.memo","name","catalog","jsx","Typography","Quarter","quarter","jsxs","Fragment","c","Year","year","len","Grid","getTitles","degree","school","major","minor","title","gpa","graduation","subtitle","Degree","props","ExpandableCard","Education","classes","d","Education$1"],"mappings":"yTASA,MAAMA,EAA8BC,EAAM,KACxC,CAAC,CAAE,KAAAC,EAAM,QAAAC,KACNC,MAAA,KAAA,CACC,gBAACC,EACE,CAAA,SAAA,CAAWF,GAAAC,EAAAA,IAAC,SAAQ,CAAA,SAAA,GAAGD,OAAa,EACpCD,CAAA,CAAA,CACH,CACF,CAAA,CAEJ,ECLMI,EAAkC,CAAC,CAAE,QAAAC,CAAA,IAEvCC,EAAAA,KAAAC,EAAAA,SAAA,CAAA,SAAA,CAAAL,MAACC,GAAW,QAAQ,KAAK,UAAU,KAChC,WAAQ,QACX,QACC,KACE,CAAA,SAAAE,EAAQ,QAAQ,IAAKG,GACnBN,EAAAA,IAAAJ,EAAA,CAAmB,KAAMU,EAAE,KAAM,QAASA,EAAE,SAAjCA,EAAE,IAAwC,CACvD,EACH,CAAA,EACF,ECPIC,EAA4B,CAAC,CAAE,KAAAC,EAAM,IAAAC,KACxCL,OAAAM,EAAA,CAAK,KAAI,GAAC,GAAI,KAAK,KAAK,GAAKD,CAAG,EAAe,GAAI,GAClD,SAAA,CAAAT,MAACC,GAAW,QAAQ,KAAK,UAAU,KAChC,WAAK,KACR,QACC,KAAG,EAAA,EACHO,EAAK,SAAS,IAAKL,SACjBD,EAA8B,CAAA,QAAAC,CAAA,EAAjBA,EAAQ,OAA2B,CAClD,CAAA,EACH,ECNIQ,EAAaC,GAA4D,CAC7E,MAAMC,EAASD,EAAO,OAAS,GAAGA,EAAO,YAAc,GACjDE,EAAQF,EAAO,MAAQ,OAAOA,EAAO,QAAU,GAC/CG,EAAQH,EAAO,MAAQ,IAAIA,EAAO,QAAU,GAC5CI,EAAQ,GAAGH,IAASD,EAAO,SAASE,IAAQC,IAC5CE,EAAML,EAAO,KAAO,QAAQA,EAAO,MACnCM,EAAaN,EAAO,WACtB,kBAAkBA,EAAO,aACzB,GACEO,EACJP,EAAO,WAAcK,GAAOC,IAAe,GAAGD,GAAO,KAAKC,IAErD,MAAA,CAAE,MAAAF,EAAO,SAAAG,EAClB,EAGMC,EAAiCC,GAAuB,CACtD,KAAA,CAAE,OAAAT,CAAW,EAAAS,EACb,CAAE,MAAAL,EAAO,SAAAG,CAAS,EAAIR,EAAUC,CAAM,EAG1C,OAAAZ,EAAA,IAACsB,EAAA,CACC,gBAAiBV,EAAO,OAASA,EAAO,MACxC,SAAAO,EACA,MAAAH,EAEC,SAAOJ,EAAA,MAAM,IAAKJ,GAChBR,EAAAA,IAAAO,EAAA,CAAqB,IAAKK,EAAO,MAAM,OAAQ,KAAAJ,CAArC,EAAAA,EAAK,IAA4C,CAC7D,CAAA,CAAA,CAGP,EC5CMe,EAAY1B,EAAAA,KAAW,IAEzBO,EAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAAL,MAACC,EAAW,CAAA,QAAQ,KAAK,UAAU,KAAK,SAExC,yBAAA,EACCuB,EAAQ,IAAKC,GACZzB,MAACoB,GAAsB,OAAQK,CAAA,EAAlBA,EAAE,MAAmB,CACnC,CAAA,CAAA,CACH,CACD,EAEDC,EAAeH"}