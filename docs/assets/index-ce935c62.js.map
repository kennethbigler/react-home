{"version":3,"file":"index-ce935c62.js","sources":["../../src/constants/werewolf.ts","../../src/components/resume/werewolf/WerewolfPanel.tsx","../../src/components/resume/werewolf/Werewolf.tsx"],"sourcesContent":["export interface Role {\n  name: string;\n  description: string;\n  value: number;\n  count?: number;\n}\n\nexport const villagers: Role[] = [\n  {\n    name: \"Mystic Seer\",\n    description: \"Each night, point to a player and learn their exact role.\",\n    value: 9,\n  },\n  {\n    name: \"Seer\",\n    description:\n      \"Each night choose a player to learn if that player is a Villager or a Werewolf.\",\n    value: 7,\n  },\n  {\n    name: \"Mentalist\",\n    description:\n      \"Each night you may point to two players, and are told if those players are on the same team or not.\",\n    value: 6,\n  },\n  {\n    name: \"Revealer\",\n    description:\n      \"Each night you may point to a player. If that player is a Werewolf, that player is eliminated. If that player is not, you are eliminated.\",\n    value: 4,\n  },\n  {\n    name: \"Apprentice Seer\",\n    description:\n      \"If the Seer is eliminated, you become the Seer, waking each night to look for Werewolves.\",\n    value: 4,\n  },\n  {\n    name: \"Witch\",\n    description:\n      \"You may save or eliminate a player at night once each per game.\",\n    value: 4,\n  },\n  {\n    name: \"Drunk\",\n    description:\n      \"You are a Villager until the 3rd night, when you sober up and learn your real role.\",\n    value: 4,\n  },\n  {\n    name: \"Bodyguard\",\n    description:\n      \"Each night, choose a player who cannot be eliminated that night.\",\n    value: 3,\n  },\n  {\n    name: \"Prince\",\n    description:\n      \"If you are voted to be eliminated, your role is revealed and you stay.\",\n    value: 3,\n  },\n  {\n    name: \"Diseased\",\n    description:\n      \"If you are eliminated by Werewolves, they don't get to eliminate anyone the following night.\",\n    value: 3,\n  },\n  {\n    name: \"Hunter\",\n    description:\n      \"If you are eliminated, you may immediately eliminate another player.\",\n    value: 3,\n  },\n  {\n    name: \"Huntress\",\n    description: \"You may eliminate a player at night once per game.\",\n    value: 3,\n  },\n  {\n    name: \"Priest\",\n    description:\n      \"One night per game, choose a player to be protected. That player may not be eliminated at night.\",\n    value: 3,\n  },\n  {\n    name: \"P.I.\",\n    description:\n      \"One night per game, choose a player. You'll be told if that player or one of his neighbors is a Werewolf.\",\n    value: 3,\n  },\n  {\n    name: \"Tough Guy\",\n    description:\n      \"If the Werewolves attempt to eliminate you, you are not eliminated until the following night.\",\n    value: 3,\n  },\n  {\n    name: \"Aura Seer\",\n    description:\n      \"Choose a player each night to see if that player is not a Werewolf or Villager.\",\n    value: 3,\n  },\n  {\n    name: \"Ghost\",\n    description:\n      \"The first night, you are eliminated. Communicate to the players with single letters each day.\",\n    value: 2,\n  },\n  {\n    name: \"Mayor\",\n    description: \"Your vote counts twice.\",\n    value: 2,\n  },\n  {\n    name: \"Mason\",\n    description: \"The first night, wake up to see who the other Mason is.\",\n    value: 2,\n    count: 3,\n  },\n  {\n    name: \"Village Idiot\",\n    description: \"You always vote for players to be eliminated.\",\n    value: 2,\n  },\n  {\n    name: \"Old Hag\",\n    description:\n      \"Each night, choose a player to leave the village during the next day.\",\n    value: 1,\n  },\n  {\n    name: \"Spellcaster\",\n    description:\n      \"Each night, choose a player who may not speak the following day.\",\n    value: 1,\n  },\n  {\n    name: \"Villager\",\n    description: \"Find the Werewolves and eliminate them.\",\n    value: 1,\n    count: 14,\n  },\n  {\n    name: \"Lycan\",\n    description: \"You are a Villager, but appear to the seer as a Werewolf.\",\n    value: -1,\n  },\n  {\n    name: \"Pacifist\",\n    description: \"You must always vote for players to not be eliminated.\",\n    value: -1,\n  },\n  {\n    name: \"DoppelgÃ¤nger\",\n    description:\n      \"The first night, choose a player. When that player is eliminated you become that role.\",\n    value: -2,\n  },\n  {\n    name: \"Mad Bomber\",\n    description:\n      \"If you are eliminated, the players immediately to your left and right are eliminated as well.\",\n    value: -2,\n  },\n  {\n    name: \"Cupid\",\n    description:\n      \"The first night, choose two players to be linked together. If one of them is eliminated, the other is eliminated as well.\",\n    value: -3,\n  },\n  {\n    name: \"Troublemaker\",\n    description:\n      \"One night per game, stir up trouble by calling for players to be eliminated the following day.\",\n    value: -3,\n  },\n];\n\nexport const outsiders: Role[] = [\n  {\n    name: \"Cult Leader\",\n    description:\n      \"Each night, choose a player to join your cult. If all alive players are in your cult, you win.\",\n    value: 1,\n  },\n  {\n    name: \"Hoodlum\",\n    description:\n      \"Choose 2 players on the first night. To win, they must be eliminated and you must still be in the game at the end of the game.\",\n    value: 0,\n  },\n  {\n    name: \"Tanner\",\n    description:\n      \"You hate your job and your life. You win if you are eliminated.\",\n    value: -2,\n  },\n  {\n    name: \"Cursed\",\n    description:\n      \"You are on the Village team unless you are targeted for elimination by the Werewolves, at which time you become a Werewolf.\",\n    value: -3,\n  },\n  {\n    name: \"Vampire\",\n    description:\n      \"Each night, choose a player. That player is eliminated when a player gets their 2nd accusation the next day.\",\n    value: -7,\n    count: 8,\n  },\n];\n\nexport const wolves: Role[] = [\n  {\n    name: \"Alpha Wolf\",\n    description:\n      \"Once per game, following the elimination of a werewolf during the day, you may turn the Werewolves' target into a Werewolf instead of eliminating them.\",\n    value: -9,\n  },\n  {\n    name: \"Wolf Cub\",\n    description:\n      \"Each night, wake with the Werewolves. If you are eliminated, the Werewolves eliminate two players the following night.\",\n    value: -8,\n  },\n  {\n    name: \"Werewolf\",\n    description:\n      \"Each night, wake with the other Werewolves and choose a player to eliminate.\",\n    value: -6,\n    count: 12,\n  },\n  {\n    name: \"Minion\",\n    description:\n      \"You know who the Werewolves are, but you do not wake up with them at night.\",\n    value: -6,\n  },\n  {\n    name: \"Lone Wolf\",\n    description:\n      \"Each night, wake with the other Werewolves. You only win if you are the last player in the game.\",\n    value: -5,\n  },\n  {\n    name: \"Sorceress\",\n    description: \"Each night, look for the Seer. You are on the werewolf team.\",\n    value: -3,\n  },\n];\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface WerewolfPanelProps {\n  expanded?: string;\n  expandedKey: string;\n  handleChange: (\n    panel: string\n  ) => (_event: React.SyntheticEvent<Element, Event>, exp?: boolean) => void;\n  name: string;\n  description: string;\n  value: number;\n  count?: number;\n}\n\nconst containerStyles: React.CSSProperties = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  width: \"95%\",\n};\nconst itemStyles: React.CSSProperties = { display: \"flex\" };\n\nconst WerewolfPanel: React.FC<WerewolfPanelProps> = React.memo(\n  (props: WerewolfPanelProps) => {\n    const {\n      expanded,\n      expandedKey,\n      handleChange,\n      name,\n      description,\n      value,\n      count,\n    } = props;\n\n    return (\n      <Accordion\n        expanded={expanded === expandedKey}\n        onChange={handleChange(expandedKey)}\n      >\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <div style={containerStyles}>\n            <Typography style={itemStyles}>{name}</Typography>\n            {count && (\n              <Typography style={itemStyles}>Count: {count}</Typography>\n            )}\n            <Typography style={itemStyles}>Cost: {value}</Typography>\n          </div>\n        </AccordionSummary>\n        <AccordionDetails>{description}</AccordionDetails>\n      </Accordion>\n    );\n  }\n);\n\nexport default WerewolfPanel;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  Role,\n  villagers,\n  outsiders,\n  wolves,\n} from \"../../../constants/werewolf\";\nimport WerewolfPanel from \"./WerewolfPanel\";\n\nconst Werewolf: React.FC = React.memo(() => {\n  const [expanded, setExpanded] = React.useState(\"\");\n\n  const handleChange = React.useCallback(\n    (panel: string) =>\n      (_event: React.SyntheticEvent<Element, Event>, exp?: boolean): void => {\n        setExpanded(exp ? panel : \"\");\n      },\n    [setExpanded]\n  );\n\n  const getRolePanel = (role: Role, i: number) => {\n    const { name, description, value, count } = role;\n\n    return (\n      <WerewolfPanel\n        key={i}\n        {...{\n          expanded,\n          name,\n          description,\n          value,\n          count,\n          expandedKey: `${i}`,\n          handleChange,\n        }}\n      />\n    );\n  };\n\n  const villagerPanels = villagers.map(getRolePanel);\n  const outsiderPanels = outsiders.map(getRolePanel);\n  const wolfPanels = wolves.map(getRolePanel);\n\n  return (\n    <>\n      <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n        Werewolf\n      </Typography>\n      <hr />\n      <Typography variant=\"h3\" component=\"h2\" gutterBottom>\n        Villagers\n      </Typography>\n      {villagerPanels}\n      <hr />\n      <Typography variant=\"h3\" component=\"h2\" gutterBottom>\n        Outsiders\n      </Typography>\n      {outsiderPanels}\n      <hr />\n      <Typography variant=\"h3\" component=\"h2\" gutterBottom>\n        Wolves\n      </Typography>\n      {wolfPanels}\n    </>\n  );\n});\n\nexport default Werewolf;\n"],"names":["villagers","outsiders","wolves","containerStyles","itemStyles","WerewolfPanel","React.memo","props","expanded","expandedKey","handleChange","name","description","value","count","jsxs","Accordion","jsx","AccordionSummary","ExpandMoreIcon","Typography","AccordionDetails","Werewolf","setExpanded","React.useState","React.useCallback","panel","_event","exp","getRolePanel","role","i","villagerPanels","outsiderPanels","wolfPanels","Fragment","Werewolf$1"],"mappings":"sLAOO,MAAMA,EAAoB,CAC/B,CACE,KAAM,cACN,YAAa,4DACb,MAAO,CACT,EACA,CACE,KAAM,OACN,YACE,kFACF,MAAO,CACT,EACA,CACE,KAAM,YACN,YACE,sGACF,MAAO,CACT,EACA,CACE,KAAM,WACN,YACE,4IACF,MAAO,CACT,EACA,CACE,KAAM,kBACN,YACE,4FACF,MAAO,CACT,EACA,CACE,KAAM,QACN,YACE,kEACF,MAAO,CACT,EACA,CACE,KAAM,QACN,YACE,sFACF,MAAO,CACT,EACA,CACE,KAAM,YACN,YACE,mEACF,MAAO,CACT,EACA,CACE,KAAM,SACN,YACE,yEACF,MAAO,CACT,EACA,CACE,KAAM,WACN,YACE,+FACF,MAAO,CACT,EACA,CACE,KAAM,SACN,YACE,uEACF,MAAO,CACT,EACA,CACE,KAAM,WACN,YAAa,qDACb,MAAO,CACT,EACA,CACE,KAAM,SACN,YACE,mGACF,MAAO,CACT,EACA,CACE,KAAM,OACN,YACE,4GACF,MAAO,CACT,EACA,CACE,KAAM,YACN,YACE,gGACF,MAAO,CACT,EACA,CACE,KAAM,YACN,YACE,kFACF,MAAO,CACT,EACA,CACE,KAAM,QACN,YACE,gGACF,MAAO,CACT,EACA,CACE,KAAM,QACN,YAAa,0BACb,MAAO,CACT,EACA,CACE,KAAM,QACN,YAAa,0DACb,MAAO,EACP,MAAO,CACT,EACA,CACE,KAAM,gBACN,YAAa,gDACb,MAAO,CACT,EACA,CACE,KAAM,UACN,YACE,wEACF,MAAO,CACT,EACA,CACE,KAAM,cACN,YACE,mEACF,MAAO,CACT,EACA,CACE,KAAM,WACN,YAAa,0CACb,MAAO,EACP,MAAO,EACT,EACA,CACE,KAAM,QACN,YAAa,4DACb,MAAO,EACT,EACA,CACE,KAAM,WACN,YAAa,yDACb,MAAO,EACT,EACA,CACE,KAAM,eACN,YACE,yFACF,MAAO,EACT,EACA,CACE,KAAM,aACN,YACE,gGACF,MAAO,EACT,EACA,CACE,KAAM,QACN,YACE,4HACF,MAAO,EACT,EACA,CACE,K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"}