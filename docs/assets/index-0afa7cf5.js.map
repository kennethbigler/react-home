{"version":3,"file":"index-0afa7cf5.js","sources":["../../src/recoil/connect4-atom.ts","../../src/components/games/connect4/eval-connect4.ts","../../node_modules/@mui/icons-material/Add.js","../../node_modules/@mui/material/Fab/fabClasses.js","../../node_modules/@mui/material/Fab/Fab.js","../../src/components/games/connect4/Piece.tsx","../../src/components/games/connect4/Board.tsx","../../src/components/games/connect4/Header.tsx","../../src/components/games/connect4/GameBoard.tsx","../../src/components/games/connect4/Connect4.tsx"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const PIECE = 0;\nexport const STREAK = 1;\nexport const MAX = 2;\n\nexport enum C4Turn {\n  EMPTY = 0,\n  RED = 1,\n  BLACK = 2,\n}\nexport interface Connect4State {\n  board: number[][];\n  winner?: number;\n  turn: C4Turn;\n}\n\nconst NEW_BOARD = [\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n];\n\nexport const immutableBoardCopy = (acc: number[][], row: number[]) => {\n  acc.push([...row]);\n  return acc;\n};\n\nexport const newConnect4Game = (): Connect4State => ({\n  board: NEW_BOARD.reduce(immutableBoardCopy, []),\n  winner: undefined,\n  turn: C4Turn.RED,\n});\n\nconst connect4Atom = atom({\n  key: \"connect4Atom\",\n  default:\n    (JSON.parse(\n      localStorage.getItem(\"connect4-atom\") || \"null\"\n    ) as Connect4State) || newConnect4Game(),\n  effects: [\n    ({ onSet }) => {\n      onSet((state) => {\n        localStorage.setItem(\"connect4-atom\", JSON.stringify(state));\n      });\n    },\n  ],\n});\n\nexport default connect4Atom;\n","import { PIECE, STREAK, MAX, C4Turn } from \"../../../recoil/connect4-atom\";\n\n/** function to check for match and increment streak / max\n * @param {array} line - dp storage, [PIECE, STREAK, MAX] */\nconst evalConnect4 = (\n  board: number[][],\n  row: number,\n  col: number,\n  line: [number, [number, number][], [number, number][]]\n): void => {\n  // verify row\n  if (board[row] !== undefined) {\n    const piece = board[row][col];\n    // verify piece\n    if (piece !== undefined) {\n      // check piece\n      if (piece === line[PIECE] && piece !== C4Turn.EMPTY) {\n        // matches, increment streak and max if needed\n        line[STREAK].push([row, col]);\n        // update max and Win row if needed\n        if (line[STREAK].length > line[MAX].length) {\n          line[MAX] = [...line[STREAK]];\n        }\n      } else {\n        // doesn't match, restart streak\n        line[PIECE] = piece;\n        line[STREAK] = [[row, col]];\n      }\n    }\n  }\n};\n\nexport default evalConnect4;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFabUtilityClass(slot) {\n  return generateUtilityClass('MuiFab', slot);\n}\nconst fabClasses = generateUtilityClasses('MuiFab', ['root', 'primary', 'secondary', 'extended', 'circular', 'focusVisible', 'disabled', 'colorInherit', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'info', 'error', 'warning', 'success']);\nexport default fabClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport fabClasses, { getFabUtilityClass } from './fabClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    classes,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `size${capitalize(size)}`, color === 'inherit' ? 'colorInherit' : color]\n  };\n  const composedClasses = composeClasses(slots, getFabUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst FabRoot = styled(ButtonBase, {\n  name: 'MuiFab',\n  slot: 'Root',\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, styles[capitalize(ownerState.size)], styles[ownerState.color]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$palette$getCon, _theme$palette;\n  return _extends({}, theme.typography.button, {\n    minHeight: 36,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n      duration: theme.transitions.duration.short\n    }),\n    borderRadius: '50%',\n    padding: 0,\n    minWidth: 0,\n    width: 56,\n    height: 56,\n    zIndex: (theme.vars || theme).zIndex.fab,\n    boxShadow: (theme.vars || theme).shadows[6],\n    '&:active': {\n      boxShadow: (theme.vars || theme).shadows[12]\n    },\n    color: theme.vars ? theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),\n    backgroundColor: (theme.vars || theme).palette.grey[300],\n    '&:hover': {\n      backgroundColor: (theme.vars || theme).palette.grey.A100,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: (theme.vars || theme).palette.grey[300]\n      },\n      textDecoration: 'none'\n    },\n    [`&.${fabClasses.focusVisible}`]: {\n      boxShadow: (theme.vars || theme).shadows[6]\n    }\n  }, ownerState.size === 'small' && {\n    width: 40,\n    height: 40\n  }, ownerState.size === 'medium' && {\n    width: 48,\n    height: 48\n  }, ownerState.variant === 'extended' && {\n    borderRadius: 48 / 2,\n    padding: '0 16px',\n    width: 'auto',\n    minHeight: 'auto',\n    minWidth: 48,\n    height: 48\n  }, ownerState.variant === 'extended' && ownerState.size === 'small' && {\n    width: 'auto',\n    padding: '0 8px',\n    borderRadius: 34 / 2,\n    minWidth: 34,\n    height: 34\n  }, ownerState.variant === 'extended' && ownerState.size === 'medium' && {\n    width: 'auto',\n    padding: '0 16px',\n    borderRadius: 40 / 2,\n    minWidth: 40,\n    height: 40\n  }, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.color !== 'inherit' && ownerState.color !== 'default' && (theme.vars || theme).palette[ownerState.color] != null && {\n  color: (theme.vars || theme).palette[ownerState.color].contrastText,\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  '&:hover': {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n    }\n  }\n}), ({\n  theme\n}) => ({\n  [`&.${fabClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled,\n    boxShadow: (theme.vars || theme).shadows[0],\n    backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n  }\n}));\nconst Fab = /*#__PURE__*/React.forwardRef(function Fab(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFab'\n  });\n  const {\n      children,\n      className,\n      color = 'default',\n      component = 'button',\n      disabled = false,\n      disableFocusRipple = false,\n      focusVisibleClassName,\n      size = 'large',\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableFocusRipple,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FabRoot, _extends({\n    className: clsx(classes.root, className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'error', 'info', 'inherit', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'large'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'extended']), PropTypes.string])\n} : void 0;\nexport default Fab;","import * as React from \"react\";\nimport ContentAdd from \"@mui/icons-material/Add\";\nimport Fab from \"@mui/material/Fab\";\nimport { red, lightGreen } from \"@mui/material/colors\";\n\nimport noop from \"../../../apis/noop\";\n\ninterface PieceProps {\n  /** aria label */\n  ariaLabel?: string;\n  /** can the piece be clicked? */\n  enabled?: boolean;\n  /** callback onClick of piece */\n  onClick?: React.MouseEventHandler;\n  /** type of piece */\n  piece: number;\n}\n\n/** returns color based of piece type */\nconst getColor = (piece: number): string | undefined => {\n  switch (piece) {\n    case 0:\n      return undefined;\n    case 1:\n      return red[500];\n    case 2:\n      return \"black\";\n    default:\n      return lightGreen[600];\n  }\n};\n\nconst Piece = (props: PieceProps): React.ReactElement => {\n  const { ariaLabel, piece, enabled = false, onClick = noop } = props;\n\n  const color = getColor(piece);\n  const style: React.CSSProperties = { backgroundColor: color };\n\n  return !enabled ? (\n    <Fab disabled size=\"small\" style={style} aria-label=\"disabled column input\">\n      <div />\n    </Fab>\n  ) : (\n    <Fab\n      size=\"small\"\n      onClick={onClick}\n      style={style}\n      role=\"button\"\n      aria-label={ariaLabel}\n    >\n      <ContentAdd style={{ color: \"white\" }} />\n    </Fab>\n  );\n};\n\nexport default React.memo(Piece);\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Piece from \"./Piece\";\nimport { C4Turn } from \"../../../recoil/connect4-atom\";\n\ninterface BoardProps {\n  board: number[][];\n  insert: (col: number) => void;\n  turn: C4Turn;\n}\n\nconst styles: React.CSSProperties = {\n  padding: 1,\n  textAlign: \"center\",\n};\n\nconst Board: React.FC<BoardProps> = (props: BoardProps) => {\n  const { board, turn, insert } = props;\n  // generate code for Connect4 Board\n  const gameBoard = board\n    .map((arr, i) => {\n      const row = arr.map((piece, j) => (\n        <TableCell key={`c4c${i},${j}`} style={styles}>\n          <Piece piece={piece} />\n        </TableCell>\n      ));\n      return <TableRow key={`c4r${i}`}>{row}</TableRow>;\n    })\n    .reverse();\n  // generate buttons to play pieces based off top board row\n  const gameButtons = board[board.length - 1].map((piece, i) => (\n    <TableCell key={`c4h${i}`} style={styles}>\n      <Piece\n        enabled={!piece}\n        onClick={(): void => insert(i)}\n        piece={!piece ? turn : 0}\n        ariaLabel={`insert piece into column ${i}`}\n      />\n    </TableCell>\n  ));\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>{gameButtons}</TableRow>\n      </TableHead>\n      <TableBody>{gameBoard}</TableBody>\n    </Table>\n  );\n};\n\nexport default Board;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Piece from \"./Piece\";\nimport { C4Turn } from \"../../../recoil/connect4-atom\";\n\ninterface HeaderProps {\n  newGame: React.MouseEventHandler;\n  turn: C4Turn;\n  winner?: number;\n}\n\nconst Header: React.FC<HeaderProps> = React.memo((props: HeaderProps) => {\n  const { winner, turn, newGame } = props;\n  // status text\n  const status = winner ? \"Winner:\" : \"Turn:\";\n  const piece = winner || turn;\n\n  return (\n    <Toolbar>\n      <div className=\"flex-container\">\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Typography style={{ marginRight: 10 }} variant=\"h4\" component=\"h2\">\n            {status}\n          </Typography>\n          <Piece piece={piece} />\n        </div>\n        <Button onClick={newGame} variant=\"contained\">\n          Reset Game\n        </Button>\n      </div>\n    </Toolbar>\n  );\n});\n\nexport default Header;\n","import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Board from \"./Board\";\nimport Header from \"./Header\";\nimport { C4Turn } from \"../../../recoil/connect4-atom\";\n\ninterface GameBoardProps {\n  board: number[][];\n  insert: (col: number) => void;\n  newGame: React.MouseEventHandler;\n  turn: C4Turn;\n  winner?: number;\n}\n\nconst GameBoard: React.FC<GameBoardProps> = (props: GameBoardProps) => {\n  const { board, insert, winner, turn, newGame } = props;\n\n  return (\n    <Paper\n      elevation={2}\n      style={{\n        maxWidth: 900,\n        minWidth: 300,\n        display: \"block\",\n        margin: \"auto\",\n        paddingBottom: 5,\n      }}\n    >\n      <Header newGame={newGame} turn={turn} winner={winner} />\n      <Board board={board} insert={insert} turn={turn} />\n    </Paper>\n  );\n};\n\nexport default GameBoard;\n","import * as React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport Typography from \"@mui/material/Typography\";\nimport helpEvalConnect4 from \"./eval-connect4\";\nimport GameBoard from \"./GameBoard\";\nimport connect4Atom, {\n  MAX,\n  C4Turn,\n  immutableBoardCopy,\n  newConnect4Game,\n} from \"../../../recoil/connect4-atom\";\n\n/* Connect4  ->  GameBoard  ->  Header  ->  Piece\n *                         |->  Board   ->  Piece */\nconst Connect4: React.FC = () => {\n  const [{ turn, board, winner }, setState] = useRecoilState(connect4Atom);\n\n  /** start a new game, reset the board and helper vars */\n  const newGame = (): void => {\n    setState(newConnect4Game());\n  };\n\n  /** function to evaluate a connect 4 board based off the last piece played\n   * NOTE: win condition will be within +-3 of the piece last played - O(N)\n   * updates state of winner and board for highlighting */\n  const evalConnect4 = (\n    row: number,\n    col: number,\n    evalBoard: number[][]\n  ): void => {\n    // variables to track streaks\n    const dp: [number, [number, number][], [number, number][]][] = [];\n    for (let i = 0; i < 4; i += 1) {\n      const a1: [number, number][] = [];\n      const a2: [number, number][] = [];\n      dp.push([0, a1, a2]);\n    }\n\n    // win will be contained w/in +-3 of the token placed\n    for (let i = -3; i <= 3; i += 1) {\n      // check for streaks\n      // vertical\n      helpEvalConnect4(evalBoard, row + i, col, dp[0]);\n      // horizontal\n      helpEvalConnect4(evalBoard, row, col + i, dp[1]);\n      // diagonal down\n      helpEvalConnect4(evalBoard, row + i, col + i, dp[2]);\n      // diagonal up\n      helpEvalConnect4(evalBoard, row - i, col + i, dp[3]);\n    }\n\n    const tempBoard = evalBoard.reduce(immutableBoardCopy, []);\n\n    dp.forEach((line) => {\n      if (line[MAX].length >= 4) {\n        line[MAX].forEach((t) => {\n          tempBoard[t[0]][t[1]] = 3;\n        });\n        setState({\n          turn,\n          winner: turn,\n          board: tempBoard,\n        });\n      }\n    });\n  };\n\n  /** insert piece into the board, piece falls to the bottom row every time */\n  const insert = (col: number) => {\n    // check to see if there is an empty spot left\n    if (!winner && !board[board.length - 1][col]) {\n      let i = 0;\n      // look for the lowest empty spot\n      while (board[i][col] !== 0) {\n        i += 1;\n      }\n      // insert element\n      const tempBoard = board.reduce(immutableBoardCopy, []);\n      tempBoard[i][col] = turn;\n      setState({\n        winner,\n        turn: turn === C4Turn.RED ? C4Turn.BLACK : C4Turn.RED,\n        board: tempBoard,\n      });\n      // check if win\n      evalConnect4(i, col, tempBoard);\n    }\n  };\n\n  return (\n    <>\n      <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n        Welcome to Ken&apos;s Connect4 Game\n      </Typography>\n      <GameBoard\n        board={board}\n        insert={insert}\n        newGame={newGame}\n        turn={turn}\n        winner={winner}\n      />\n    </>\n  );\n};\n\nexport default Connect4;\n"],"names":["PIECE","STREAK","MAX","C4Turn","NEW_BOARD","immutableBoardCopy","acc","row","newConnect4Game","connect4Atom","atom","onSet","state","evalConnect4","board","col","line","piece","_interopRequireDefault","require$$0","Add","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","getFabUtilityClass","slot","generateUtilityClass","fabClasses","generateUtilityClasses","fabClasses$1","_excluded","useUtilityClasses","ownerState","color","variant","classes","size","slots","capitalize","composedClasses","composeClasses","_extends","FabRoot","styled","ButtonBase","prop","rootShouldForwardProp","props","styles","theme","_theme$palette$getCon","_theme$palette","Fab","React.forwardRef","inProps","ref","useThemeProps","children","className","component","disabled","disableFocusRipple","focusVisibleClassName","other","_objectWithoutPropertiesLoose","_jsx","clsx","Fab$1","getColor","red","lightGreen","Piece","ariaLabel","enabled","onClick","noop","style","jsx","ContentAdd","React.memo","Board","turn","insert","gameBoard","arr","i","j","TableCell","TableRow","gameButtons","Table","TableHead","TableBody","Header","winner","newGame","status","Toolbar","jsxs","Typography","Button","GameBoard","Paper","Connect4","setState","useRecoilState","evalBoard","dp","a1","a2","helpEvalConnect4","tempBoard","t","Fragment","Connect4$1"],"mappings":"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","x_google_ignoreList":[2,3,4]}