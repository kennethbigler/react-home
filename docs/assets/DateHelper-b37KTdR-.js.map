{"version":3,"file":"DateHelper-b37KTdR-.js","sources":["../../src/apis/DateHelper.ts"],"sourcesContent":["export const months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport type DateScale =\n  | \"year\"\n  | \"years\"\n  | \"month\"\n  | \"months\"\n  | \"days\"\n  | undefined;\nexport type FormatOutput = \"YYYY\" | \"MMMM Y\" | \"'YY\";\nexport interface DateObj {\n  year: number;\n  month: number;\n  day: number;\n  diff: (dateObj: DateObj, scale: DateScale) => number;\n  format: (output: FormatOutput) => string;\n}\n\n/** Takes format YYYY-MM-DD and creates a DateObj */\nconst dateHelper = (date?: DateObj | string): DateObj => {\n  let year: number;\n  let month: number;\n  let day: number;\n\n  if (typeof date === \"object\") {\n    return date;\n  }\n  if (typeof date === \"string\") {\n    const [y, m, d] = date.split(\"-\");\n    year = Number(y);\n    month = Number(m) - 1 || 0;\n    day = Number(d) || 1;\n  } else {\n    const now = new Date();\n    year = now.getFullYear();\n    month = now.getMonth();\n    day = now.getDate();\n  }\n\n  const diff = (dateObj: DateObj, scale: DateScale = \"days\"): number => {\n    switch (scale) {\n      case \"year\":\n      case \"years\":\n        return year - dateObj.year;\n      case \"month\":\n      case \"months\":\n        return 12 * (year - dateObj.year) + (month - dateObj.month);\n      default:\n        return (\n          365 * (year - dateObj.year) +\n          30 * (month - dateObj.month) +\n          (day - dateObj.day)\n        );\n    }\n  };\n\n  const format = (output: FormatOutput): string => {\n    switch (output) {\n      case \"YYYY\":\n        return year.toString();\n      case \"MMMM Y\":\n        return `${months[month]} ${year}`;\n      case \"'YY\":\n        return `'${year.toString().slice(-2)}`;\n      default:\n        // eslint-disable-next-line no-console\n        console.error(\"unknown date format: \", output);\n        return \"\";\n    }\n  };\n\n  return {\n    year,\n    month,\n    day,\n    diff,\n    format,\n  };\n};\n\nexport default dateHelper;\n"],"names":["months","dateHelper","date","year","month","day","y","m","d","now","dateObj","scale","output"],"mappings":"AAAO,MAAMA,EAAS,CACpB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,UACF,EAmBMC,EAAcC,GAAqC,CACnD,IAAAC,EACAC,EACAC,EAEA,GAAA,OAAOH,GAAS,SACX,OAAAA,EAEL,GAAA,OAAOA,GAAS,SAAU,CAC5B,KAAM,CAACI,EAAGC,EAAGC,CAAC,EAAIN,EAAK,MAAM,GAAG,EAChCC,EAAO,OAAOG,CAAC,EACPF,EAAA,OAAOG,CAAC,EAAI,GAAK,EACnBF,EAAA,OAAOG,CAAC,GAAK,CAAA,KACd,CACC,MAAAC,MAAU,KAChBN,EAAOM,EAAI,cACXL,EAAQK,EAAI,WACZJ,EAAMI,EAAI,SACZ,CAkCO,MAAA,CACL,KAAAN,EACA,MAAAC,EACA,IAAAC,EACA,KApCW,CAACK,EAAkBC,EAAmB,SAAmB,CACpE,OAAQA,EAAO,CACb,IAAK,OACL,IAAK,QACH,OAAOR,EAAOO,EAAQ,KACxB,IAAK,QACL,IAAK,SACH,MAAO,KAAMP,EAAOO,EAAQ,OAASN,EAAQM,EAAQ,OACvD,QAEI,MAAA,MAAOP,EAAOO,EAAQ,MACtB,IAAMN,EAAQM,EAAQ,QACrBL,EAAMK,EAAQ,IAErB,CAAA,EAuBA,OApBcE,GAAiC,CAC/C,OAAQA,EAAQ,CACd,IAAK,OACH,OAAOT,EAAK,WACd,IAAK,SACH,MAAO,GAAGH,EAAOI,CAAK,CAAC,IAAID,CAAI,GACjC,IAAK,MACH,MAAO,IAAIA,EAAK,SAAA,EAAW,MAAM,EAAE,CAAC,GACtC,QAEU,eAAA,MAAM,wBAAyBS,CAAM,EACtC,EACX,CAAA,CAQA,CAEJ"}