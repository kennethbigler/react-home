{"version":3,"file":"Dropdown-c81b5b7c.js","sources":["../../node_modules/@mui/icons-material/ArrowDropDown.js","../../src/components/common/dropdown/Dropdown.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');\nexports.default = _default;","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\n\ninterface DropdownProps {\n  onSelect: (index: number) => void;\n  options: string[];\n  value: number;\n  ariaLabel: string;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { ariaLabel, value, options, onSelect } = props;\n\n  // hooks/state\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n  const handleMenuItemClick = (\n    _event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number\n  ) => {\n    onSelect(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => setOpen((prevOpen) => !prevOpen);\n\n  const handleClose = (event: Event) => {\n    if (anchorRef.current?.contains(event.target as HTMLElement)) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button\n        ref={anchorRef}\n        aria-controls={open ? \"split-button-menu\" : undefined}\n        aria-expanded={open ? \"true\" : undefined}\n        aria-label={ariaLabel}\n        aria-haspopup=\"menu\"\n        endIcon={<ArrowDropDownIcon />}\n        size=\"small\"\n        variant=\"contained\"\n        onClick={handleToggle}\n      >\n        {options[value]}\n      </Button>\n      <Menu\n        id=\"split-button-menu\"\n        anchorEl={anchorRef.current}\n        open={open}\n        autoFocus\n        PaperProps={{ style: { maxHeight: 48 * 5.5 } }}\n        onClose={handleClose}\n      >\n        {options.map((option, index) => (\n          <MenuItem\n            key={option}\n            selected={index === value}\n            onClick={(event) => handleMenuItemClick(event, index)}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default Dropdown;\n"],"names":["_interopRequireDefault","require$$0","ArrowDropDown","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","Dropdown","props","ariaLabel","value","options","onSelect","open","setOpen","React.useState","anchorRef","React.useRef","handleMenuItemClick","_event","index","handleToggle","prevOpen","handleClose","event","_a","jsxs","Fragment","jsx","Button","ArrowDropDownIcon","Menu","option","MenuItem"],"mappings":"+HAEIA,EAAyBC,EAC7B,OAAO,eAAeC,EAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACD,IAAeC,EAAAD,EAAA,QAAG,OACdE,EAAiBJ,EAAuBK,EAAA,CAAgC,EACxEC,EAAcC,EACdC,KAAeJ,EAAe,YAA2BE,EAAY,KAAK,OAAQ,CACpF,EAAG,gBACL,CAAC,EAAG,eAAe,EACnBH,EAAAD,EAAA,QAAkBM,ECCZ,MAAAC,EAAYC,GAAyB,CACzC,KAAM,CAAE,UAAAC,EAAW,MAAAC,EAAO,QAAAC,EAAS,SAAAC,GAAaJ,EAG1C,CAACK,EAAMC,CAAO,EAAIC,WAAe,EAAK,EACtCC,EAAYC,SAAgC,IAAI,EAEhDC,EAAsB,CAC1BC,EACAC,IACG,CACHR,EAASQ,CAAK,EACdN,EAAQ,EAAK,CAAA,EAGTO,EAAe,IAAMP,EAASQ,GAAa,CAACA,CAAQ,EAEpDC,EAAeC,GAAiB,QAChCC,EAAAT,EAAU,UAAV,MAAAS,EAAmB,SAASD,EAAM,SAGtCV,EAAQ,EAAK,CAAA,EAGf,OAEIY,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,IAAKb,EACL,gBAAeH,EAAO,oBAAsB,OAC5C,gBAAeA,EAAO,OAAS,OAC/B,aAAYJ,EACZ,gBAAc,OACd,cAAUqB,EAAkB,EAAA,EAC5B,KAAK,QACL,QAAQ,YACR,QAAST,EAER,WAAQX,CAAK,CAAA,CAChB,EACAkB,EAAA,IAACG,EAAA,CACC,GAAG,oBACH,SAAUf,EAAU,QACpB,KAAAH,EACA,UAAS,GACT,WAAY,CAAE,MAAO,CAAE,UAAW,GAAK,IAAM,EAC7C,QAASU,EAER,SAAQZ,EAAA,IAAI,CAACqB,EAAQZ,IACpBQ,EAAA,IAACK,EAAA,CAEC,SAAUb,IAAUV,EACpB,QAAUc,GAAUN,EAAoBM,EAAOJ,CAAK,EAEnD,SAAAY,CAAA,EAJIA,CAAA,CAMR,CAAA,CACH,CACF,CAAA,CAAA,CAEJ","x_google_ignoreList":[0]}