{"version":3,"file":"index-CpyO0WLp.js","sources":["../../src/jotai/connect4-atom.ts","../../src/components/games/connect4/eval-connect4.ts","../../node_modules/@mui/material/Fab/fabClasses.js","../../node_modules/@mui/material/Fab/Fab.js","../../src/components/games/connect4/Piece.tsx","../../src/components/games/connect4/Board.tsx","../../src/components/games/connect4/Header.tsx","../../src/components/games/connect4/GameBoard.tsx","../../src/components/games/connect4/Connect4.tsx"],"sourcesContent":["import { atomWithStorage } from \"jotai/utils\";\n\nexport const PIECE = 0;\nexport const STREAK = 1;\nexport const MAX = 2;\n\nexport enum C4Turn {\n  EMPTY = 0,\n  RED = 1,\n  BLACK = 2,\n}\nexport interface Connect4State {\n  board: number[][];\n  winner?: number;\n  turn: C4Turn;\n}\n\nconst NEW_BOARD = [\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n];\n\nexport const immutableBoardCopy = (acc: number[][], row: number[]) => {\n  acc.push([...row]);\n  return acc;\n};\n\nexport const newConnect4Game = (): Connect4State => ({\n  board: NEW_BOARD.reduce(immutableBoardCopy, []),\n  winner: undefined,\n  turn: C4Turn.RED,\n});\n\nconst connect4Atom = atomWithStorage(\"connect4Atom\", newConnect4Game());\n\nexport default connect4Atom;\n","import { PIECE, STREAK, MAX, C4Turn } from \"../../../jotai/connect4-atom\";\n\n/** function to check for match and increment streak / max\n * @param {array} line - dp storage, [PIECE, STREAK, MAX] */\nconst evalConnect4 = (\n  board: number[][],\n  row: number,\n  col: number,\n  line: [C4Turn, [number, number][], [number, number][]],\n): void => {\n  // verify row\n  if (board[row] !== undefined) {\n    const piece: C4Turn = board[row][col];\n    // verify piece\n    if (piece !== undefined) {\n      // check piece\n      if (piece === line[PIECE] && piece !== C4Turn.EMPTY) {\n        // matches, increment streak and max if needed\n        line[STREAK].push([row, col]);\n        // update max and Win row if needed\n        if (line[STREAK].length > line[MAX].length) {\n          line[MAX] = [...line[STREAK]];\n        }\n      } else {\n        // doesn't match, restart streak\n        line[PIECE] = piece;\n        line[STREAK] = [[row, col]];\n      }\n    }\n  }\n};\n\nexport default evalConnect4;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFabUtilityClass(slot) {\n  return generateUtilityClass('MuiFab', slot);\n}\nconst fabClasses = generateUtilityClasses('MuiFab', ['root', 'primary', 'secondary', 'extended', 'circular', 'focusVisible', 'disabled', 'colorInherit', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'info', 'error', 'warning', 'success']);\nexport default fabClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport fabClasses, { getFabUtilityClass } from \"./fabClasses.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    classes,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `size${capitalize(size)}`, color === 'inherit' ? 'colorInherit' : color]\n  };\n  const composedClasses = composeClasses(slots, getFabUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the focused, disabled, etc. classes to the ButtonBase\n    ...composedClasses\n  };\n};\nconst FabRoot = styled(ButtonBase, {\n  name: 'MuiFab',\n  slot: 'Root',\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, styles[capitalize(ownerState.size)], styles[ownerState.color]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.button,\n  minHeight: 36,\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  borderRadius: '50%',\n  padding: 0,\n  minWidth: 0,\n  width: 56,\n  height: 56,\n  zIndex: (theme.vars || theme).zIndex.fab,\n  boxShadow: (theme.vars || theme).shadows[6],\n  '&:active': {\n    boxShadow: (theme.vars || theme).shadows[12]\n  },\n  color: theme.vars ? theme.vars.palette.text.primary : theme.palette.getContrastText?.(theme.palette.grey[300]),\n  backgroundColor: (theme.vars || theme).palette.grey[300],\n  '&:hover': {\n    backgroundColor: (theme.vars || theme).palette.grey.A100,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: (theme.vars || theme).palette.grey[300]\n    },\n    textDecoration: 'none'\n  },\n  [`&.${fabClasses.focusVisible}`]: {\n    boxShadow: (theme.vars || theme).shadows[6]\n  },\n  variants: [{\n    props: {\n      size: 'small'\n    },\n    style: {\n      width: 40,\n      height: 40\n    }\n  }, {\n    props: {\n      size: 'medium'\n    },\n    style: {\n      width: 48,\n      height: 48\n    }\n  }, {\n    props: {\n      variant: 'extended'\n    },\n    style: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48\n    }\n  }, {\n    props: {\n      variant: 'extended',\n      size: 'small'\n    },\n    style: {\n      width: 'auto',\n      padding: '0 8px',\n      borderRadius: 34 / 2,\n      minWidth: 34,\n      height: 34\n    }\n  }, {\n    props: {\n      variant: 'extended',\n      size: 'medium'\n    },\n    style: {\n      width: 'auto',\n      padding: '0 16px',\n      borderRadius: 40 / 2,\n      minWidth: 40,\n      height: 40\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      color: 'inherit'\n    }\n  }]\n})), memoTheme(({\n  theme\n}) => ({\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['dark', 'contrastText'])) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].contrastText,\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      '&:hover': {\n        backgroundColor: (theme.vars || theme).palette[color].dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette[color].main\n        }\n      }\n    }\n  }))]\n})), memoTheme(({\n  theme\n}) => ({\n  [`&.${fabClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled,\n    boxShadow: (theme.vars || theme).shadows[0],\n    backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n  }\n})));\nconst Fab = /*#__PURE__*/React.forwardRef(function Fab(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFab'\n  });\n  const {\n    children,\n    className,\n    color = 'default',\n    component = 'button',\n    disabled = false,\n    disableFocusRipple = false,\n    focusVisibleClassName,\n    size = 'large',\n    variant = 'circular',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    disabled,\n    disableFocusRipple,\n    size,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FabRoot, {\n    className: clsx(classes.root, className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    classes: classes,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'error', 'info', 'inherit', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'large'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'extended']), PropTypes.string])\n} : void 0;\nexport default Fab;","import * as React from \"react\";\nimport ContentAdd from \"@mui/icons-material/Add\";\nimport Fab from \"@mui/material/Fab\";\nimport { red, lightGreen } from \"@mui/material/colors\";\n\ninterface PieceProps {\n  /** aria label */\n  ariaLabel?: string;\n  /** can the piece be clicked? */\n  enabled?: boolean;\n  /** callback onClick of piece */\n  onClick?: React.MouseEventHandler;\n  /** type of piece */\n  piece: number;\n}\n\n/** returns color based of piece type */\nconst getColor = (piece: number): string | undefined => {\n  switch (piece) {\n    case 0:\n      return undefined;\n    case 1:\n      return red[500];\n    case 2:\n      return \"black\";\n    default:\n      return lightGreen[600];\n  }\n};\n\nconst Piece = React.memo(\n  ({ ariaLabel, piece, enabled = false, onClick }: PieceProps) => {\n    const color = getColor(piece);\n    const style: React.CSSProperties = { backgroundColor: color };\n\n    return !enabled ? (\n      <Fab\n        disabled\n        size=\"small\"\n        style={style}\n        aria-label=\"disabled column input\"\n      >\n        <div />\n      </Fab>\n    ) : (\n      <Fab\n        size=\"small\"\n        onClick={onClick}\n        style={style}\n        role=\"button\"\n        aria-label={ariaLabel}\n      >\n        <ContentAdd style={{ color: \"white\" }} />\n      </Fab>\n    );\n  },\n);\n\nPiece.displayName = \"Piece\";\n\nexport default Piece;\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Piece from \"./Piece\";\nimport { C4Turn } from \"../../../jotai/connect4-atom\";\n\ninterface BoardProps {\n  board: number[][];\n  insert: (col: number) => void;\n  turn: C4Turn;\n}\n\nconst styles: React.CSSProperties = {\n  padding: 1,\n  textAlign: \"center\",\n};\n\nconst Board = ({ board, turn, insert }: BoardProps) => {\n  // generate code for Connect4 Board\n  const gameBoard = board\n    .map((arr, i) => {\n      const row = arr.map((piece, j) => (\n        <TableCell key={`c4c${i},${j}`} style={styles}>\n          <Piece piece={piece} />\n        </TableCell>\n      ));\n      return <TableRow key={`c4r${i}`}>{row}</TableRow>;\n    })\n    .reverse();\n  // generate buttons to play pieces based off top board row\n  const gameButtons = board[board.length - 1].map((piece, i) => (\n    <TableCell key={`c4h${i}`} style={styles}>\n      <Piece\n        enabled={!piece}\n        onClick={(): void => insert(i)}\n        piece={!piece ? turn : 0}\n        ariaLabel={`insert piece into column ${i}`}\n      />\n    </TableCell>\n  ));\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>{gameButtons}</TableRow>\n      </TableHead>\n      <TableBody>{gameBoard}</TableBody>\n    </Table>\n  );\n};\n\nexport default Board;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Piece from \"./Piece\";\nimport { C4Turn } from \"../../../jotai/connect4-atom\";\n\ninterface HeaderProps {\n  newGame: React.MouseEventHandler;\n  turn: C4Turn;\n  winner?: number;\n}\n\nconst Header = React.memo(({ winner, turn, newGame }: HeaderProps) => (\n  <Toolbar>\n    <div className=\"flex-container\">\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Typography style={{ marginRight: 10 }} variant=\"h4\" component=\"h2\">\n          {winner ? \"Winner:\" : \"Turn:\"}\n        </Typography>\n        <Piece piece={winner || turn} />\n      </div>\n      <Button onClick={newGame} variant=\"contained\">\n        Reset Game\n      </Button>\n    </div>\n  </Toolbar>\n));\n\nHeader.displayName = \"Header\";\n\nexport default Header;\n","import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Board from \"./Board\";\nimport Header from \"./Header\";\nimport { C4Turn } from \"../../../jotai/connect4-atom\";\n\ninterface GameBoardProps {\n  board: number[][];\n  insert: (col: number) => void;\n  newGame: React.MouseEventHandler;\n  turn: C4Turn;\n  winner?: number;\n}\n\nconst GameBoard = ({\n  board,\n  insert,\n  winner,\n  turn,\n  newGame,\n}: GameBoardProps) => (\n  <Paper\n    elevation={2}\n    style={{\n      maxWidth: 900,\n      minWidth: 300,\n      display: \"block\",\n      margin: \"auto\",\n      paddingBottom: 5,\n    }}\n  >\n    <Header newGame={newGame} turn={turn} winner={winner} />\n    <Board board={board} insert={insert} turn={turn} />\n  </Paper>\n);\n\nexport default GameBoard;\n","import * as React from \"react\";\nimport { useAtom } from \"jotai\";\nimport Typography from \"@mui/material/Typography\";\nimport helpEvalConnect4 from \"./eval-connect4\";\nimport GameBoard from \"./GameBoard\";\nimport connect4Atom, {\n  MAX,\n  C4Turn,\n  immutableBoardCopy,\n  newConnect4Game,\n} from \"../../../jotai/connect4-atom\";\n\n/* Connect4  ->  GameBoard  ->  Header  ->  Piece\n *                         |->  Board   ->  Piece */\nconst Connect4 = React.memo(() => {\n  const [{ turn, board, winner }, setState] = useAtom(connect4Atom);\n\n  /** start a new game, reset the board and helper vars */\n  const newGame = (): void => {\n    setState(newConnect4Game());\n  };\n\n  /** function to evaluate a connect 4 board based off the last piece played\n   * NOTE: win condition will be within +-3 of the piece last played - O(N)\n   * updates state of winner and board for highlighting */\n  const evalConnect4 = (\n    row: number,\n    col: number,\n    evalBoard: number[][],\n  ): void => {\n    // variables to track streaks\n    const dp: [C4Turn, [number, number][], [number, number][]][] = [];\n    for (let i = 0; i < 4; i += 1) {\n      const a1: [number, number][] = [];\n      const a2: [number, number][] = [];\n      dp.push([0, a1, a2]);\n    }\n\n    // win will be contained w/in +-3 of the token placed\n    for (let i = -3; i <= 3; i += 1) {\n      // check for streaks\n      // vertical\n      helpEvalConnect4(evalBoard, row + i, col, dp[0]);\n      // horizontal\n      helpEvalConnect4(evalBoard, row, col + i, dp[1]);\n      // diagonal down\n      helpEvalConnect4(evalBoard, row + i, col + i, dp[2]);\n      // diagonal up\n      helpEvalConnect4(evalBoard, row - i, col + i, dp[3]);\n    }\n\n    const tempBoard = evalBoard.reduce(immutableBoardCopy, []);\n\n    dp.forEach((line) => {\n      if (line[MAX].length >= 4) {\n        line[MAX].forEach((t) => {\n          tempBoard[t[0]][t[1]] = 3;\n        });\n        setState({\n          turn,\n          winner: turn,\n          board: tempBoard,\n        });\n      }\n    });\n  };\n\n  /** insert piece into the board, piece falls to the bottom row every time */\n  const insert = (col: number) => {\n    // check to see if there is an empty spot left\n    if (!winner && !board[board.length - 1][col]) {\n      let i = 0;\n      // look for the lowest empty spot\n      while (board[i][col] !== 0) {\n        i += 1;\n      }\n      // insert element\n      const tempBoard = board.reduce(immutableBoardCopy, []);\n      tempBoard[i][col] = turn;\n      setState({\n        winner,\n        turn: turn === C4Turn.RED ? C4Turn.BLACK : C4Turn.RED,\n        board: tempBoard,\n      });\n      // check if win\n      evalConnect4(i, col, tempBoard);\n    }\n  };\n\n  return (\n    <>\n      <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n        Welcome to Ken&apos;s Connect4 Game\n      </Typography>\n      <GameBoard\n        board={board}\n        insert={insert}\n        newGame={newGame}\n        turn={turn}\n        winner={winner}\n      />\n    </>\n  );\n});\n\nConnect4.displayName = \"Connect4\";\n\nexport default Connect4;\n"],"names":["PIECE","STREAK","MAX","C4Turn","NEW_BOARD","immutableBoardCopy","acc","row","newConnect4Game","connect4Atom","atomWithStorage","evalConnect4","board","col","line","piece","getFabUtilityClass","slot","generateUtilityClass","fabClasses","generateUtilityClasses","useUtilityClasses","ownerState","color","variant","classes","size","slots","capitalize","composedClasses","composeClasses","FabRoot","styled","ButtonBase","prop","rootShouldForwardProp","props","styles","memoTheme","theme","_b","_a","createSimplePaletteValueFilter","Fab","React.forwardRef","inProps","ref","useDefaultProps","children","className","component","disabled","disableFocusRipple","focusVisibleClassName","other","clsx","getColor","red","lightGreen","Piece","React.memo","ariaLabel","enabled","onClick","style","jsx","ContentAdd","Board","turn","insert","gameBoard","arr","i","j","TableCell","TableRow","gameButtons","Table","TableHead","TableBody","Header","winner","newGame","Toolbar","jsxs","Typography","Button","GameBoard","Paper","Connect4","setState","useAtom","evalBoard","dp","a1","a2","helpEvalConnect4","tempBoard","t","Fragment"],"mappings":"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","x_google_ignoreList":[2,3]}