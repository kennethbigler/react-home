{"version":3,"file":"Job-DhllKfTn.js","sources":["../../src/components/resume/work/job-helpers.tsx","../../src/components/resume/work/Job.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Chip from \"@mui/material/Chip\";\nimport dateObj, { DateObj } from \"../../../apis/DateHelper\";\nimport { FORMAT } from \"../../common/timeline-card/timeline-consts\";\n\nexport const getCSV = (arr: string[] = []): React.ReactElement[] => {\n  const style = { marginRight: 5, marginBottom: 5 };\n  return arr.map((item) => <Chip key={item} label={item} style={style} />);\n};\n\nexport const showRange = (s: DateObj, e: DateObj, notes = \"\"): string => {\n  // start date\n  const start = s.format(FORMAT);\n  // end date, check if it is the present\n  const end = dateObj().diff(e, \"days\") < 1 ? \"Present\" : e.format(FORMAT);\n\n  // get the time range in years, months\n  const mon = (e.diff(s, \"months\") + 1) % 12;\n  const yr = e.diff(s, \"years\") + (mon === 0 ? 1 : 0);\n  const yRange = yr ? `${yr} year${yr > 1 ? \"s\" : \"\"}` : null;\n  const mRange = mon ? `${mon} month${mon > 1 ? \"s\" : \"\"}` : 0;\n  const range = yRange ? yRange + (mRange ? `, ${mRange}` : \"\") : mRange;\n\n  // return string for output\n  return `${start} - ${end} (${range}) ${notes}`;\n};\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid2\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandableCard from \"../../common/expandable-card\";\nimport { Job as JobType } from \"../../../constants/work\";\nimport { getCSV, showRange } from \"./job-helpers\";\n\ninterface JobProps {\n  job: JobType;\n}\n\nconst imgStyle: React.CSSProperties = {\n  width: \"100%\",\n  maxWidth: \"12em\",\n  height: \"auto\",\n  float: \"right\",\n};\n\nconst Job = ({ job }: JobProps) => (\n  <ExpandableCard\n    backgroundColor={job.color}\n    subtitle={job.title}\n    inverted={job.inverted}\n    title={`${job.company}${job.parent ? ` (${job.parent})` : \"\"}, ${job.location}`}\n  >\n    <Grid size={{ xs: 12, sm: 9 }}>\n      <Typography>{showRange(job.start, job.end, job.notes)}</Typography>\n      {job.expr && (\n        <ul>\n          {job.expr.map((desc, i) => (\n            <li key={`desc${i}`}>\n              <Typography>{desc}</Typography>\n            </li>\n          ))}\n        </ul>\n      )}\n      {job.tech && job.tech.length !== 0 && (\n        <>\n          <hr aria-hidden />\n          <Typography display=\"inline\">Technologies:&nbsp;</Typography>\n          {getCSV(job.tech)}\n        </>\n      )}\n      {job.skills && job.skills.length !== 0 && (\n        <>\n          <hr aria-hidden />\n          <Typography display=\"inline\">Skills:&nbsp;</Typography>\n          {getCSV(job.skills)}\n        </>\n      )}\n    </Grid>\n    {job.src && (\n      <Grid size={{ xs: 12, sm: 3 }}>\n        <img alt={job.alt} src={job.src} style={imgStyle} />\n      </Grid>\n    )}\n  </ExpandableCard>\n);\n\nexport default Job;\n"],"names":["getCSV","arr","style","item","jsx","Chip","showRange","e","notes","start","FORMAT","end","dateObj","mon","yr","yRange","mRange","range","imgStyle","Job","job","jsxs","ExpandableCard","Grid","Typography","desc","i","Fragment"],"mappings":"gTAKO,MAAMA,EAAS,CAACC,EAAgB,KAA6B,CAClE,MAAMC,EAAQ,CAAE,YAAa,EAAG,aAAc,CAAE,EACzC,OAAAD,EAAI,IAAKE,GAASC,EAAAA,IAACC,GAAgB,MAAOF,EAAM,MAAAD,CAAnB,EAAAC,CAAiC,CAAE,CACzE,EAEaG,EAAY,CAAC,EAAYC,EAAYC,EAAQ,KAAe,CAEjE,MAAAC,EAAQ,EAAE,OAAOC,CAAM,EAEvBC,EAAMC,IAAU,KAAKL,EAAG,MAAM,EAAI,EAAI,UAAYA,EAAE,OAAOG,CAAM,EAGjEG,GAAON,EAAE,KAAK,EAAG,QAAQ,EAAI,GAAK,GAClCO,EAAKP,EAAE,KAAK,EAAG,OAAO,GAAKM,IAAQ,EAAI,EAAI,GAC3CE,EAASD,EAAK,GAAGA,CAAE,QAAQA,EAAK,EAAI,IAAM,EAAE,GAAK,KACjDE,EAASH,EAAM,GAAGA,CAAG,SAASA,EAAM,EAAI,IAAM,EAAE,GAAK,EACrDI,EAAQF,EAASA,GAAUC,EAAS,KAAKA,CAAM,GAAK,IAAMA,EAGhE,MAAO,GAAGP,CAAK,MAAME,CAAG,KAAKM,CAAK,KAAKT,CAAK,EAC9C,ECdMU,EAAgC,CACpC,MAAO,OACP,SAAU,OACV,OAAQ,OACR,MAAO,OACT,EAEMC,EAAM,CAAC,CAAE,IAAAC,CAAA,IACbC,EAAA,KAACC,EAAA,CACC,gBAAiBF,EAAI,MACrB,SAAUA,EAAI,MACd,SAAUA,EAAI,SACd,MAAO,GAAGA,EAAI,OAAO,GAAGA,EAAI,OAAS,KAAKA,EAAI,MAAM,IAAM,EAAE,KAAKA,EAAI,QAAQ,GAE7E,SAAA,CAAAC,OAACE,GAAK,KAAM,CAAE,GAAI,GAAI,GAAI,CACxB,EAAA,SAAA,CAACnB,EAAAA,IAAAoB,EAAA,CAAY,WAAUJ,EAAI,MAAOA,EAAI,IAAKA,EAAI,KAAK,CAAE,CAAA,EACrDA,EAAI,MACFhB,MAAA,KAAA,CACE,WAAI,KAAK,IAAI,CAACqB,EAAMC,UAClB,KACC,CAAA,SAAAtB,EAAA,IAACoB,GAAY,SAAKC,CAAA,CAAA,CAAA,EADX,OAAOC,CAAC,EAEjB,CACD,CACH,CAAA,EAEDN,EAAI,MAAQA,EAAI,KAAK,SAAW,GAE7BC,EAAA,KAAAM,WAAA,CAAA,SAAA,CAACvB,EAAAA,IAAA,KAAA,CAAG,cAAW,EAAC,CAAA,EACfA,EAAA,IAAAoB,EAAA,CAAW,QAAQ,SAAS,SAAmB,iBAAA,EAC/CxB,EAAOoB,EAAI,IAAI,CAAA,EAClB,EAEDA,EAAI,QAAUA,EAAI,OAAO,SAAW,GAEjCC,EAAA,KAAAM,WAAA,CAAA,SAAA,CAACvB,EAAAA,IAAA,KAAA,CAAG,cAAW,EAAC,CAAA,EACfA,EAAA,IAAAoB,EAAA,CAAW,QAAQ,SAAS,SAAa,WAAA,EACzCxB,EAAOoB,EAAI,MAAM,CAAA,CACpB,CAAA,CAAA,EAEJ,EACCA,EAAI,KACFhB,MAAAmB,EAAA,CAAK,KAAM,CAAE,GAAI,GAAI,GAAI,GACxB,SAACnB,EAAA,IAAA,MAAA,CAAI,IAAKgB,EAAI,IAAK,IAAKA,EAAI,IAAK,MAAOF,CAAU,CAAA,CACpD,CAAA,CAAA,CAAA,CAEJ"}